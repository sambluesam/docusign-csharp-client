<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DocuSign.eSign</name>
    </assembly>
    <members>
        <member name="T:DocuSign.eSign.Api.IAccountsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Api.IAccountsApi.GetAccountInformation(System.String,DocuSign.eSign.Api.AccountsApi.GetAccountInformationOptions)">
            <summary>
            Retrieves the account information for the specified account.
            </summary>
            <remarks>
            Retrieves the account information for the specified account.\n\n**Response**\nThe `canUpgrade` property contains is a Boolean that indicates whether the account can be upgraded through the API.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="options">Options for modifying the behavior of the function.</param>
             <returns>1AccountInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IAccountsApi.GetAccountInformationWithHttpInfo(System.String,DocuSign.eSign.Api.AccountsApi.GetAccountInformationOptions)">
             <summary>
             Retrieves the account information for the specified account.
             </summary>
             <remarks>
             Retrieves the account information for the specified account.\n\n**Response**\nThe `canUpgrade` property contains is a Boolean that indicates whether the account can be upgraded through the API.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="options">Options for modifying the behavior of the function.</param>
             <returns>2ApiResponse of AccountInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IAccountsApi.GetAccountInformationAsync(System.String,DocuSign.eSign.Api.AccountsApi.GetAccountInformationOptions)">
             <summary>
             Retrieves the account information for the specified account.
             </summary>
             <remarks>
             Retrieves the account information for the specified account.\n\n**Response**\nThe `canUpgrade` property contains is a Boolean that indicates whether the account can be upgraded through the API.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="options">Options for modifying the behavior of the function.</param>
             <returns>3Task of AccountInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IAccountsApi.GetAccountInformationAsyncWithHttpInfo(System.String,DocuSign.eSign.Api.AccountsApi.GetAccountInformationOptions)">
             <summary>
             Retrieves the account information for the specified account.
             </summary>
             <remarks>
             Retrieves the account information for the specified account.\n\n**Response**\nThe `canUpgrade` property contains is a Boolean that indicates whether the account can be upgraded through the API.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="options">Options for modifying the behavior of the function.</param>
             <returns>4Task of ApiResponse (AccountInformation)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IAccountsApi.ListCustomFields(System.String)">
            <summary>
            Gets a list of custom fields associated with the account.
            </summary>
            <remarks>
            Retrieves a list of envelope custom fields associated with the account. You can use these fields in the envelopes for your account to record information about the envelope, help search for envelopes and track information. The envelope custom fields are shown in the Envelope Settings section when a user is creating an envelope in the DocuSign member console. The envelope custom fields are not seen by the envelope recipients.\n\nThere are two types of envelope custom fields, text, and list. A text custom field lets the sender enter the value for the field. The list custom field lets the sender select the value of the field from a list you provide.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param>
             <returns>1CustomFields</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IAccountsApi.ListCustomFieldsWithHttpInfo(System.String)">
             <summary>
             Gets a list of custom fields associated with the account.
             </summary>
             <remarks>
             Retrieves a list of envelope custom fields associated with the account. You can use these fields in the envelopes for your account to record information about the envelope, help search for envelopes and track information. The envelope custom fields are shown in the Envelope Settings section when a user is creating an envelope in the DocuSign member console. The envelope custom fields are not seen by the envelope recipients.\n\nThere are two types of envelope custom fields, text, and list. A text custom field lets the sender enter the value for the field. The list custom field lets the sender select the value of the field from a list you provide.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param>
             <returns>2ApiResponse of CustomFields</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IAccountsApi.ListCustomFieldsAsync(System.String)">
             <summary>
             Gets a list of custom fields associated with the account.
             </summary>
             <remarks>
             Retrieves a list of envelope custom fields associated with the account. You can use these fields in the envelopes for your account to record information about the envelope, help search for envelopes and track information. The envelope custom fields are shown in the Envelope Settings section when a user is creating an envelope in the DocuSign member console. The envelope custom fields are not seen by the envelope recipients.\n\nThere are two types of envelope custom fields, text, and list. A text custom field lets the sender enter the value for the field. The list custom field lets the sender select the value of the field from a list you provide.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param>
             <returns>3Task of CustomFields</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IAccountsApi.ListCustomFieldsAsyncWithHttpInfo(System.String)">
             <summary>
             Gets a list of custom fields associated with the account.
             </summary>
             <remarks>
             Retrieves a list of envelope custom fields associated with the account. You can use these fields in the envelopes for your account to record information about the envelope, help search for envelopes and track information. The envelope custom fields are shown in the Envelope Settings section when a user is creating an envelope in the DocuSign member console. The envelope custom fields are not seen by the envelope recipients.\n\nThere are two types of envelope custom fields, text, and list. A text custom field lets the sender enter the value for the field. The list custom field lets the sender select the value of the field from a list you provide.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param>
             <returns>4Task of ApiResponse (CustomFields)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IAccountsApi.ListSettings(System.String)">
            <summary>
            Gets account settings information.
            </summary>
            <remarks>
            Retrieves the account settings information for the specified account.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param>
             <returns>1AccountSettingsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IAccountsApi.ListSettingsWithHttpInfo(System.String)">
             <summary>
             Gets account settings information.
             </summary>
             <remarks>
             Retrieves the account settings information for the specified account.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param>
             <returns>2ApiResponse of AccountSettingsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IAccountsApi.ListSettingsAsync(System.String)">
             <summary>
             Gets account settings information.
             </summary>
             <remarks>
             Retrieves the account settings information for the specified account.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param>
             <returns>3Task of AccountSettingsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IAccountsApi.ListSettingsAsyncWithHttpInfo(System.String)">
             <summary>
             Gets account settings information.
             </summary>
             <remarks>
             Retrieves the account settings information for the specified account.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param>
             <returns>4Task of ApiResponse (AccountSettingsInformation)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IAccountsApi.UpdateSettings(System.String,DocuSign.eSign.Model.AccountSettingsInformation)">
            <summary>
            Updates the account settings for an account.
            </summary>
            <remarks>
            Updates the account settings for the specified account.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="accountSettingsInformation">TBD Description</param>
             <returns>1</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IAccountsApi.UpdateSettingsWithHttpInfo(System.String,DocuSign.eSign.Model.AccountSettingsInformation)">
             <summary>
             Updates the account settings for an account.
             </summary>
             <remarks>
             Updates the account settings for the specified account.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="accountSettingsInformation">TBD Description</param>
             <returns>2ApiResponse of Object(void)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IAccountsApi.UpdateSettingsAsync(System.String,DocuSign.eSign.Model.AccountSettingsInformation)">
             <summary>
             Updates the account settings for an account.
             </summary>
             <remarks>
             Updates the account settings for the specified account.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="accountSettingsInformation">TBD Description</param>
             <returns>3Task of void</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IAccountsApi.UpdateSettingsAsyncWithHttpInfo(System.String,DocuSign.eSign.Model.AccountSettingsInformation)">
             <summary>
             Updates the account settings for an account.
             </summary>
             <remarks>
             Updates the account settings for the specified account.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="accountSettingsInformation">TBD Description</param>
             <returns>4Task of ApiResponse</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IAccountsApi.ListSharedAccess(System.String)">
            <summary>
            Reserved: Gets the shared item status for one or more users.
            </summary>
            <remarks>
            Reserved: Retrieves shared item status for one or more users and types of items.\n\nUsers with account administration privileges can retrieve shared access information for all account users. Users without account administrator privileges can only retrieve shared access information for themselves and the returned information is limited to the retrieving the status of all members of the account that are sharing their folders to the user. This is equivalent to setting the shared=shared_from.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param>
             <returns>1AccountSharedAccess</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IAccountsApi.ListSharedAccessWithHttpInfo(System.String)">
             <summary>
             Reserved: Gets the shared item status for one or more users.
             </summary>
             <remarks>
             Reserved: Retrieves shared item status for one or more users and types of items.\n\nUsers with account administration privileges can retrieve shared access information for all account users. Users without account administrator privileges can only retrieve shared access information for themselves and the returned information is limited to the retrieving the status of all members of the account that are sharing their folders to the user. This is equivalent to setting the shared=shared_from.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param>
             <returns>2ApiResponse of AccountSharedAccess</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IAccountsApi.ListSharedAccessAsync(System.String)">
             <summary>
             Reserved: Gets the shared item status for one or more users.
             </summary>
             <remarks>
             Reserved: Retrieves shared item status for one or more users and types of items.\n\nUsers with account administration privileges can retrieve shared access information for all account users. Users without account administrator privileges can only retrieve shared access information for themselves and the returned information is limited to the retrieving the status of all members of the account that are sharing their folders to the user. This is equivalent to setting the shared=shared_from.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param>
             <returns>3Task of AccountSharedAccess</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IAccountsApi.ListSharedAccessAsyncWithHttpInfo(System.String)">
             <summary>
             Reserved: Gets the shared item status for one or more users.
             </summary>
             <remarks>
             Reserved: Retrieves shared item status for one or more users and types of items.\n\nUsers with account administration privileges can retrieve shared access information for all account users. Users without account administrator privileges can only retrieve shared access information for themselves and the returned information is limited to the retrieving the status of all members of the account that are sharing their folders to the user. This is equivalent to setting the shared=shared_from.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param>
             <returns>4Task of ApiResponse (AccountSharedAccess)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IAccountsApi.ListUnsupportedFileTypes(System.String)">
            <summary>
            Gets a list of unsupported file types.
            </summary>
            <remarks>
            Retrieves a list of file types (mime-types and file-extensions) that are not supported for upload through the DocuSign system.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param>
             <returns>1FileTypeList</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IAccountsApi.ListUnsupportedFileTypesWithHttpInfo(System.String)">
             <summary>
             Gets a list of unsupported file types.
             </summary>
             <remarks>
             Retrieves a list of file types (mime-types and file-extensions) that are not supported for upload through the DocuSign system.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param>
             <returns>2ApiResponse of FileTypeList</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IAccountsApi.ListUnsupportedFileTypesAsync(System.String)">
             <summary>
             Gets a list of unsupported file types.
             </summary>
             <remarks>
             Retrieves a list of file types (mime-types and file-extensions) that are not supported for upload through the DocuSign system.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param>
             <returns>3Task of FileTypeList</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IAccountsApi.ListUnsupportedFileTypesAsyncWithHttpInfo(System.String)">
             <summary>
             Gets a list of unsupported file types.
             </summary>
             <remarks>
             Retrieves a list of file types (mime-types and file-extensions) that are not supported for upload through the DocuSign system.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param>
             <returns>4Task of ApiResponse (FileTypeList)</returns>
        </member>
        <member name="T:DocuSign.eSign.Api.AccountsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Api.AccountsApi.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.eSign.Api.AccountsApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DocuSign.eSign.Api.AccountsApi.#ctor(DocuSign.eSign.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.eSign.Api.AccountsApi"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.eSign.Api.AccountsApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:DocuSign.eSign.Api.AccountsApi.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:DocuSign.eSign.Api.AccountsApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="M:DocuSign.eSign.Api.AccountsApi.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.AccountsApi.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="T:DocuSign.eSign.Api.AccountsApi.GetAccountInformationOptions">
            <summary>
            Retrieves the account information for the specified account. Retrieves the account information for the specified account.\n\n**Response**\nThe `canUpgrade` property contains is a Boolean that indicates whether the account can be upgraded through the API.
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Api.AccountsApi.GetAccountInformationOptions.includeAccountSettings">
            When set to **true**, includes the account settings for the account in the response. 
        </member>
        <member name="P:DocuSign.eSign.Api.AccountsApi.GetAccountInformationOptions.op">
            
        </member>
        <member name="M:DocuSign.eSign.Api.AccountsApi.GetAccountInformation(System.String,DocuSign.eSign.Api.AccountsApi.GetAccountInformationOptions)">
             <summary>
             Retrieves the account information for the specified account. Retrieves the account information for the specified account.\n\n**Response**\nThe `canUpgrade` property contains is a Boolean that indicates whether the account can be upgraded through the API.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="options">Options for modifying the behavior of the function.</param>
             <returns>5AccountInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.AccountsApi.GetAccountInformationWithHttpInfo(System.String,DocuSign.eSign.Api.AccountsApi.GetAccountInformationOptions)">
             <summary>
             Retrieves the account information for the specified account. Retrieves the account information for the specified account.\n\n**Response**\nThe `canUpgrade` property contains is a Boolean that indicates whether the account can be upgraded through the API.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="options">Options for modifying the behavior of the function.</param>
             <returns>6ApiResponse of AccountInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.AccountsApi.GetAccountInformationAsync(System.String,DocuSign.eSign.Api.AccountsApi.GetAccountInformationOptions)">
             <summary>
             Retrieves the account information for the specified account. Retrieves the account information for the specified account.\n\n**Response**\nThe `canUpgrade` property contains is a Boolean that indicates whether the account can be upgraded through the API.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="options">Options for modifying the behavior of the function.</param>
             <returns>7Task of AccountInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.AccountsApi.GetAccountInformationAsyncWithHttpInfo(System.String,DocuSign.eSign.Api.AccountsApi.GetAccountInformationOptions)">
             <summary>
             Retrieves the account information for the specified account. Retrieves the account information for the specified account.\n\n**Response**\nThe `canUpgrade` property contains is a Boolean that indicates whether the account can be upgraded through the API.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="options">Options for modifying the behavior of the function.</param>
             <returns>8Task of ApiResponse (AccountInformation)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.AccountsApi.ListCustomFields(System.String)">
             <summary>
             Gets a list of custom fields associated with the account. Retrieves a list of envelope custom fields associated with the account. You can use these fields in the envelopes for your account to record information about the envelope, help search for envelopes and track information. The envelope custom fields are shown in the Envelope Settings section when a user is creating an envelope in the DocuSign member console. The envelope custom fields are not seen by the envelope recipients.\n\nThere are two types of envelope custom fields, text, and list. A text custom field lets the sender enter the value for the field. The list custom field lets the sender select the value of the field from a list you provide.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param>
             <returns>5CustomFields</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.AccountsApi.ListCustomFieldsWithHttpInfo(System.String)">
             <summary>
             Gets a list of custom fields associated with the account. Retrieves a list of envelope custom fields associated with the account. You can use these fields in the envelopes for your account to record information about the envelope, help search for envelopes and track information. The envelope custom fields are shown in the Envelope Settings section when a user is creating an envelope in the DocuSign member console. The envelope custom fields are not seen by the envelope recipients.\n\nThere are two types of envelope custom fields, text, and list. A text custom field lets the sender enter the value for the field. The list custom field lets the sender select the value of the field from a list you provide.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param>
             <returns>6ApiResponse of CustomFields</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.AccountsApi.ListCustomFieldsAsync(System.String)">
             <summary>
             Gets a list of custom fields associated with the account. Retrieves a list of envelope custom fields associated with the account. You can use these fields in the envelopes for your account to record information about the envelope, help search for envelopes and track information. The envelope custom fields are shown in the Envelope Settings section when a user is creating an envelope in the DocuSign member console. The envelope custom fields are not seen by the envelope recipients.\n\nThere are two types of envelope custom fields, text, and list. A text custom field lets the sender enter the value for the field. The list custom field lets the sender select the value of the field from a list you provide.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param>
             <returns>7Task of CustomFields</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.AccountsApi.ListCustomFieldsAsyncWithHttpInfo(System.String)">
             <summary>
             Gets a list of custom fields associated with the account. Retrieves a list of envelope custom fields associated with the account. You can use these fields in the envelopes for your account to record information about the envelope, help search for envelopes and track information. The envelope custom fields are shown in the Envelope Settings section when a user is creating an envelope in the DocuSign member console. The envelope custom fields are not seen by the envelope recipients.\n\nThere are two types of envelope custom fields, text, and list. A text custom field lets the sender enter the value for the field. The list custom field lets the sender select the value of the field from a list you provide.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param>
             <returns>8Task of ApiResponse (CustomFields)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.AccountsApi.ListSettings(System.String)">
             <summary>
             Gets account settings information. Retrieves the account settings information for the specified account.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param>
             <returns>5AccountSettingsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.AccountsApi.ListSettingsWithHttpInfo(System.String)">
             <summary>
             Gets account settings information. Retrieves the account settings information for the specified account.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param>
             <returns>6ApiResponse of AccountSettingsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.AccountsApi.ListSettingsAsync(System.String)">
             <summary>
             Gets account settings information. Retrieves the account settings information for the specified account.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param>
             <returns>7Task of AccountSettingsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.AccountsApi.ListSettingsAsyncWithHttpInfo(System.String)">
             <summary>
             Gets account settings information. Retrieves the account settings information for the specified account.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param>
             <returns>8Task of ApiResponse (AccountSettingsInformation)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.AccountsApi.UpdateSettings(System.String,DocuSign.eSign.Model.AccountSettingsInformation)">
             <summary>
             Updates the account settings for an account. Updates the account settings for the specified account.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="accountSettingsInformation">TBD Description</param>
             <returns>5</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.AccountsApi.UpdateSettingsWithHttpInfo(System.String,DocuSign.eSign.Model.AccountSettingsInformation)">
             <summary>
             Updates the account settings for an account. Updates the account settings for the specified account.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="accountSettingsInformation">TBD Description</param>
             <returns>6ApiResponse of Object(void)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.AccountsApi.UpdateSettingsAsync(System.String,DocuSign.eSign.Model.AccountSettingsInformation)">
             <summary>
             Updates the account settings for an account. Updates the account settings for the specified account.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="accountSettingsInformation">TBD Description</param>
             <returns>7Task of void</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.AccountsApi.UpdateSettingsAsyncWithHttpInfo(System.String,DocuSign.eSign.Model.AccountSettingsInformation)">
             <summary>
             Updates the account settings for an account. Updates the account settings for the specified account.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="accountSettingsInformation">TBD Description</param>
             <returns>8Task of ApiResponse</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.AccountsApi.ListSharedAccess(System.String)">
             <summary>
             Reserved: Gets the shared item status for one or more users. Reserved: Retrieves shared item status for one or more users and types of items.\n\nUsers with account administration privileges can retrieve shared access information for all account users. Users without account administrator privileges can only retrieve shared access information for themselves and the returned information is limited to the retrieving the status of all members of the account that are sharing their folders to the user. This is equivalent to setting the shared=shared_from.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param>
             <returns>5AccountSharedAccess</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.AccountsApi.ListSharedAccessWithHttpInfo(System.String)">
             <summary>
             Reserved: Gets the shared item status for one or more users. Reserved: Retrieves shared item status for one or more users and types of items.\n\nUsers with account administration privileges can retrieve shared access information for all account users. Users without account administrator privileges can only retrieve shared access information for themselves and the returned information is limited to the retrieving the status of all members of the account that are sharing their folders to the user. This is equivalent to setting the shared=shared_from.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param>
             <returns>6ApiResponse of AccountSharedAccess</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.AccountsApi.ListSharedAccessAsync(System.String)">
             <summary>
             Reserved: Gets the shared item status for one or more users. Reserved: Retrieves shared item status for one or more users and types of items.\n\nUsers with account administration privileges can retrieve shared access information for all account users. Users without account administrator privileges can only retrieve shared access information for themselves and the returned information is limited to the retrieving the status of all members of the account that are sharing their folders to the user. This is equivalent to setting the shared=shared_from.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param>
             <returns>7Task of AccountSharedAccess</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.AccountsApi.ListSharedAccessAsyncWithHttpInfo(System.String)">
             <summary>
             Reserved: Gets the shared item status for one or more users. Reserved: Retrieves shared item status for one or more users and types of items.\n\nUsers with account administration privileges can retrieve shared access information for all account users. Users without account administrator privileges can only retrieve shared access information for themselves and the returned information is limited to the retrieving the status of all members of the account that are sharing their folders to the user. This is equivalent to setting the shared=shared_from.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param>
             <returns>8Task of ApiResponse (AccountSharedAccess)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.AccountsApi.ListUnsupportedFileTypes(System.String)">
             <summary>
             Gets a list of unsupported file types. Retrieves a list of file types (mime-types and file-extensions) that are not supported for upload through the DocuSign system.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param>
             <returns>5FileTypeList</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.AccountsApi.ListUnsupportedFileTypesWithHttpInfo(System.String)">
             <summary>
             Gets a list of unsupported file types. Retrieves a list of file types (mime-types and file-extensions) that are not supported for upload through the DocuSign system.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param>
             <returns>6ApiResponse of FileTypeList</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.AccountsApi.ListUnsupportedFileTypesAsync(System.String)">
             <summary>
             Gets a list of unsupported file types. Retrieves a list of file types (mime-types and file-extensions) that are not supported for upload through the DocuSign system.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param>
             <returns>7Task of FileTypeList</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.AccountsApi.ListUnsupportedFileTypesAsyncWithHttpInfo(System.String)">
             <summary>
             Gets a list of unsupported file types. Retrieves a list of file types (mime-types and file-extensions) that are not supported for upload through the DocuSign system.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param>
             <returns>8Task of ApiResponse (FileTypeList)</returns>
        </member>
        <member name="T:DocuSign.eSign.Api.IAuthenticationApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Api.IAuthenticationApi.Login(DocuSign.eSign.Api.AuthenticationApi.LoginOptions)">
            <summary>
            Gets login information for a specified user.
            </summary>
            <remarks>
            Retrieves login information for a specified user. Each account that is associated with the login credentials is listed. You can use the returned information to determine whether a user is authenticated and select an account to use in future operations.  \n\nThe `baseUrl` property, returned in the response, is used in all future API calls as the base of the request URL. The `baseUrl` property contains the DocuSign server, the API version, and the `accountId` property that is used for the login. This request uses your DocuSign credentials to retrieve the account information.
            </remarks>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>1LoginInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IAuthenticationApi.LoginWithHttpInfo(DocuSign.eSign.Api.AuthenticationApi.LoginOptions)">
            <summary>
            Gets login information for a specified user.
            </summary>
            <remarks>
            Retrieves login information for a specified user. Each account that is associated with the login credentials is listed. You can use the returned information to determine whether a user is authenticated and select an account to use in future operations.  \n\nThe `baseUrl` property, returned in the response, is used in all future API calls as the base of the request URL. The `baseUrl` property contains the DocuSign server, the API version, and the `accountId` property that is used for the login. This request uses your DocuSign credentials to retrieve the account information.
            </remarks>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>2ApiResponse of LoginInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IAuthenticationApi.LoginAsync(DocuSign.eSign.Api.AuthenticationApi.LoginOptions)">
            <summary>
            Gets login information for a specified user.
            </summary>
            <remarks>
            Retrieves login information for a specified user. Each account that is associated with the login credentials is listed. You can use the returned information to determine whether a user is authenticated and select an account to use in future operations.  \n\nThe `baseUrl` property, returned in the response, is used in all future API calls as the base of the request URL. The `baseUrl` property contains the DocuSign server, the API version, and the `accountId` property that is used for the login. This request uses your DocuSign credentials to retrieve the account information.
            </remarks>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>3Task of LoginInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IAuthenticationApi.LoginAsyncWithHttpInfo(DocuSign.eSign.Api.AuthenticationApi.LoginOptions)">
            <summary>
            Gets login information for a specified user.
            </summary>
            <remarks>
            Retrieves login information for a specified user. Each account that is associated with the login credentials is listed. You can use the returned information to determine whether a user is authenticated and select an account to use in future operations.  \n\nThe `baseUrl` property, returned in the response, is used in all future API calls as the base of the request URL. The `baseUrl` property contains the DocuSign server, the API version, and the `accountId` property that is used for the login. This request uses your DocuSign credentials to retrieve the account information.
            </remarks>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>4Task of ApiResponse (LoginInformation)</returns>
        </member>
        <member name="T:DocuSign.eSign.Api.AuthenticationApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Api.AuthenticationApi.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.eSign.Api.AuthenticationApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DocuSign.eSign.Api.AuthenticationApi.#ctor(DocuSign.eSign.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.eSign.Api.AuthenticationApi"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.eSign.Api.AuthenticationApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:DocuSign.eSign.Api.AuthenticationApi.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:DocuSign.eSign.Api.AuthenticationApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="M:DocuSign.eSign.Api.AuthenticationApi.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.AuthenticationApi.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="T:DocuSign.eSign.Api.AuthenticationApi.LoginOptions">
            <summary>
            Gets login information for a specified user. Retrieves login information for a specified user. Each account that is associated with the login credentials is listed. You can use the returned information to determine whether a user is authenticated and select an account to use in future operations.  \n\nThe `baseUrl` property, returned in the response, is used in all future API calls as the base of the request URL. The `baseUrl` property contains the DocuSign server, the API version, and the `accountId` property that is used for the login. This request uses your DocuSign credentials to retrieve the account information.
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Api.AuthenticationApi.LoginOptions.loginSettings">
            Determines whether login settings are returned in the response.\n\nValid Values:\n\n* all -  All the login settings are returned. \n* none - no login settings are returned. 
        </member>
        <member name="P:DocuSign.eSign.Api.AuthenticationApi.LoginOptions.apiPassword">
            When set to **true**, shows the account API password in the response. 
        </member>
        <member name="P:DocuSign.eSign.Api.AuthenticationApi.LoginOptions.includeAccountIdGuid">
            When set to **true**, shows the account ID GUID in the response. 
        </member>
        <member name="M:DocuSign.eSign.Api.AuthenticationApi.Login(DocuSign.eSign.Api.AuthenticationApi.LoginOptions)">
            <summary>
            Gets login information for a specified user. Retrieves login information for a specified user. Each account that is associated with the login credentials is listed. You can use the returned information to determine whether a user is authenticated and select an account to use in future operations.  \n\nThe `baseUrl` property, returned in the response, is used in all future API calls as the base of the request URL. The `baseUrl` property contains the DocuSign server, the API version, and the `accountId` property that is used for the login. This request uses your DocuSign credentials to retrieve the account information.
            </summary>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>5LoginInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.AuthenticationApi.LoginWithHttpInfo(DocuSign.eSign.Api.AuthenticationApi.LoginOptions)">
            <summary>
            Gets login information for a specified user. Retrieves login information for a specified user. Each account that is associated with the login credentials is listed. You can use the returned information to determine whether a user is authenticated and select an account to use in future operations.  \n\nThe `baseUrl` property, returned in the response, is used in all future API calls as the base of the request URL. The `baseUrl` property contains the DocuSign server, the API version, and the `accountId` property that is used for the login. This request uses your DocuSign credentials to retrieve the account information.
            </summary>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>6ApiResponse of LoginInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.AuthenticationApi.LoginAsync(DocuSign.eSign.Api.AuthenticationApi.LoginOptions)">
            <summary>
            Gets login information for a specified user. Retrieves login information for a specified user. Each account that is associated with the login credentials is listed. You can use the returned information to determine whether a user is authenticated and select an account to use in future operations.  \n\nThe `baseUrl` property, returned in the response, is used in all future API calls as the base of the request URL. The `baseUrl` property contains the DocuSign server, the API version, and the `accountId` property that is used for the login. This request uses your DocuSign credentials to retrieve the account information.
            </summary>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>7Task of LoginInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.AuthenticationApi.LoginAsyncWithHttpInfo(DocuSign.eSign.Api.AuthenticationApi.LoginOptions)">
            <summary>
            Gets login information for a specified user. Retrieves login information for a specified user. Each account that is associated with the login credentials is listed. You can use the returned information to determine whether a user is authenticated and select an account to use in future operations.  \n\nThe `baseUrl` property, returned in the response, is used in all future API calls as the base of the request URL. The `baseUrl` property contains the DocuSign server, the API version, and the `accountId` property that is used for the login. This request uses your DocuSign credentials to retrieve the account information.
            </summary>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>8Task of ApiResponse (LoginInformation)</returns>
        </member>
        <member name="T:DocuSign.eSign.Api.ICustomTabsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Api.ICustomTabsApi.List(System.String,DocuSign.eSign.Api.CustomTabsApi.ListOptions)">
            <summary>
            Gets a list of all account tabs.
            </summary>
            <remarks>
            Retrieves a list of all tabs associated with the account.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="options">Options for modifying the behavior of the function.</param>
             <returns>1TabMetadataList</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ICustomTabsApi.ListWithHttpInfo(System.String,DocuSign.eSign.Api.CustomTabsApi.ListOptions)">
             <summary>
             Gets a list of all account tabs.
             </summary>
             <remarks>
             Retrieves a list of all tabs associated with the account.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="options">Options for modifying the behavior of the function.</param>
             <returns>2ApiResponse of TabMetadataList</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ICustomTabsApi.ListAsync(System.String,DocuSign.eSign.Api.CustomTabsApi.ListOptions)">
             <summary>
             Gets a list of all account tabs.
             </summary>
             <remarks>
             Retrieves a list of all tabs associated with the account.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="options">Options for modifying the behavior of the function.</param>
             <returns>3Task of TabMetadataList</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ICustomTabsApi.ListAsyncWithHttpInfo(System.String,DocuSign.eSign.Api.CustomTabsApi.ListOptions)">
             <summary>
             Gets a list of all account tabs.
             </summary>
             <remarks>
             Retrieves a list of all tabs associated with the account.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="options">Options for modifying the behavior of the function.</param>
             <returns>4Task of ApiResponse (TabMetadataList)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ICustomTabsApi.Create(System.String,DocuSign.eSign.Model.TabMetadata)">
            <summary>
            Creates a custom tab.
            </summary>
            <remarks>
            Creates a tab with pre-defined properties, such as a text tab with a certain font type and validation pattern. Users can access the custom tabs when sending documents through the DocuSign web application.\n\nCustom tabs can be created for approve, checkbox, company, date, date signed, decline, email, email address, envelope ID, first name, formula, full name, initial here, last name, list, note, number, radio, sign here, signer attachment, SSN, text, title, and zip tabs.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="tabMetadata">TBD Description</param>
             <returns>1TabMetadata</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ICustomTabsApi.CreateWithHttpInfo(System.String,DocuSign.eSign.Model.TabMetadata)">
             <summary>
             Creates a custom tab.
             </summary>
             <remarks>
             Creates a tab with pre-defined properties, such as a text tab with a certain font type and validation pattern. Users can access the custom tabs when sending documents through the DocuSign web application.\n\nCustom tabs can be created for approve, checkbox, company, date, date signed, decline, email, email address, envelope ID, first name, formula, full name, initial here, last name, list, note, number, radio, sign here, signer attachment, SSN, text, title, and zip tabs.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="tabMetadata">TBD Description</param>
             <returns>2ApiResponse of TabMetadata</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ICustomTabsApi.CreateAsync(System.String,DocuSign.eSign.Model.TabMetadata)">
             <summary>
             Creates a custom tab.
             </summary>
             <remarks>
             Creates a tab with pre-defined properties, such as a text tab with a certain font type and validation pattern. Users can access the custom tabs when sending documents through the DocuSign web application.\n\nCustom tabs can be created for approve, checkbox, company, date, date signed, decline, email, email address, envelope ID, first name, formula, full name, initial here, last name, list, note, number, radio, sign here, signer attachment, SSN, text, title, and zip tabs.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="tabMetadata">TBD Description</param>
             <returns>3Task of TabMetadata</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ICustomTabsApi.CreateAsyncWithHttpInfo(System.String,DocuSign.eSign.Model.TabMetadata)">
             <summary>
             Creates a custom tab.
             </summary>
             <remarks>
             Creates a tab with pre-defined properties, such as a text tab with a certain font type and validation pattern. Users can access the custom tabs when sending documents through the DocuSign web application.\n\nCustom tabs can be created for approve, checkbox, company, date, date signed, decline, email, email address, envelope ID, first name, formula, full name, initial here, last name, list, note, number, radio, sign here, signer attachment, SSN, text, title, and zip tabs.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="tabMetadata">TBD Description</param>
             <returns>4Task of ApiResponse (TabMetadata)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ICustomTabsApi.Get(System.String,System.String)">
            <summary>
            Gets custom tab information.
            </summary>
            <remarks>
            Retrieves information about the requested custom tab on the specified account.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="customTabId"></param>
             <returns>1TabMetadata</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ICustomTabsApi.GetWithHttpInfo(System.String,System.String)">
             <summary>
             Gets custom tab information.
             </summary>
             <remarks>
             Retrieves information about the requested custom tab on the specified account.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="customTabId"></param>
             <returns>2ApiResponse of TabMetadata</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ICustomTabsApi.GetAsync(System.String,System.String)">
             <summary>
             Gets custom tab information.
             </summary>
             <remarks>
             Retrieves information about the requested custom tab on the specified account.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="customTabId"></param>
             <returns>3Task of TabMetadata</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ICustomTabsApi.GetAsyncWithHttpInfo(System.String,System.String)">
             <summary>
             Gets custom tab information.
             </summary>
             <remarks>
             Retrieves information about the requested custom tab on the specified account.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="customTabId"></param>
             <returns>4Task of ApiResponse (TabMetadata)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ICustomTabsApi.Update(System.String,System.String,DocuSign.eSign.Model.TabMetadata)">
            <summary>
            Updates custom tab information.
            </summary>
            <remarks>
            Updates the information in a custom tab for the specified account.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="customTabId"></param> <param name="tabMetadata">TBD Description</param>
             <returns>1TabMetadata</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ICustomTabsApi.UpdateWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.TabMetadata)">
             <summary>
             Updates custom tab information.
             </summary>
             <remarks>
             Updates the information in a custom tab for the specified account.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="customTabId"></param> <param name="tabMetadata">TBD Description</param>
             <returns>2ApiResponse of TabMetadata</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ICustomTabsApi.UpdateAsync(System.String,System.String,DocuSign.eSign.Model.TabMetadata)">
             <summary>
             Updates custom tab information.
             </summary>
             <remarks>
             Updates the information in a custom tab for the specified account.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="customTabId"></param> <param name="tabMetadata">TBD Description</param>
             <returns>3Task of TabMetadata</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ICustomTabsApi.UpdateAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.TabMetadata)">
             <summary>
             Updates custom tab information.
             </summary>
             <remarks>
             Updates the information in a custom tab for the specified account.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="customTabId"></param> <param name="tabMetadata">TBD Description</param>
             <returns>4Task of ApiResponse (TabMetadata)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ICustomTabsApi.Delete(System.String,System.String)">
            <summary>
            Deletes custom tab information.
            </summary>
            <remarks>
            Deletes the custom from the specified account.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="customTabId"></param>
             <returns>1</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ICustomTabsApi.DeleteWithHttpInfo(System.String,System.String)">
             <summary>
             Deletes custom tab information.
             </summary>
             <remarks>
             Deletes the custom from the specified account.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="customTabId"></param>
             <returns>2ApiResponse of Object(void)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ICustomTabsApi.DeleteAsync(System.String,System.String)">
             <summary>
             Deletes custom tab information.
             </summary>
             <remarks>
             Deletes the custom from the specified account.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="customTabId"></param>
             <returns>3Task of void</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ICustomTabsApi.DeleteAsyncWithHttpInfo(System.String,System.String)">
             <summary>
             Deletes custom tab information.
             </summary>
             <remarks>
             Deletes the custom from the specified account.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="customTabId"></param>
             <returns>4Task of ApiResponse</returns>
        </member>
        <member name="T:DocuSign.eSign.Api.CustomTabsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Api.CustomTabsApi.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.eSign.Api.CustomTabsApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DocuSign.eSign.Api.CustomTabsApi.#ctor(DocuSign.eSign.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.eSign.Api.CustomTabsApi"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.eSign.Api.CustomTabsApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:DocuSign.eSign.Api.CustomTabsApi.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:DocuSign.eSign.Api.CustomTabsApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="M:DocuSign.eSign.Api.CustomTabsApi.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.CustomTabsApi.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="T:DocuSign.eSign.Api.CustomTabsApi.ListOptions">
            <summary>
            Gets a list of all account tabs. Retrieves a list of all tabs associated with the account.
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Api.CustomTabsApi.ListOptions.customTabOnly">
            When set to **true**, only custom tabs are returned in the response. 
        </member>
        <member name="M:DocuSign.eSign.Api.CustomTabsApi.List(System.String,DocuSign.eSign.Api.CustomTabsApi.ListOptions)">
             <summary>
             Gets a list of all account tabs. Retrieves a list of all tabs associated with the account.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="options">Options for modifying the behavior of the function.</param>
             <returns>5TabMetadataList</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.CustomTabsApi.ListWithHttpInfo(System.String,DocuSign.eSign.Api.CustomTabsApi.ListOptions)">
             <summary>
             Gets a list of all account tabs. Retrieves a list of all tabs associated with the account.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="options">Options for modifying the behavior of the function.</param>
             <returns>6ApiResponse of TabMetadataList</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.CustomTabsApi.ListAsync(System.String,DocuSign.eSign.Api.CustomTabsApi.ListOptions)">
             <summary>
             Gets a list of all account tabs. Retrieves a list of all tabs associated with the account.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="options">Options for modifying the behavior of the function.</param>
             <returns>7Task of TabMetadataList</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.CustomTabsApi.ListAsyncWithHttpInfo(System.String,DocuSign.eSign.Api.CustomTabsApi.ListOptions)">
             <summary>
             Gets a list of all account tabs. Retrieves a list of all tabs associated with the account.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="options">Options for modifying the behavior of the function.</param>
             <returns>8Task of ApiResponse (TabMetadataList)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.CustomTabsApi.Create(System.String,DocuSign.eSign.Model.TabMetadata)">
             <summary>
             Creates a custom tab. Creates a tab with pre-defined properties, such as a text tab with a certain font type and validation pattern. Users can access the custom tabs when sending documents through the DocuSign web application.\n\nCustom tabs can be created for approve, checkbox, company, date, date signed, decline, email, email address, envelope ID, first name, formula, full name, initial here, last name, list, note, number, radio, sign here, signer attachment, SSN, text, title, and zip tabs.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="tabMetadata">TBD Description</param>
             <returns>5TabMetadata</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.CustomTabsApi.CreateWithHttpInfo(System.String,DocuSign.eSign.Model.TabMetadata)">
             <summary>
             Creates a custom tab. Creates a tab with pre-defined properties, such as a text tab with a certain font type and validation pattern. Users can access the custom tabs when sending documents through the DocuSign web application.\n\nCustom tabs can be created for approve, checkbox, company, date, date signed, decline, email, email address, envelope ID, first name, formula, full name, initial here, last name, list, note, number, radio, sign here, signer attachment, SSN, text, title, and zip tabs.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="tabMetadata">TBD Description</param>
             <returns>6ApiResponse of TabMetadata</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.CustomTabsApi.CreateAsync(System.String,DocuSign.eSign.Model.TabMetadata)">
             <summary>
             Creates a custom tab. Creates a tab with pre-defined properties, such as a text tab with a certain font type and validation pattern. Users can access the custom tabs when sending documents through the DocuSign web application.\n\nCustom tabs can be created for approve, checkbox, company, date, date signed, decline, email, email address, envelope ID, first name, formula, full name, initial here, last name, list, note, number, radio, sign here, signer attachment, SSN, text, title, and zip tabs.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="tabMetadata">TBD Description</param>
             <returns>7Task of TabMetadata</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.CustomTabsApi.CreateAsyncWithHttpInfo(System.String,DocuSign.eSign.Model.TabMetadata)">
             <summary>
             Creates a custom tab. Creates a tab with pre-defined properties, such as a text tab with a certain font type and validation pattern. Users can access the custom tabs when sending documents through the DocuSign web application.\n\nCustom tabs can be created for approve, checkbox, company, date, date signed, decline, email, email address, envelope ID, first name, formula, full name, initial here, last name, list, note, number, radio, sign here, signer attachment, SSN, text, title, and zip tabs.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="tabMetadata">TBD Description</param>
             <returns>8Task of ApiResponse (TabMetadata)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.CustomTabsApi.Get(System.String,System.String)">
             <summary>
             Gets custom tab information. Retrieves information about the requested custom tab on the specified account.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="customTabId"></param>
             <returns>5TabMetadata</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.CustomTabsApi.GetWithHttpInfo(System.String,System.String)">
             <summary>
             Gets custom tab information. Retrieves information about the requested custom tab on the specified account.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="customTabId"></param>
             <returns>6ApiResponse of TabMetadata</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.CustomTabsApi.GetAsync(System.String,System.String)">
             <summary>
             Gets custom tab information. Retrieves information about the requested custom tab on the specified account.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="customTabId"></param>
             <returns>7Task of TabMetadata</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.CustomTabsApi.GetAsyncWithHttpInfo(System.String,System.String)">
             <summary>
             Gets custom tab information. Retrieves information about the requested custom tab on the specified account.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="customTabId"></param>
             <returns>8Task of ApiResponse (TabMetadata)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.CustomTabsApi.Update(System.String,System.String,DocuSign.eSign.Model.TabMetadata)">
             <summary>
             Updates custom tab information. Updates the information in a custom tab for the specified account.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="customTabId"></param> <param name="tabMetadata">TBD Description</param>
             <returns>5TabMetadata</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.CustomTabsApi.UpdateWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.TabMetadata)">
             <summary>
             Updates custom tab information. Updates the information in a custom tab for the specified account.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="customTabId"></param> <param name="tabMetadata">TBD Description</param>
             <returns>6ApiResponse of TabMetadata</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.CustomTabsApi.UpdateAsync(System.String,System.String,DocuSign.eSign.Model.TabMetadata)">
             <summary>
             Updates custom tab information. Updates the information in a custom tab for the specified account.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="customTabId"></param> <param name="tabMetadata">TBD Description</param>
             <returns>7Task of TabMetadata</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.CustomTabsApi.UpdateAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.TabMetadata)">
             <summary>
             Updates custom tab information. Updates the information in a custom tab for the specified account.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="customTabId"></param> <param name="tabMetadata">TBD Description</param>
             <returns>8Task of ApiResponse (TabMetadata)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.CustomTabsApi.Delete(System.String,System.String)">
             <summary>
             Deletes custom tab information. Deletes the custom from the specified account.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="customTabId"></param>
             <returns>5</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.CustomTabsApi.DeleteWithHttpInfo(System.String,System.String)">
             <summary>
             Deletes custom tab information. Deletes the custom from the specified account.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="customTabId"></param>
             <returns>6ApiResponse of Object(void)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.CustomTabsApi.DeleteAsync(System.String,System.String)">
             <summary>
             Deletes custom tab information. Deletes the custom from the specified account.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="customTabId"></param>
             <returns>7Task of void</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.CustomTabsApi.DeleteAsyncWithHttpInfo(System.String,System.String)">
             <summary>
             Deletes custom tab information. Deletes the custom from the specified account.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="customTabId"></param>
             <returns>8Task of ApiResponse</returns>
        </member>
        <member name="T:DocuSign.eSign.Api.IDiagnosticsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Api.IDiagnosticsApi.GetService">
            <summary>
            Retrieves the available REST API versions.
            </summary>
            <remarks>
            Retrieves the available REST API versions.\n\nDocuSign Production system: https://www.docusign.net/restapi/service_information\nDocuSign Demo system: https://demo.docusign.net/restapi/service_information\n\nYou do not need an integrator key to view the REST API versions and resources.
            </remarks>
            
             <returns>1ServiceInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IDiagnosticsApi.GetServiceWithHttpInfo">
             <summary>
             Retrieves the available REST API versions.
             </summary>
             <remarks>
             Retrieves the available REST API versions.\n\nDocuSign Production system: https://www.docusign.net/restapi/service_information\nDocuSign Demo system: https://demo.docusign.net/restapi/service_information\n\nYou do not need an integrator key to view the REST API versions and resources.
             </remarks>
            
             <returns>2ApiResponse of ServiceInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IDiagnosticsApi.GetServiceAsync">
             <summary>
             Retrieves the available REST API versions.
             </summary>
             <remarks>
             Retrieves the available REST API versions.\n\nDocuSign Production system: https://www.docusign.net/restapi/service_information\nDocuSign Demo system: https://demo.docusign.net/restapi/service_information\n\nYou do not need an integrator key to view the REST API versions and resources.
             </remarks>
            
             <returns>3Task of ServiceInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IDiagnosticsApi.GetServiceAsyncWithHttpInfo">
             <summary>
             Retrieves the available REST API versions.
             </summary>
             <remarks>
             Retrieves the available REST API versions.\n\nDocuSign Production system: https://www.docusign.net/restapi/service_information\nDocuSign Demo system: https://demo.docusign.net/restapi/service_information\n\nYou do not need an integrator key to view the REST API versions and resources.
             </remarks>
            
             <returns>4Task of ApiResponse (ServiceInformation)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IDiagnosticsApi.GetResources">
            <summary>
            Lists resources for REST version specified
            </summary>
            <remarks>
            Retrieves the base resources available for the DocuSign REST APIs.\n\nYou do not need an integrator key to view the REST API versions and resources.\n\nExample: https://demo.docusign.net/restapi/v2 lists all of the base resources available in version 2 of the REST API on the DocuSign Demo system.\n\nTo view descriptions and samples of the service operations for all versions, remove the version number and add /help to the URL.\n\nExample: https://demo.docusign.net/restapi/help lists the REST API operations on the DocuSign Demo system with XML and json request and response samples.
            </remarks>
            
             <returns>1ResourceInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IDiagnosticsApi.GetResourcesWithHttpInfo">
             <summary>
             Lists resources for REST version specified
             </summary>
             <remarks>
             Retrieves the base resources available for the DocuSign REST APIs.\n\nYou do not need an integrator key to view the REST API versions and resources.\n\nExample: https://demo.docusign.net/restapi/v2 lists all of the base resources available in version 2 of the REST API on the DocuSign Demo system.\n\nTo view descriptions and samples of the service operations for all versions, remove the version number and add /help to the URL.\n\nExample: https://demo.docusign.net/restapi/help lists the REST API operations on the DocuSign Demo system with XML and json request and response samples.
             </remarks>
            
             <returns>2ApiResponse of ResourceInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IDiagnosticsApi.GetResourcesAsync">
             <summary>
             Lists resources for REST version specified
             </summary>
             <remarks>
             Retrieves the base resources available for the DocuSign REST APIs.\n\nYou do not need an integrator key to view the REST API versions and resources.\n\nExample: https://demo.docusign.net/restapi/v2 lists all of the base resources available in version 2 of the REST API on the DocuSign Demo system.\n\nTo view descriptions and samples of the service operations for all versions, remove the version number and add /help to the URL.\n\nExample: https://demo.docusign.net/restapi/help lists the REST API operations on the DocuSign Demo system with XML and json request and response samples.
             </remarks>
            
             <returns>3Task of ResourceInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IDiagnosticsApi.GetResourcesAsyncWithHttpInfo">
             <summary>
             Lists resources for REST version specified
             </summary>
             <remarks>
             Retrieves the base resources available for the DocuSign REST APIs.\n\nYou do not need an integrator key to view the REST API versions and resources.\n\nExample: https://demo.docusign.net/restapi/v2 lists all of the base resources available in version 2 of the REST API on the DocuSign Demo system.\n\nTo view descriptions and samples of the service operations for all versions, remove the version number and add /help to the URL.\n\nExample: https://demo.docusign.net/restapi/help lists the REST API operations on the DocuSign Demo system with XML and json request and response samples.
             </remarks>
            
             <returns>4Task of ApiResponse (ResourceInformation)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IDiagnosticsApi.ListRequestLogs(DocuSign.eSign.Api.DiagnosticsApi.ListRequestLogsOptions)">
            <summary>
            Gets the API request logging log files.
            </summary>
            <remarks>
            Retrieves a list of log entries as a JSON or xml object or as a zip file containing the entries.\n\nIf the Accept header is set to application/zip, the response is a zip file containing individual text files, each representing an API request.\n\nIf the Accept header is set to `application/json` or `application/xml`, the response returns list of log entries in either JSON or XML. An example JSON response body is shown below.
            </remarks>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>1ApiRequestLogsResult</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IDiagnosticsApi.ListRequestLogsWithHttpInfo(DocuSign.eSign.Api.DiagnosticsApi.ListRequestLogsOptions)">
            <summary>
            Gets the API request logging log files.
            </summary>
            <remarks>
            Retrieves a list of log entries as a JSON or xml object or as a zip file containing the entries.\n\nIf the Accept header is set to application/zip, the response is a zip file containing individual text files, each representing an API request.\n\nIf the Accept header is set to `application/json` or `application/xml`, the response returns list of log entries in either JSON or XML. An example JSON response body is shown below.
            </remarks>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>2ApiResponse of ApiRequestLogsResult</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IDiagnosticsApi.ListRequestLogsAsync(DocuSign.eSign.Api.DiagnosticsApi.ListRequestLogsOptions)">
            <summary>
            Gets the API request logging log files.
            </summary>
            <remarks>
            Retrieves a list of log entries as a JSON or xml object or as a zip file containing the entries.\n\nIf the Accept header is set to application/zip, the response is a zip file containing individual text files, each representing an API request.\n\nIf the Accept header is set to `application/json` or `application/xml`, the response returns list of log entries in either JSON or XML. An example JSON response body is shown below.
            </remarks>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>3Task of ApiRequestLogsResult</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IDiagnosticsApi.ListRequestLogsAsyncWithHttpInfo(DocuSign.eSign.Api.DiagnosticsApi.ListRequestLogsOptions)">
            <summary>
            Gets the API request logging log files.
            </summary>
            <remarks>
            Retrieves a list of log entries as a JSON or xml object or as a zip file containing the entries.\n\nIf the Accept header is set to application/zip, the response is a zip file containing individual text files, each representing an API request.\n\nIf the Accept header is set to `application/json` or `application/xml`, the response returns list of log entries in either JSON or XML. An example JSON response body is shown below.
            </remarks>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>4Task of ApiResponse (ApiRequestLogsResult)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IDiagnosticsApi.DeleteRequestLogs">
            <summary>
            Deletes the request log files.
            </summary>
            <remarks>
            Deletes the request log files.
            </remarks>
            
             <returns>1</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IDiagnosticsApi.DeleteRequestLogsWithHttpInfo">
             <summary>
             Deletes the request log files.
             </summary>
             <remarks>
             Deletes the request log files.
             </remarks>
            
             <returns>2ApiResponse of Object(void)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IDiagnosticsApi.DeleteRequestLogsAsync">
             <summary>
             Deletes the request log files.
             </summary>
             <remarks>
             Deletes the request log files.
             </remarks>
            
             <returns>3Task of void</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IDiagnosticsApi.DeleteRequestLogsAsyncWithHttpInfo">
             <summary>
             Deletes the request log files.
             </summary>
             <remarks>
             Deletes the request log files.
             </remarks>
            
             <returns>4Task of ApiResponse</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IDiagnosticsApi.GetRequestLog(System.String)">
            <summary>
            Gets a request logging log file.
            </summary>
            <remarks>
            Retrieves information for a single log entry.\n\n**Request**\nThe `requestLogfId` property can be retrieved by getting the list of log entries. The Content-Transfer-Encoding header can be set to base64 to retrieve the API request/response as base 64 string. Otherwise the bytes of the request/response are returned.\n\n**Response**\nIf the Content-Transfer-Encoding header was set to base64, the log is returned as a base64 string.
            </remarks>
            <param name="requestLogId"></param>
             <returns>1Stream</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IDiagnosticsApi.GetRequestLogWithHttpInfo(System.String)">
             <summary>
             Gets a request logging log file.
             </summary>
             <remarks>
             Retrieves information for a single log entry.\n\n**Request**\nThe `requestLogfId` property can be retrieved by getting the list of log entries. The Content-Transfer-Encoding header can be set to base64 to retrieve the API request/response as base 64 string. Otherwise the bytes of the request/response are returned.\n\n**Response**\nIf the Content-Transfer-Encoding header was set to base64, the log is returned as a base64 string.
             </remarks>
            <param name="requestLogId"></param>
             <returns>2ApiResponse of Stream</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IDiagnosticsApi.GetRequestLogAsync(System.String)">
             <summary>
             Gets a request logging log file.
             </summary>
             <remarks>
             Retrieves information for a single log entry.\n\n**Request**\nThe `requestLogfId` property can be retrieved by getting the list of log entries. The Content-Transfer-Encoding header can be set to base64 to retrieve the API request/response as base 64 string. Otherwise the bytes of the request/response are returned.\n\n**Response**\nIf the Content-Transfer-Encoding header was set to base64, the log is returned as a base64 string.
             </remarks>
            <param name="requestLogId"></param>
             <returns>3Task of Stream</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IDiagnosticsApi.GetRequestLogAsyncWithHttpInfo(System.String)">
             <summary>
             Gets a request logging log file.
             </summary>
             <remarks>
             Retrieves information for a single log entry.\n\n**Request**\nThe `requestLogfId` property can be retrieved by getting the list of log entries. The Content-Transfer-Encoding header can be set to base64 to retrieve the API request/response as base 64 string. Otherwise the bytes of the request/response are returned.\n\n**Response**\nIf the Content-Transfer-Encoding header was set to base64, the log is returned as a base64 string.
             </remarks>
            <param name="requestLogId"></param>
             <returns>4Task of ApiResponse (Stream)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IDiagnosticsApi.GetRequestLogSettings">
            <summary>
            Gets the API request logging settings.
            </summary>
            <remarks>
            Retrieves the current API request logging setting for the user and remaining log entries.\n\n**Response**\nThe response includes the current API request logging setting for the user, along with the maximum log entries and remaining log entries.
            </remarks>
            
             <returns>1DiagnosticsSettingsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IDiagnosticsApi.GetRequestLogSettingsWithHttpInfo">
             <summary>
             Gets the API request logging settings.
             </summary>
             <remarks>
             Retrieves the current API request logging setting for the user and remaining log entries.\n\n**Response**\nThe response includes the current API request logging setting for the user, along with the maximum log entries and remaining log entries.
             </remarks>
            
             <returns>2ApiResponse of DiagnosticsSettingsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IDiagnosticsApi.GetRequestLogSettingsAsync">
             <summary>
             Gets the API request logging settings.
             </summary>
             <remarks>
             Retrieves the current API request logging setting for the user and remaining log entries.\n\n**Response**\nThe response includes the current API request logging setting for the user, along with the maximum log entries and remaining log entries.
             </remarks>
            
             <returns>3Task of DiagnosticsSettingsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IDiagnosticsApi.GetRequestLogSettingsAsyncWithHttpInfo">
             <summary>
             Gets the API request logging settings.
             </summary>
             <remarks>
             Retrieves the current API request logging setting for the user and remaining log entries.\n\n**Response**\nThe response includes the current API request logging setting for the user, along with the maximum log entries and remaining log entries.
             </remarks>
            
             <returns>4Task of ApiResponse (DiagnosticsSettingsInformation)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IDiagnosticsApi.UpdateRequestLogSettings(DocuSign.eSign.Model.DiagnosticsSettingsInformation)">
            <summary>
            Enables or disables API request logging for troubleshooting.
            </summary>
            <remarks>
            Enables or disables API request logging for troubleshooting.\n\nWhen enabled (apiRequestLogging is set to true), REST API requests and responses for the user are added to a log. A log can have up to 50 requests/responses and the current number of log entries can be determined by getting the settings. Logging is automatically disabled when the log limit of 50 is reached.\n\nYou can call [ML:GetRequestLog] or [ML:GetRequestLogs] to download the log files (individually or as a zip file). Call [ML:DeleteRequestLogs] to clear the log by deleting current entries.\n\nPrivate information, such as passwords and integrator key information, which is normally located in the call header is omitted from the request/response log.\n\n### Note: API request logging only captures requests from the authenticated user. Any call that does not authenticate the user and resolve a userId isn&#39;t logged. Meaning that login_information, NewAccounts, or other distributor-credential calls are not logged.
            </remarks>
            <param name="diagnosticsSettingsInformation">TBD Description</param>
            <returns>1DiagnosticsSettingsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IDiagnosticsApi.UpdateRequestLogSettingsWithHttpInfo(DocuSign.eSign.Model.DiagnosticsSettingsInformation)">
            <summary>
            Enables or disables API request logging for troubleshooting.
            </summary>
            <remarks>
            Enables or disables API request logging for troubleshooting.\n\nWhen enabled (apiRequestLogging is set to true), REST API requests and responses for the user are added to a log. A log can have up to 50 requests/responses and the current number of log entries can be determined by getting the settings. Logging is automatically disabled when the log limit of 50 is reached.\n\nYou can call [ML:GetRequestLog] or [ML:GetRequestLogs] to download the log files (individually or as a zip file). Call [ML:DeleteRequestLogs] to clear the log by deleting current entries.\n\nPrivate information, such as passwords and integrator key information, which is normally located in the call header is omitted from the request/response log.\n\n### Note: API request logging only captures requests from the authenticated user. Any call that does not authenticate the user and resolve a userId isn&#39;t logged. Meaning that login_information, NewAccounts, or other distributor-credential calls are not logged.
            </remarks>
            <param name="diagnosticsSettingsInformation">TBD Description</param>
            <returns>2ApiResponse of DiagnosticsSettingsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IDiagnosticsApi.UpdateRequestLogSettingsAsync(DocuSign.eSign.Model.DiagnosticsSettingsInformation)">
            <summary>
            Enables or disables API request logging for troubleshooting.
            </summary>
            <remarks>
            Enables or disables API request logging for troubleshooting.\n\nWhen enabled (apiRequestLogging is set to true), REST API requests and responses for the user are added to a log. A log can have up to 50 requests/responses and the current number of log entries can be determined by getting the settings. Logging is automatically disabled when the log limit of 50 is reached.\n\nYou can call [ML:GetRequestLog] or [ML:GetRequestLogs] to download the log files (individually or as a zip file). Call [ML:DeleteRequestLogs] to clear the log by deleting current entries.\n\nPrivate information, such as passwords and integrator key information, which is normally located in the call header is omitted from the request/response log.\n\n### Note: API request logging only captures requests from the authenticated user. Any call that does not authenticate the user and resolve a userId isn&#39;t logged. Meaning that login_information, NewAccounts, or other distributor-credential calls are not logged.
            </remarks>
            <param name="diagnosticsSettingsInformation">TBD Description</param>
            <returns>3Task of DiagnosticsSettingsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IDiagnosticsApi.UpdateRequestLogSettingsAsyncWithHttpInfo(DocuSign.eSign.Model.DiagnosticsSettingsInformation)">
            <summary>
            Enables or disables API request logging for troubleshooting.
            </summary>
            <remarks>
            Enables or disables API request logging for troubleshooting.\n\nWhen enabled (apiRequestLogging is set to true), REST API requests and responses for the user are added to a log. A log can have up to 50 requests/responses and the current number of log entries can be determined by getting the settings. Logging is automatically disabled when the log limit of 50 is reached.\n\nYou can call [ML:GetRequestLog] or [ML:GetRequestLogs] to download the log files (individually or as a zip file). Call [ML:DeleteRequestLogs] to clear the log by deleting current entries.\n\nPrivate information, such as passwords and integrator key information, which is normally located in the call header is omitted from the request/response log.\n\n### Note: API request logging only captures requests from the authenticated user. Any call that does not authenticate the user and resolve a userId isn&#39;t logged. Meaning that login_information, NewAccounts, or other distributor-credential calls are not logged.
            </remarks>
            <param name="diagnosticsSettingsInformation">TBD Description</param>
            <returns>4Task of ApiResponse (DiagnosticsSettingsInformation)</returns>
        </member>
        <member name="T:DocuSign.eSign.Api.DiagnosticsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Api.DiagnosticsApi.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.eSign.Api.DiagnosticsApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DocuSign.eSign.Api.DiagnosticsApi.#ctor(DocuSign.eSign.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.eSign.Api.DiagnosticsApi"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.eSign.Api.DiagnosticsApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:DocuSign.eSign.Api.DiagnosticsApi.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:DocuSign.eSign.Api.DiagnosticsApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="M:DocuSign.eSign.Api.DiagnosticsApi.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.DiagnosticsApi.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.eSign.Api.DiagnosticsApi.GetService">
             <summary>
             Retrieves the available REST API versions. Retrieves the available REST API versions.\n\nDocuSign Production system: https://www.docusign.net/restapi/service_information\nDocuSign Demo system: https://demo.docusign.net/restapi/service_information\n\nYou do not need an integrator key to view the REST API versions and resources.
             </summary>
            
             <returns>5ServiceInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.DiagnosticsApi.GetServiceWithHttpInfo">
             <summary>
             Retrieves the available REST API versions. Retrieves the available REST API versions.\n\nDocuSign Production system: https://www.docusign.net/restapi/service_information\nDocuSign Demo system: https://demo.docusign.net/restapi/service_information\n\nYou do not need an integrator key to view the REST API versions and resources.
             </summary>
            
             <returns>6ApiResponse of ServiceInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.DiagnosticsApi.GetServiceAsync">
             <summary>
             Retrieves the available REST API versions. Retrieves the available REST API versions.\n\nDocuSign Production system: https://www.docusign.net/restapi/service_information\nDocuSign Demo system: https://demo.docusign.net/restapi/service_information\n\nYou do not need an integrator key to view the REST API versions and resources.
             </summary>
            
             <returns>7Task of ServiceInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.DiagnosticsApi.GetServiceAsyncWithHttpInfo">
             <summary>
             Retrieves the available REST API versions. Retrieves the available REST API versions.\n\nDocuSign Production system: https://www.docusign.net/restapi/service_information\nDocuSign Demo system: https://demo.docusign.net/restapi/service_information\n\nYou do not need an integrator key to view the REST API versions and resources.
             </summary>
            
             <returns>8Task of ApiResponse (ServiceInformation)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.DiagnosticsApi.GetResources">
             <summary>
             Lists resources for REST version specified Retrieves the base resources available for the DocuSign REST APIs.\n\nYou do not need an integrator key to view the REST API versions and resources.\n\nExample: https://demo.docusign.net/restapi/v2 lists all of the base resources available in version 2 of the REST API on the DocuSign Demo system.\n\nTo view descriptions and samples of the service operations for all versions, remove the version number and add /help to the URL.\n\nExample: https://demo.docusign.net/restapi/help lists the REST API operations on the DocuSign Demo system with XML and json request and response samples.
             </summary>
            
             <returns>5ResourceInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.DiagnosticsApi.GetResourcesWithHttpInfo">
             <summary>
             Lists resources for REST version specified Retrieves the base resources available for the DocuSign REST APIs.\n\nYou do not need an integrator key to view the REST API versions and resources.\n\nExample: https://demo.docusign.net/restapi/v2 lists all of the base resources available in version 2 of the REST API on the DocuSign Demo system.\n\nTo view descriptions and samples of the service operations for all versions, remove the version number and add /help to the URL.\n\nExample: https://demo.docusign.net/restapi/help lists the REST API operations on the DocuSign Demo system with XML and json request and response samples.
             </summary>
            
             <returns>6ApiResponse of ResourceInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.DiagnosticsApi.GetResourcesAsync">
             <summary>
             Lists resources for REST version specified Retrieves the base resources available for the DocuSign REST APIs.\n\nYou do not need an integrator key to view the REST API versions and resources.\n\nExample: https://demo.docusign.net/restapi/v2 lists all of the base resources available in version 2 of the REST API on the DocuSign Demo system.\n\nTo view descriptions and samples of the service operations for all versions, remove the version number and add /help to the URL.\n\nExample: https://demo.docusign.net/restapi/help lists the REST API operations on the DocuSign Demo system with XML and json request and response samples.
             </summary>
            
             <returns>7Task of ResourceInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.DiagnosticsApi.GetResourcesAsyncWithHttpInfo">
             <summary>
             Lists resources for REST version specified Retrieves the base resources available for the DocuSign REST APIs.\n\nYou do not need an integrator key to view the REST API versions and resources.\n\nExample: https://demo.docusign.net/restapi/v2 lists all of the base resources available in version 2 of the REST API on the DocuSign Demo system.\n\nTo view descriptions and samples of the service operations for all versions, remove the version number and add /help to the URL.\n\nExample: https://demo.docusign.net/restapi/help lists the REST API operations on the DocuSign Demo system with XML and json request and response samples.
             </summary>
            
             <returns>8Task of ApiResponse (ResourceInformation)</returns>
        </member>
        <member name="T:DocuSign.eSign.Api.DiagnosticsApi.ListRequestLogsOptions">
            <summary>
            Gets the API request logging log files. Retrieves a list of log entries as a JSON or xml object or as a zip file containing the entries.\n\nIf the Accept header is set to application/zip, the response is a zip file containing individual text files, each representing an API request.\n\nIf the Accept header is set to `application/json` or `application/xml`, the response returns list of log entries in either JSON or XML. An example JSON response body is shown below.
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Api.DiagnosticsApi.ListRequestLogsOptions.encoding">
            
        </member>
        <member name="M:DocuSign.eSign.Api.DiagnosticsApi.ListRequestLogs(DocuSign.eSign.Api.DiagnosticsApi.ListRequestLogsOptions)">
            <summary>
            Gets the API request logging log files. Retrieves a list of log entries as a JSON or xml object or as a zip file containing the entries.\n\nIf the Accept header is set to application/zip, the response is a zip file containing individual text files, each representing an API request.\n\nIf the Accept header is set to `application/json` or `application/xml`, the response returns list of log entries in either JSON or XML. An example JSON response body is shown below.
            </summary>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>5ApiRequestLogsResult</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.DiagnosticsApi.ListRequestLogsWithHttpInfo(DocuSign.eSign.Api.DiagnosticsApi.ListRequestLogsOptions)">
            <summary>
            Gets the API request logging log files. Retrieves a list of log entries as a JSON or xml object or as a zip file containing the entries.\n\nIf the Accept header is set to application/zip, the response is a zip file containing individual text files, each representing an API request.\n\nIf the Accept header is set to `application/json` or `application/xml`, the response returns list of log entries in either JSON or XML. An example JSON response body is shown below.
            </summary>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>6ApiResponse of ApiRequestLogsResult</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.DiagnosticsApi.ListRequestLogsAsync(DocuSign.eSign.Api.DiagnosticsApi.ListRequestLogsOptions)">
            <summary>
            Gets the API request logging log files. Retrieves a list of log entries as a JSON or xml object or as a zip file containing the entries.\n\nIf the Accept header is set to application/zip, the response is a zip file containing individual text files, each representing an API request.\n\nIf the Accept header is set to `application/json` or `application/xml`, the response returns list of log entries in either JSON or XML. An example JSON response body is shown below.
            </summary>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>7Task of ApiRequestLogsResult</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.DiagnosticsApi.ListRequestLogsAsyncWithHttpInfo(DocuSign.eSign.Api.DiagnosticsApi.ListRequestLogsOptions)">
            <summary>
            Gets the API request logging log files. Retrieves a list of log entries as a JSON or xml object or as a zip file containing the entries.\n\nIf the Accept header is set to application/zip, the response is a zip file containing individual text files, each representing an API request.\n\nIf the Accept header is set to `application/json` or `application/xml`, the response returns list of log entries in either JSON or XML. An example JSON response body is shown below.
            </summary>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>8Task of ApiResponse (ApiRequestLogsResult)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.DiagnosticsApi.DeleteRequestLogs">
             <summary>
             Deletes the request log files. Deletes the request log files.
             </summary>
            
             <returns>5</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.DiagnosticsApi.DeleteRequestLogsWithHttpInfo">
             <summary>
             Deletes the request log files. Deletes the request log files.
             </summary>
            
             <returns>6ApiResponse of Object(void)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.DiagnosticsApi.DeleteRequestLogsAsync">
             <summary>
             Deletes the request log files. Deletes the request log files.
             </summary>
            
             <returns>7Task of void</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.DiagnosticsApi.DeleteRequestLogsAsyncWithHttpInfo">
             <summary>
             Deletes the request log files. Deletes the request log files.
             </summary>
            
             <returns>8Task of ApiResponse</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.DiagnosticsApi.GetRequestLog(System.String)">
             <summary>
             Gets a request logging log file. Retrieves information for a single log entry.\n\n**Request**\nThe `requestLogfId` property can be retrieved by getting the list of log entries. The Content-Transfer-Encoding header can be set to base64 to retrieve the API request/response as base 64 string. Otherwise the bytes of the request/response are returned.\n\n**Response**\nIf the Content-Transfer-Encoding header was set to base64, the log is returned as a base64 string.
             </summary>
            <param name="requestLogId"></param>
             <returns>5Stream</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.DiagnosticsApi.GetRequestLogWithHttpInfo(System.String)">
             <summary>
             Gets a request logging log file. Retrieves information for a single log entry.\n\n**Request**\nThe `requestLogfId` property can be retrieved by getting the list of log entries. The Content-Transfer-Encoding header can be set to base64 to retrieve the API request/response as base 64 string. Otherwise the bytes of the request/response are returned.\n\n**Response**\nIf the Content-Transfer-Encoding header was set to base64, the log is returned as a base64 string.
             </summary>
            <param name="requestLogId"></param>
             <returns>6ApiResponse of Stream</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.DiagnosticsApi.GetRequestLogAsync(System.String)">
             <summary>
             Gets a request logging log file. Retrieves information for a single log entry.\n\n**Request**\nThe `requestLogfId` property can be retrieved by getting the list of log entries. The Content-Transfer-Encoding header can be set to base64 to retrieve the API request/response as base 64 string. Otherwise the bytes of the request/response are returned.\n\n**Response**\nIf the Content-Transfer-Encoding header was set to base64, the log is returned as a base64 string.
             </summary>
            <param name="requestLogId"></param>
             <returns>7Task of Stream</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.DiagnosticsApi.GetRequestLogAsyncWithHttpInfo(System.String)">
             <summary>
             Gets a request logging log file. Retrieves information for a single log entry.\n\n**Request**\nThe `requestLogfId` property can be retrieved by getting the list of log entries. The Content-Transfer-Encoding header can be set to base64 to retrieve the API request/response as base 64 string. Otherwise the bytes of the request/response are returned.\n\n**Response**\nIf the Content-Transfer-Encoding header was set to base64, the log is returned as a base64 string.
             </summary>
            <param name="requestLogId"></param>
             <returns>8Task of ApiResponse (Stream)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.DiagnosticsApi.GetRequestLogSettings">
             <summary>
             Gets the API request logging settings. Retrieves the current API request logging setting for the user and remaining log entries.\n\n**Response**\nThe response includes the current API request logging setting for the user, along with the maximum log entries and remaining log entries.
             </summary>
            
             <returns>5DiagnosticsSettingsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.DiagnosticsApi.GetRequestLogSettingsWithHttpInfo">
             <summary>
             Gets the API request logging settings. Retrieves the current API request logging setting for the user and remaining log entries.\n\n**Response**\nThe response includes the current API request logging setting for the user, along with the maximum log entries and remaining log entries.
             </summary>
            
             <returns>6ApiResponse of DiagnosticsSettingsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.DiagnosticsApi.GetRequestLogSettingsAsync">
             <summary>
             Gets the API request logging settings. Retrieves the current API request logging setting for the user and remaining log entries.\n\n**Response**\nThe response includes the current API request logging setting for the user, along with the maximum log entries and remaining log entries.
             </summary>
            
             <returns>7Task of DiagnosticsSettingsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.DiagnosticsApi.GetRequestLogSettingsAsyncWithHttpInfo">
             <summary>
             Gets the API request logging settings. Retrieves the current API request logging setting for the user and remaining log entries.\n\n**Response**\nThe response includes the current API request logging setting for the user, along with the maximum log entries and remaining log entries.
             </summary>
            
             <returns>8Task of ApiResponse (DiagnosticsSettingsInformation)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.DiagnosticsApi.UpdateRequestLogSettings(DocuSign.eSign.Model.DiagnosticsSettingsInformation)">
            <summary>
            Enables or disables API request logging for troubleshooting. Enables or disables API request logging for troubleshooting.\n\nWhen enabled (apiRequestLogging is set to true), REST API requests and responses for the user are added to a log. A log can have up to 50 requests/responses and the current number of log entries can be determined by getting the settings. Logging is automatically disabled when the log limit of 50 is reached.\n\nYou can call [ML:GetRequestLog] or [ML:GetRequestLogs] to download the log files (individually or as a zip file). Call [ML:DeleteRequestLogs] to clear the log by deleting current entries.\n\nPrivate information, such as passwords and integrator key information, which is normally located in the call header is omitted from the request/response log.\n\n### Note: API request logging only captures requests from the authenticated user. Any call that does not authenticate the user and resolve a userId isn&#39;t logged. Meaning that login_information, NewAccounts, or other distributor-credential calls are not logged.
            </summary>
            <param name="diagnosticsSettingsInformation">TBD Description</param>
            <returns>5DiagnosticsSettingsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.DiagnosticsApi.UpdateRequestLogSettingsWithHttpInfo(DocuSign.eSign.Model.DiagnosticsSettingsInformation)">
            <summary>
            Enables or disables API request logging for troubleshooting. Enables or disables API request logging for troubleshooting.\n\nWhen enabled (apiRequestLogging is set to true), REST API requests and responses for the user are added to a log. A log can have up to 50 requests/responses and the current number of log entries can be determined by getting the settings. Logging is automatically disabled when the log limit of 50 is reached.\n\nYou can call [ML:GetRequestLog] or [ML:GetRequestLogs] to download the log files (individually or as a zip file). Call [ML:DeleteRequestLogs] to clear the log by deleting current entries.\n\nPrivate information, such as passwords and integrator key information, which is normally located in the call header is omitted from the request/response log.\n\n### Note: API request logging only captures requests from the authenticated user. Any call that does not authenticate the user and resolve a userId isn&#39;t logged. Meaning that login_information, NewAccounts, or other distributor-credential calls are not logged.
            </summary>
            <param name="diagnosticsSettingsInformation">TBD Description</param>
            <returns>6ApiResponse of DiagnosticsSettingsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.DiagnosticsApi.UpdateRequestLogSettingsAsync(DocuSign.eSign.Model.DiagnosticsSettingsInformation)">
            <summary>
            Enables or disables API request logging for troubleshooting. Enables or disables API request logging for troubleshooting.\n\nWhen enabled (apiRequestLogging is set to true), REST API requests and responses for the user are added to a log. A log can have up to 50 requests/responses and the current number of log entries can be determined by getting the settings. Logging is automatically disabled when the log limit of 50 is reached.\n\nYou can call [ML:GetRequestLog] or [ML:GetRequestLogs] to download the log files (individually or as a zip file). Call [ML:DeleteRequestLogs] to clear the log by deleting current entries.\n\nPrivate information, such as passwords and integrator key information, which is normally located in the call header is omitted from the request/response log.\n\n### Note: API request logging only captures requests from the authenticated user. Any call that does not authenticate the user and resolve a userId isn&#39;t logged. Meaning that login_information, NewAccounts, or other distributor-credential calls are not logged.
            </summary>
            <param name="diagnosticsSettingsInformation">TBD Description</param>
            <returns>7Task of DiagnosticsSettingsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.DiagnosticsApi.UpdateRequestLogSettingsAsyncWithHttpInfo(DocuSign.eSign.Model.DiagnosticsSettingsInformation)">
            <summary>
            Enables or disables API request logging for troubleshooting. Enables or disables API request logging for troubleshooting.\n\nWhen enabled (apiRequestLogging is set to true), REST API requests and responses for the user are added to a log. A log can have up to 50 requests/responses and the current number of log entries can be determined by getting the settings. Logging is automatically disabled when the log limit of 50 is reached.\n\nYou can call [ML:GetRequestLog] or [ML:GetRequestLogs] to download the log files (individually or as a zip file). Call [ML:DeleteRequestLogs] to clear the log by deleting current entries.\n\nPrivate information, such as passwords and integrator key information, which is normally located in the call header is omitted from the request/response log.\n\n### Note: API request logging only captures requests from the authenticated user. Any call that does not authenticate the user and resolve a userId isn&#39;t logged. Meaning that login_information, NewAccounts, or other distributor-credential calls are not logged.
            </summary>
            <param name="diagnosticsSettingsInformation">TBD Description</param>
            <returns>8Task of ApiResponse (DiagnosticsSettingsInformation)</returns>
        </member>
        <member name="T:DocuSign.eSign.Api.IEnvelopesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.ListStatusChanges(System.String,DocuSign.eSign.Api.EnvelopesApi.ListStatusChangesOptions)">
            <summary>
            Gets status changes for one or more envelopes.
            </summary>
            <remarks>
            Retrieves envelope status changes for all envelopes. You can modify the information returned by adding query strings to limit the request to check between certain dates and times, or for certain envelopes, or for certain status codes. It is recommended that you use one or more of the query strings in order to limit the size of the response.\n\n### Important: Unless you are requesting the status for specific envelopes (using the `envelopeIds` or `transactionIds` properties), you must add a set the `from_date` property in the request.\n\nGetting envelope status using `transactionIds` is useful for offline signing situations where it can be used determine if an envelope was created or not, for the cases where a network connection was lost, before the envelope status could be returned.\n\n### Request Envelope Status Notes ###\n\nThe REST API GET /envelopes call uses certain filters to find results. In some cases requests are check for \&quot;any status change\&quot; instead of the just the single status requested. In these cases, more envelopes might be returned by the request than otherwise would be. For example, for a request with the begin date is set to Jan 1st, an end date set to Jan 7th and the status qualifier (`from_to_status`) set to `Delivered` &amp;mdash; the response set might contain envelopes that were created during that time period, but not delivered during the time period.\n\nTo avoid unnecessary database queries, the DocuSign system checks requests to ensure that the added filters will not result in a zero-size response before acting on the request. The following table shows the valid envelope statuses (in the Valid Current Statuses column) for the status qualifiers in the request. If the status and status qualifiers in the API request do not contain any of the values shown in the valid current statuses column, then an empty list is returned.\n\nFor example, a request with a status qualifier (from_to_status) of `Delivered` and a status of \&quot;`Created`,`Sent`\&quot;, DocuSign will always return an empty list. This is because the request essentially translates to: find the envelopes that were delivered between the begin and end dates that have a current status of `Created` or `Sent`, and since an envelope that has been delivered can never have a status of `Created` or `Sent`, a zero-size response would be generated. In this case, DocuSign does not run the request, but just returns the empty list.\n\nClient applications should check that the statuses they are requesting make sense for a given status qualifier.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="options">Options for modifying the behavior of the function.</param>
             <returns>1EnvelopesInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.ListStatusChangesWithHttpInfo(System.String,DocuSign.eSign.Api.EnvelopesApi.ListStatusChangesOptions)">
             <summary>
             Gets status changes for one or more envelopes.
             </summary>
             <remarks>
             Retrieves envelope status changes for all envelopes. You can modify the information returned by adding query strings to limit the request to check between certain dates and times, or for certain envelopes, or for certain status codes. It is recommended that you use one or more of the query strings in order to limit the size of the response.\n\n### Important: Unless you are requesting the status for specific envelopes (using the `envelopeIds` or `transactionIds` properties), you must add a set the `from_date` property in the request.\n\nGetting envelope status using `transactionIds` is useful for offline signing situations where it can be used determine if an envelope was created or not, for the cases where a network connection was lost, before the envelope status could be returned.\n\n### Request Envelope Status Notes ###\n\nThe REST API GET /envelopes call uses certain filters to find results. In some cases requests are check for \&quot;any status change\&quot; instead of the just the single status requested. In these cases, more envelopes might be returned by the request than otherwise would be. For example, for a request with the begin date is set to Jan 1st, an end date set to Jan 7th and the status qualifier (`from_to_status`) set to `Delivered` &amp;mdash; the response set might contain envelopes that were created during that time period, but not delivered during the time period.\n\nTo avoid unnecessary database queries, the DocuSign system checks requests to ensure that the added filters will not result in a zero-size response before acting on the request. The following table shows the valid envelope statuses (in the Valid Current Statuses column) for the status qualifiers in the request. If the status and status qualifiers in the API request do not contain any of the values shown in the valid current statuses column, then an empty list is returned.\n\nFor example, a request with a status qualifier (from_to_status) of `Delivered` and a status of \&quot;`Created`,`Sent`\&quot;, DocuSign will always return an empty list. This is because the request essentially translates to: find the envelopes that were delivered between the begin and end dates that have a current status of `Created` or `Sent`, and since an envelope that has been delivered can never have a status of `Created` or `Sent`, a zero-size response would be generated. In this case, DocuSign does not run the request, but just returns the empty list.\n\nClient applications should check that the statuses they are requesting make sense for a given status qualifier.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="options">Options for modifying the behavior of the function.</param>
             <returns>2ApiResponse of EnvelopesInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.ListStatusChangesAsync(System.String,DocuSign.eSign.Api.EnvelopesApi.ListStatusChangesOptions)">
             <summary>
             Gets status changes for one or more envelopes.
             </summary>
             <remarks>
             Retrieves envelope status changes for all envelopes. You can modify the information returned by adding query strings to limit the request to check between certain dates and times, or for certain envelopes, or for certain status codes. It is recommended that you use one or more of the query strings in order to limit the size of the response.\n\n### Important: Unless you are requesting the status for specific envelopes (using the `envelopeIds` or `transactionIds` properties), you must add a set the `from_date` property in the request.\n\nGetting envelope status using `transactionIds` is useful for offline signing situations where it can be used determine if an envelope was created or not, for the cases where a network connection was lost, before the envelope status could be returned.\n\n### Request Envelope Status Notes ###\n\nThe REST API GET /envelopes call uses certain filters to find results. In some cases requests are check for \&quot;any status change\&quot; instead of the just the single status requested. In these cases, more envelopes might be returned by the request than otherwise would be. For example, for a request with the begin date is set to Jan 1st, an end date set to Jan 7th and the status qualifier (`from_to_status`) set to `Delivered` &amp;mdash; the response set might contain envelopes that were created during that time period, but not delivered during the time period.\n\nTo avoid unnecessary database queries, the DocuSign system checks requests to ensure that the added filters will not result in a zero-size response before acting on the request. The following table shows the valid envelope statuses (in the Valid Current Statuses column) for the status qualifiers in the request. If the status and status qualifiers in the API request do not contain any of the values shown in the valid current statuses column, then an empty list is returned.\n\nFor example, a request with a status qualifier (from_to_status) of `Delivered` and a status of \&quot;`Created`,`Sent`\&quot;, DocuSign will always return an empty list. This is because the request essentially translates to: find the envelopes that were delivered between the begin and end dates that have a current status of `Created` or `Sent`, and since an envelope that has been delivered can never have a status of `Created` or `Sent`, a zero-size response would be generated. In this case, DocuSign does not run the request, but just returns the empty list.\n\nClient applications should check that the statuses they are requesting make sense for a given status qualifier.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="options">Options for modifying the behavior of the function.</param>
             <returns>3Task of EnvelopesInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.ListStatusChangesAsyncWithHttpInfo(System.String,DocuSign.eSign.Api.EnvelopesApi.ListStatusChangesOptions)">
             <summary>
             Gets status changes for one or more envelopes.
             </summary>
             <remarks>
             Retrieves envelope status changes for all envelopes. You can modify the information returned by adding query strings to limit the request to check between certain dates and times, or for certain envelopes, or for certain status codes. It is recommended that you use one or more of the query strings in order to limit the size of the response.\n\n### Important: Unless you are requesting the status for specific envelopes (using the `envelopeIds` or `transactionIds` properties), you must add a set the `from_date` property in the request.\n\nGetting envelope status using `transactionIds` is useful for offline signing situations where it can be used determine if an envelope was created or not, for the cases where a network connection was lost, before the envelope status could be returned.\n\n### Request Envelope Status Notes ###\n\nThe REST API GET /envelopes call uses certain filters to find results. In some cases requests are check for \&quot;any status change\&quot; instead of the just the single status requested. In these cases, more envelopes might be returned by the request than otherwise would be. For example, for a request with the begin date is set to Jan 1st, an end date set to Jan 7th and the status qualifier (`from_to_status`) set to `Delivered` &amp;mdash; the response set might contain envelopes that were created during that time period, but not delivered during the time period.\n\nTo avoid unnecessary database queries, the DocuSign system checks requests to ensure that the added filters will not result in a zero-size response before acting on the request. The following table shows the valid envelope statuses (in the Valid Current Statuses column) for the status qualifiers in the request. If the status and status qualifiers in the API request do not contain any of the values shown in the valid current statuses column, then an empty list is returned.\n\nFor example, a request with a status qualifier (from_to_status) of `Delivered` and a status of \&quot;`Created`,`Sent`\&quot;, DocuSign will always return an empty list. This is because the request essentially translates to: find the envelopes that were delivered between the begin and end dates that have a current status of `Created` or `Sent`, and since an envelope that has been delivered can never have a status of `Created` or `Sent`, a zero-size response would be generated. In this case, DocuSign does not run the request, but just returns the empty list.\n\nClient applications should check that the statuses they are requesting make sense for a given status qualifier.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="options">Options for modifying the behavior of the function.</param>
             <returns>4Task of ApiResponse (EnvelopesInformation)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.CreateEnvelope(System.String,DocuSign.eSign.Model.EnvelopeDefinition,DocuSign.eSign.Api.EnvelopesApi.CreateEnvelopeOptions)">
            <summary>
            Creates an envelope.
            </summary>
            <remarks>
            Creates an envelope. \n\nUsing this function you can:\n* Create an envelope and send it.\n* Create an envelope from an existing template and send it.\n\nIn either case, you can choose to save the envelope as a draft envelope instead of sending it by setting the `status` property in the request to `created` instead of `sent`.\n\n### Send an Envelope or Create a Draft Envelope\n\nThis is a multi-part/form request.\n\nEnvelope Event Notification: `eventNotification` is an optional property that specifies a set of envelope and recipient status codes, a URL, and some other options. When the envelope or recipient status changes to one of the specified status codes, DocuSign sends a message containing the updated status to the specified URL.\n\n### Note: DocuSign Connect must be enabled to use `eventNotification`, but Connect does not need to be configured for the account since the configuration is done for each envelope.\n\n### Send an Envelope from a Template\n\nWhen you create an envelope using a `templateId`, the `recipients` structure is used to assign recipients to template roles via the `roleName` property, override recipient settings that have been specified in the template and set values for tab fields that were defined in the template.\n\nWhen a template is added or applied to an envelope and the template has a locked email subject and message, that subject and message is used for the envelope and cannot be changed even if another locked template is subsequently added or applied to the envelope. If an email subject or message is entered before adding or applying a locked template, the email subject and message is overwritten with the email subject and message from the locked template.\n\n**Composite Templates**:\n\nYou can add Composite Templates structure to the  to create envelopes from a combination of DocuSign templates and PDF forms. The basic envelope remains the same, while the Composite Template adds new document and template overlays into the envelope. There can be any number of Composite Template structures in the envelope.\n\nEach Composite Template consists of server templates, inline templates, PDF Metadata templates, and documents.\n\n* Composite Template ID is an optional element used to identify the composite template. It is used as a reference when adding document object information. If used, the document content-disposition must include the `compositeTemplateId` to which the document should be added. If `compositeTemplateId` is not specified in the content-disposition, the document is applied based on the `documentId` only. If no document object is specified, the composite template inherits the first document.\n* Server Templates are server-side templates stored on the DocuSign server. If supplied they are overlaid into the envelope in the order of their Sequence value.\n* Inline Templates provide the container to pass inline XML properties. Inline templates allow you to add documents and, for PDF documents, transform the PDF fields into DocuSign tabs. If inline templates are supplied, they are overlaid into the envelope in the order of their Sequence value.\n* PDF Metadata Templates provide a container to embed design-time template information into a PDF document. DocuSign uses this information when processing the Envelope. This convention allows the document to carry the signing instructions with it, so that less information needs to be provided at run-time through an inline template or synchronized with an external structure like a server template. PDF Metadata templates are stored in the Metadata layer of a PDF in accordance with Acrobat&#39;s XMP specification. DocuSign will only find PDF Metadata templates inside documents passed in the Document object (see below). If supplied the PDF meta data template will be overlaid into the envelope in the order of their Sequence value.\n* Document objects are optional structures that provide a container to pass in a document or form. If this object is not passed, the composite template inherits the first document it finds from some other server template or inline template, starting with the lowest sequence value (discussed below).\n\nIf there are multiple composite templates, the document content-disposition can include the `compositeTemplateId` to which the document should be added. Using the `compositeTemplateId` sets which documents are associated with particular composite templates. An example of this usage is:\n\n```\n   --5cd3320a-5aac-4453-b3a4-cbb52a4cba5d\n\n   Content-Type: application/pdf\n\n   Content-Disposition: file; filename=\&quot;eula.pdf\&quot;; documentId=1; compositeTemplateId=\&quot;1\&quot;\n\n   Content-Transfer-Encoding: base64\n```\n\nAcrobat form objects are only extrapolated from the document object. DocuSign does not derive Acrobat form properties from server templates or inline templates. To instruct DocuSign to extrapolate objects from the Acrobat form, set `transformPdfFields` to \&quot;true\&quot; for the document. See the Transform PDF Fields section for more information about how fields are transformed into DocuSign tabs.\n\n*Sequence*\n\nEach type of template has a sequence property, which enables the templates to be over-laid in a particular order. This is significant because \&quot;last-out\&quot; wins in cases of the same property being specified in multiple places in the method schema.\n\n**Merge Recipient Roles for Draft Envelopes**\n\nWhen an envelope with multiple templates is sent, the recipients from the templates are merged according to template roles and empty recipients are removed. When creating an envelope with multiple templates, but not sending it (keeping it in a created state), duplicate recipients are not merged, which could cause leave duplicate recipients in the envelope.\n\nTo prevent this, the query parameter `merge_roles_on_draft` should be added when posting a draft envelope (status=created) with multiple templates. Doing this will merge template roles and remove empty recipients.\n\n### Note: DocuSign recommends that the merge roles query parameter be used anytime you are creating an envelope with multiple templates and keeping it in draft (created) status.\n\n**Template Email Subject Merge Fields**\n\nThis provides the ability to insert recipient name and email address merge fields into the email subject line when creating or sending from a template.\n\nThe merge fields, based on the recipient’s `roleName`, are added to the `emailSubject` when the template is created or when the template is used to create an envelope. After a template sender adds the name and email information for the recipient and sends the envelope, the recipient information is automatically merged into the appropriate fields in the email subject line.\n\nBoth the sender and the recipients will see the information in the email subject line for any emails associated with the template. This provides an easy way for senders to organize their envelope emails without having to open an envelope to check the recipient.\n\nIf merging the recipient information into the subject line causes the subject line to exceed 100 characters, then any characters over the 100 character limit are not included in the subject line. For cases where the recipient name or email is expected to be long, you should consider placing the merge field at the start of the email subject.\n\n* To add a recipient’s name in the subject line add the following text in the `emailSubject` when creating the template or when sending an envelope from a template:\n\n   [[&lt;roleName&gt;_UserName]]\n\n   Example:\n\n   `\&quot;emailSubject\&quot;:\&quot;[[Signer 1_UserName]], Please sign this NDA\&quot;,`\n\n* To add a recipient’s email address in the subject line add the following text in the emailSubject when creating the template or when sending an envelope from a template:\n\n   [[&lt;roleName&gt;_Email]]\n\n   Example:\n\n   `\&quot;emailSubject\&quot;:\&quot;[[Signer 1_Email]], Please sign this NDA\&quot;,`\n\nIn both cases the &lt;roleName&gt; is the recipient’s `roleName` in the template.\n\nFor cases where another recipient (such as an Agent, Editor, or Intermediary recipient) is entering the name and email information for the recipient included in the email subject, then [[&lt;roleName&gt;_UserName]] or [[&lt;roleName&gt;_Email]] is shown in the email subject.\n\n*Rules for determining the `brandId` used in an envelope*\n\nThe following rules are used to determine the `brandId` used in an envelope:\n\n* If a `brandId` is specified in the envelope/template and that brandId is available to the account, that brand is used in the envelope.\n* If more than one template is used in an envelope and more than one `brandId` is specified, the first `brandId` specified is used throughout the envelope.\n* In cases where no brand is specified and the sender belongs to a Group; if there is only one brand associated with the Group, then that brand is used in the envelope. Otherwise, the account’s default signing brand is used.\n* For envelopes that do not meet any of the previous rules, the account&#39;s default signing brand is used in the envelope.\n\n### Important: The BCC Email address feature is designed to provide a copy of all email communications for external archiving purposes. DocuSign recommends that envelopes sent using the BCC for Email Archive feature, including the BCC Email Override option, include additional signer authentication options. To send a copy of the envelope to a recipient who does not need to sign, use a Carbon Copies or Certified Deliveries Recipient Type.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="envelopeDefinition">TBD Description</param> <param name="options">Options for modifying the behavior of the function.</param>
             <returns>1EnvelopeSummary</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.CreateEnvelopeWithHttpInfo(System.String,DocuSign.eSign.Model.EnvelopeDefinition,DocuSign.eSign.Api.EnvelopesApi.CreateEnvelopeOptions)">
             <summary>
             Creates an envelope.
             </summary>
             <remarks>
             Creates an envelope. \n\nUsing this function you can:\n* Create an envelope and send it.\n* Create an envelope from an existing template and send it.\n\nIn either case, you can choose to save the envelope as a draft envelope instead of sending it by setting the `status` property in the request to `created` instead of `sent`.\n\n### Send an Envelope or Create a Draft Envelope\n\nThis is a multi-part/form request.\n\nEnvelope Event Notification: `eventNotification` is an optional property that specifies a set of envelope and recipient status codes, a URL, and some other options. When the envelope or recipient status changes to one of the specified status codes, DocuSign sends a message containing the updated status to the specified URL.\n\n### Note: DocuSign Connect must be enabled to use `eventNotification`, but Connect does not need to be configured for the account since the configuration is done for each envelope.\n\n### Send an Envelope from a Template\n\nWhen you create an envelope using a `templateId`, the `recipients` structure is used to assign recipients to template roles via the `roleName` property, override recipient settings that have been specified in the template and set values for tab fields that were defined in the template.\n\nWhen a template is added or applied to an envelope and the template has a locked email subject and message, that subject and message is used for the envelope and cannot be changed even if another locked template is subsequently added or applied to the envelope. If an email subject or message is entered before adding or applying a locked template, the email subject and message is overwritten with the email subject and message from the locked template.\n\n**Composite Templates**:\n\nYou can add Composite Templates structure to the  to create envelopes from a combination of DocuSign templates and PDF forms. The basic envelope remains the same, while the Composite Template adds new document and template overlays into the envelope. There can be any number of Composite Template structures in the envelope.\n\nEach Composite Template consists of server templates, inline templates, PDF Metadata templates, and documents.\n\n* Composite Template ID is an optional element used to identify the composite template. It is used as a reference when adding document object information. If used, the document content-disposition must include the `compositeTemplateId` to which the document should be added. If `compositeTemplateId` is not specified in the content-disposition, the document is applied based on the `documentId` only. If no document object is specified, the composite template inherits the first document.\n* Server Templates are server-side templates stored on the DocuSign server. If supplied they are overlaid into the envelope in the order of their Sequence value.\n* Inline Templates provide the container to pass inline XML properties. Inline templates allow you to add documents and, for PDF documents, transform the PDF fields into DocuSign tabs. If inline templates are supplied, they are overlaid into the envelope in the order of their Sequence value.\n* PDF Metadata Templates provide a container to embed design-time template information into a PDF document. DocuSign uses this information when processing the Envelope. This convention allows the document to carry the signing instructions with it, so that less information needs to be provided at run-time through an inline template or synchronized with an external structure like a server template. PDF Metadata templates are stored in the Metadata layer of a PDF in accordance with Acrobat&#39;s XMP specification. DocuSign will only find PDF Metadata templates inside documents passed in the Document object (see below). If supplied the PDF meta data template will be overlaid into the envelope in the order of their Sequence value.\n* Document objects are optional structures that provide a container to pass in a document or form. If this object is not passed, the composite template inherits the first document it finds from some other server template or inline template, starting with the lowest sequence value (discussed below).\n\nIf there are multiple composite templates, the document content-disposition can include the `compositeTemplateId` to which the document should be added. Using the `compositeTemplateId` sets which documents are associated with particular composite templates. An example of this usage is:\n\n```\n   --5cd3320a-5aac-4453-b3a4-cbb52a4cba5d\n\n   Content-Type: application/pdf\n\n   Content-Disposition: file; filename=\&quot;eula.pdf\&quot;; documentId=1; compositeTemplateId=\&quot;1\&quot;\n\n   Content-Transfer-Encoding: base64\n```\n\nAcrobat form objects are only extrapolated from the document object. DocuSign does not derive Acrobat form properties from server templates or inline templates. To instruct DocuSign to extrapolate objects from the Acrobat form, set `transformPdfFields` to \&quot;true\&quot; for the document. See the Transform PDF Fields section for more information about how fields are transformed into DocuSign tabs.\n\n*Sequence*\n\nEach type of template has a sequence property, which enables the templates to be over-laid in a particular order. This is significant because \&quot;last-out\&quot; wins in cases of the same property being specified in multiple places in the method schema.\n\n**Merge Recipient Roles for Draft Envelopes**\n\nWhen an envelope with multiple templates is sent, the recipients from the templates are merged according to template roles and empty recipients are removed. When creating an envelope with multiple templates, but not sending it (keeping it in a created state), duplicate recipients are not merged, which could cause leave duplicate recipients in the envelope.\n\nTo prevent this, the query parameter `merge_roles_on_draft` should be added when posting a draft envelope (status=created) with multiple templates. Doing this will merge template roles and remove empty recipients.\n\n### Note: DocuSign recommends that the merge roles query parameter be used anytime you are creating an envelope with multiple templates and keeping it in draft (created) status.\n\n**Template Email Subject Merge Fields**\n\nThis provides the ability to insert recipient name and email address merge fields into the email subject line when creating or sending from a template.\n\nThe merge fields, based on the recipient’s `roleName`, are added to the `emailSubject` when the template is created or when the template is used to create an envelope. After a template sender adds the name and email information for the recipient and sends the envelope, the recipient information is automatically merged into the appropriate fields in the email subject line.\n\nBoth the sender and the recipients will see the information in the email subject line for any emails associated with the template. This provides an easy way for senders to organize their envelope emails without having to open an envelope to check the recipient.\n\nIf merging the recipient information into the subject line causes the subject line to exceed 100 characters, then any characters over the 100 character limit are not included in the subject line. For cases where the recipient name or email is expected to be long, you should consider placing the merge field at the start of the email subject.\n\n* To add a recipient’s name in the subject line add the following text in the `emailSubject` when creating the template or when sending an envelope from a template:\n\n   [[&lt;roleName&gt;_UserName]]\n\n   Example:\n\n   `\&quot;emailSubject\&quot;:\&quot;[[Signer 1_UserName]], Please sign this NDA\&quot;,`\n\n* To add a recipient’s email address in the subject line add the following text in the emailSubject when creating the template or when sending an envelope from a template:\n\n   [[&lt;roleName&gt;_Email]]\n\n   Example:\n\n   `\&quot;emailSubject\&quot;:\&quot;[[Signer 1_Email]], Please sign this NDA\&quot;,`\n\nIn both cases the &lt;roleName&gt; is the recipient’s `roleName` in the template.\n\nFor cases where another recipient (such as an Agent, Editor, or Intermediary recipient) is entering the name and email information for the recipient included in the email subject, then [[&lt;roleName&gt;_UserName]] or [[&lt;roleName&gt;_Email]] is shown in the email subject.\n\n*Rules for determining the `brandId` used in an envelope*\n\nThe following rules are used to determine the `brandId` used in an envelope:\n\n* If a `brandId` is specified in the envelope/template and that brandId is available to the account, that brand is used in the envelope.\n* If more than one template is used in an envelope and more than one `brandId` is specified, the first `brandId` specified is used throughout the envelope.\n* In cases where no brand is specified and the sender belongs to a Group; if there is only one brand associated with the Group, then that brand is used in the envelope. Otherwise, the account’s default signing brand is used.\n* For envelopes that do not meet any of the previous rules, the account&#39;s default signing brand is used in the envelope.\n\n### Important: The BCC Email address feature is designed to provide a copy of all email communications for external archiving purposes. DocuSign recommends that envelopes sent using the BCC for Email Archive feature, including the BCC Email Override option, include additional signer authentication options. To send a copy of the envelope to a recipient who does not need to sign, use a Carbon Copies or Certified Deliveries Recipient Type.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="envelopeDefinition">TBD Description</param> <param name="options">Options for modifying the behavior of the function.</param>
             <returns>2ApiResponse of EnvelopeSummary</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.CreateEnvelopeAsync(System.String,DocuSign.eSign.Model.EnvelopeDefinition,DocuSign.eSign.Api.EnvelopesApi.CreateEnvelopeOptions)">
             <summary>
             Creates an envelope.
             </summary>
             <remarks>
             Creates an envelope. \n\nUsing this function you can:\n* Create an envelope and send it.\n* Create an envelope from an existing template and send it.\n\nIn either case, you can choose to save the envelope as a draft envelope instead of sending it by setting the `status` property in the request to `created` instead of `sent`.\n\n### Send an Envelope or Create a Draft Envelope\n\nThis is a multi-part/form request.\n\nEnvelope Event Notification: `eventNotification` is an optional property that specifies a set of envelope and recipient status codes, a URL, and some other options. When the envelope or recipient status changes to one of the specified status codes, DocuSign sends a message containing the updated status to the specified URL.\n\n### Note: DocuSign Connect must be enabled to use `eventNotification`, but Connect does not need to be configured for the account since the configuration is done for each envelope.\n\n### Send an Envelope from a Template\n\nWhen you create an envelope using a `templateId`, the `recipients` structure is used to assign recipients to template roles via the `roleName` property, override recipient settings that have been specified in the template and set values for tab fields that were defined in the template.\n\nWhen a template is added or applied to an envelope and the template has a locked email subject and message, that subject and message is used for the envelope and cannot be changed even if another locked template is subsequently added or applied to the envelope. If an email subject or message is entered before adding or applying a locked template, the email subject and message is overwritten with the email subject and message from the locked template.\n\n**Composite Templates**:\n\nYou can add Composite Templates structure to the  to create envelopes from a combination of DocuSign templates and PDF forms. The basic envelope remains the same, while the Composite Template adds new document and template overlays into the envelope. There can be any number of Composite Template structures in the envelope.\n\nEach Composite Template consists of server templates, inline templates, PDF Metadata templates, and documents.\n\n* Composite Template ID is an optional element used to identify the composite template. It is used as a reference when adding document object information. If used, the document content-disposition must include the `compositeTemplateId` to which the document should be added. If `compositeTemplateId` is not specified in the content-disposition, the document is applied based on the `documentId` only. If no document object is specified, the composite template inherits the first document.\n* Server Templates are server-side templates stored on the DocuSign server. If supplied they are overlaid into the envelope in the order of their Sequence value.\n* Inline Templates provide the container to pass inline XML properties. Inline templates allow you to add documents and, for PDF documents, transform the PDF fields into DocuSign tabs. If inline templates are supplied, they are overlaid into the envelope in the order of their Sequence value.\n* PDF Metadata Templates provide a container to embed design-time template information into a PDF document. DocuSign uses this information when processing the Envelope. This convention allows the document to carry the signing instructions with it, so that less information needs to be provided at run-time through an inline template or synchronized with an external structure like a server template. PDF Metadata templates are stored in the Metadata layer of a PDF in accordance with Acrobat&#39;s XMP specification. DocuSign will only find PDF Metadata templates inside documents passed in the Document object (see below). If supplied the PDF meta data template will be overlaid into the envelope in the order of their Sequence value.\n* Document objects are optional structures that provide a container to pass in a document or form. If this object is not passed, the composite template inherits the first document it finds from some other server template or inline template, starting with the lowest sequence value (discussed below).\n\nIf there are multiple composite templates, the document content-disposition can include the `compositeTemplateId` to which the document should be added. Using the `compositeTemplateId` sets which documents are associated with particular composite templates. An example of this usage is:\n\n```\n   --5cd3320a-5aac-4453-b3a4-cbb52a4cba5d\n\n   Content-Type: application/pdf\n\n   Content-Disposition: file; filename=\&quot;eula.pdf\&quot;; documentId=1; compositeTemplateId=\&quot;1\&quot;\n\n   Content-Transfer-Encoding: base64\n```\n\nAcrobat form objects are only extrapolated from the document object. DocuSign does not derive Acrobat form properties from server templates or inline templates. To instruct DocuSign to extrapolate objects from the Acrobat form, set `transformPdfFields` to \&quot;true\&quot; for the document. See the Transform PDF Fields section for more information about how fields are transformed into DocuSign tabs.\n\n*Sequence*\n\nEach type of template has a sequence property, which enables the templates to be over-laid in a particular order. This is significant because \&quot;last-out\&quot; wins in cases of the same property being specified in multiple places in the method schema.\n\n**Merge Recipient Roles for Draft Envelopes**\n\nWhen an envelope with multiple templates is sent, the recipients from the templates are merged according to template roles and empty recipients are removed. When creating an envelope with multiple templates, but not sending it (keeping it in a created state), duplicate recipients are not merged, which could cause leave duplicate recipients in the envelope.\n\nTo prevent this, the query parameter `merge_roles_on_draft` should be added when posting a draft envelope (status=created) with multiple templates. Doing this will merge template roles and remove empty recipients.\n\n### Note: DocuSign recommends that the merge roles query parameter be used anytime you are creating an envelope with multiple templates and keeping it in draft (created) status.\n\n**Template Email Subject Merge Fields**\n\nThis provides the ability to insert recipient name and email address merge fields into the email subject line when creating or sending from a template.\n\nThe merge fields, based on the recipient’s `roleName`, are added to the `emailSubject` when the template is created or when the template is used to create an envelope. After a template sender adds the name and email information for the recipient and sends the envelope, the recipient information is automatically merged into the appropriate fields in the email subject line.\n\nBoth the sender and the recipients will see the information in the email subject line for any emails associated with the template. This provides an easy way for senders to organize their envelope emails without having to open an envelope to check the recipient.\n\nIf merging the recipient information into the subject line causes the subject line to exceed 100 characters, then any characters over the 100 character limit are not included in the subject line. For cases where the recipient name or email is expected to be long, you should consider placing the merge field at the start of the email subject.\n\n* To add a recipient’s name in the subject line add the following text in the `emailSubject` when creating the template or when sending an envelope from a template:\n\n   [[&lt;roleName&gt;_UserName]]\n\n   Example:\n\n   `\&quot;emailSubject\&quot;:\&quot;[[Signer 1_UserName]], Please sign this NDA\&quot;,`\n\n* To add a recipient’s email address in the subject line add the following text in the emailSubject when creating the template or when sending an envelope from a template:\n\n   [[&lt;roleName&gt;_Email]]\n\n   Example:\n\n   `\&quot;emailSubject\&quot;:\&quot;[[Signer 1_Email]], Please sign this NDA\&quot;,`\n\nIn both cases the &lt;roleName&gt; is the recipient’s `roleName` in the template.\n\nFor cases where another recipient (such as an Agent, Editor, or Intermediary recipient) is entering the name and email information for the recipient included in the email subject, then [[&lt;roleName&gt;_UserName]] or [[&lt;roleName&gt;_Email]] is shown in the email subject.\n\n*Rules for determining the `brandId` used in an envelope*\n\nThe following rules are used to determine the `brandId` used in an envelope:\n\n* If a `brandId` is specified in the envelope/template and that brandId is available to the account, that brand is used in the envelope.\n* If more than one template is used in an envelope and more than one `brandId` is specified, the first `brandId` specified is used throughout the envelope.\n* In cases where no brand is specified and the sender belongs to a Group; if there is only one brand associated with the Group, then that brand is used in the envelope. Otherwise, the account’s default signing brand is used.\n* For envelopes that do not meet any of the previous rules, the account&#39;s default signing brand is used in the envelope.\n\n### Important: The BCC Email address feature is designed to provide a copy of all email communications for external archiving purposes. DocuSign recommends that envelopes sent using the BCC for Email Archive feature, including the BCC Email Override option, include additional signer authentication options. To send a copy of the envelope to a recipient who does not need to sign, use a Carbon Copies or Certified Deliveries Recipient Type.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="envelopeDefinition">TBD Description</param> <param name="options">Options for modifying the behavior of the function.</param>
             <returns>3Task of EnvelopeSummary</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.CreateEnvelopeAsyncWithHttpInfo(System.String,DocuSign.eSign.Model.EnvelopeDefinition,DocuSign.eSign.Api.EnvelopesApi.CreateEnvelopeOptions)">
             <summary>
             Creates an envelope.
             </summary>
             <remarks>
             Creates an envelope. \n\nUsing this function you can:\n* Create an envelope and send it.\n* Create an envelope from an existing template and send it.\n\nIn either case, you can choose to save the envelope as a draft envelope instead of sending it by setting the `status` property in the request to `created` instead of `sent`.\n\n### Send an Envelope or Create a Draft Envelope\n\nThis is a multi-part/form request.\n\nEnvelope Event Notification: `eventNotification` is an optional property that specifies a set of envelope and recipient status codes, a URL, and some other options. When the envelope or recipient status changes to one of the specified status codes, DocuSign sends a message containing the updated status to the specified URL.\n\n### Note: DocuSign Connect must be enabled to use `eventNotification`, but Connect does not need to be configured for the account since the configuration is done for each envelope.\n\n### Send an Envelope from a Template\n\nWhen you create an envelope using a `templateId`, the `recipients` structure is used to assign recipients to template roles via the `roleName` property, override recipient settings that have been specified in the template and set values for tab fields that were defined in the template.\n\nWhen a template is added or applied to an envelope and the template has a locked email subject and message, that subject and message is used for the envelope and cannot be changed even if another locked template is subsequently added or applied to the envelope. If an email subject or message is entered before adding or applying a locked template, the email subject and message is overwritten with the email subject and message from the locked template.\n\n**Composite Templates**:\n\nYou can add Composite Templates structure to the  to create envelopes from a combination of DocuSign templates and PDF forms. The basic envelope remains the same, while the Composite Template adds new document and template overlays into the envelope. There can be any number of Composite Template structures in the envelope.\n\nEach Composite Template consists of server templates, inline templates, PDF Metadata templates, and documents.\n\n* Composite Template ID is an optional element used to identify the composite template. It is used as a reference when adding document object information. If used, the document content-disposition must include the `compositeTemplateId` to which the document should be added. If `compositeTemplateId` is not specified in the content-disposition, the document is applied based on the `documentId` only. If no document object is specified, the composite template inherits the first document.\n* Server Templates are server-side templates stored on the DocuSign server. If supplied they are overlaid into the envelope in the order of their Sequence value.\n* Inline Templates provide the container to pass inline XML properties. Inline templates allow you to add documents and, for PDF documents, transform the PDF fields into DocuSign tabs. If inline templates are supplied, they are overlaid into the envelope in the order of their Sequence value.\n* PDF Metadata Templates provide a container to embed design-time template information into a PDF document. DocuSign uses this information when processing the Envelope. This convention allows the document to carry the signing instructions with it, so that less information needs to be provided at run-time through an inline template or synchronized with an external structure like a server template. PDF Metadata templates are stored in the Metadata layer of a PDF in accordance with Acrobat&#39;s XMP specification. DocuSign will only find PDF Metadata templates inside documents passed in the Document object (see below). If supplied the PDF meta data template will be overlaid into the envelope in the order of their Sequence value.\n* Document objects are optional structures that provide a container to pass in a document or form. If this object is not passed, the composite template inherits the first document it finds from some other server template or inline template, starting with the lowest sequence value (discussed below).\n\nIf there are multiple composite templates, the document content-disposition can include the `compositeTemplateId` to which the document should be added. Using the `compositeTemplateId` sets which documents are associated with particular composite templates. An example of this usage is:\n\n```\n   --5cd3320a-5aac-4453-b3a4-cbb52a4cba5d\n\n   Content-Type: application/pdf\n\n   Content-Disposition: file; filename=\&quot;eula.pdf\&quot;; documentId=1; compositeTemplateId=\&quot;1\&quot;\n\n   Content-Transfer-Encoding: base64\n```\n\nAcrobat form objects are only extrapolated from the document object. DocuSign does not derive Acrobat form properties from server templates or inline templates. To instruct DocuSign to extrapolate objects from the Acrobat form, set `transformPdfFields` to \&quot;true\&quot; for the document. See the Transform PDF Fields section for more information about how fields are transformed into DocuSign tabs.\n\n*Sequence*\n\nEach type of template has a sequence property, which enables the templates to be over-laid in a particular order. This is significant because \&quot;last-out\&quot; wins in cases of the same property being specified in multiple places in the method schema.\n\n**Merge Recipient Roles for Draft Envelopes**\n\nWhen an envelope with multiple templates is sent, the recipients from the templates are merged according to template roles and empty recipients are removed. When creating an envelope with multiple templates, but not sending it (keeping it in a created state), duplicate recipients are not merged, which could cause leave duplicate recipients in the envelope.\n\nTo prevent this, the query parameter `merge_roles_on_draft` should be added when posting a draft envelope (status=created) with multiple templates. Doing this will merge template roles and remove empty recipients.\n\n### Note: DocuSign recommends that the merge roles query parameter be used anytime you are creating an envelope with multiple templates and keeping it in draft (created) status.\n\n**Template Email Subject Merge Fields**\n\nThis provides the ability to insert recipient name and email address merge fields into the email subject line when creating or sending from a template.\n\nThe merge fields, based on the recipient’s `roleName`, are added to the `emailSubject` when the template is created or when the template is used to create an envelope. After a template sender adds the name and email information for the recipient and sends the envelope, the recipient information is automatically merged into the appropriate fields in the email subject line.\n\nBoth the sender and the recipients will see the information in the email subject line for any emails associated with the template. This provides an easy way for senders to organize their envelope emails without having to open an envelope to check the recipient.\n\nIf merging the recipient information into the subject line causes the subject line to exceed 100 characters, then any characters over the 100 character limit are not included in the subject line. For cases where the recipient name or email is expected to be long, you should consider placing the merge field at the start of the email subject.\n\n* To add a recipient’s name in the subject line add the following text in the `emailSubject` when creating the template or when sending an envelope from a template:\n\n   [[&lt;roleName&gt;_UserName]]\n\n   Example:\n\n   `\&quot;emailSubject\&quot;:\&quot;[[Signer 1_UserName]], Please sign this NDA\&quot;,`\n\n* To add a recipient’s email address in the subject line add the following text in the emailSubject when creating the template or when sending an envelope from a template:\n\n   [[&lt;roleName&gt;_Email]]\n\n   Example:\n\n   `\&quot;emailSubject\&quot;:\&quot;[[Signer 1_Email]], Please sign this NDA\&quot;,`\n\nIn both cases the &lt;roleName&gt; is the recipient’s `roleName` in the template.\n\nFor cases where another recipient (such as an Agent, Editor, or Intermediary recipient) is entering the name and email information for the recipient included in the email subject, then [[&lt;roleName&gt;_UserName]] or [[&lt;roleName&gt;_Email]] is shown in the email subject.\n\n*Rules for determining the `brandId` used in an envelope*\n\nThe following rules are used to determine the `brandId` used in an envelope:\n\n* If a `brandId` is specified in the envelope/template and that brandId is available to the account, that brand is used in the envelope.\n* If more than one template is used in an envelope and more than one `brandId` is specified, the first `brandId` specified is used throughout the envelope.\n* In cases where no brand is specified and the sender belongs to a Group; if there is only one brand associated with the Group, then that brand is used in the envelope. Otherwise, the account’s default signing brand is used.\n* For envelopes that do not meet any of the previous rules, the account&#39;s default signing brand is used in the envelope.\n\n### Important: The BCC Email address feature is designed to provide a copy of all email communications for external archiving purposes. DocuSign recommends that envelopes sent using the BCC for Email Archive feature, including the BCC Email Override option, include additional signer authentication options. To send a copy of the envelope to a recipient who does not need to sign, use a Carbon Copies or Certified Deliveries Recipient Type.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="envelopeDefinition">TBD Description</param> <param name="options">Options for modifying the behavior of the function.</param>
             <returns>4Task of ApiResponse (EnvelopeSummary)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.ListStatus(System.String,DocuSign.eSign.Model.EnvelopeIdsRequest)">
            <summary>
            Gets the envelope status for the specified envelopes.
            </summary>
            <remarks>
            Retrieves the envelope status for the specified envelopes.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="envelopeIdsRequest">TBD Description</param>
             <returns>1EnvelopesInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.ListStatusWithHttpInfo(System.String,DocuSign.eSign.Model.EnvelopeIdsRequest)">
             <summary>
             Gets the envelope status for the specified envelopes.
             </summary>
             <remarks>
             Retrieves the envelope status for the specified envelopes.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="envelopeIdsRequest">TBD Description</param>
             <returns>2ApiResponse of EnvelopesInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.ListStatusAsync(System.String,DocuSign.eSign.Model.EnvelopeIdsRequest)">
             <summary>
             Gets the envelope status for the specified envelopes.
             </summary>
             <remarks>
             Retrieves the envelope status for the specified envelopes.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="envelopeIdsRequest">TBD Description</param>
             <returns>3Task of EnvelopesInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.ListStatusAsyncWithHttpInfo(System.String,DocuSign.eSign.Model.EnvelopeIdsRequest)">
             <summary>
             Gets the envelope status for the specified envelopes.
             </summary>
             <remarks>
             Retrieves the envelope status for the specified envelopes.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="envelopeIdsRequest">TBD Description</param>
             <returns>4Task of ApiResponse (EnvelopesInformation)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.GetEnvelope(System.String,System.String,DocuSign.eSign.Api.EnvelopesApi.GetEnvelopeOptions)">
            <summary>
            Gets the status of a envelope.
            </summary>
            <remarks>
            Retrieves the overall status for the specified envelope.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="options">Options for modifying the behavior of the function.</param>
             <returns>1Envelope</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.GetEnvelopeWithHttpInfo(System.String,System.String,DocuSign.eSign.Api.EnvelopesApi.GetEnvelopeOptions)">
             <summary>
             Gets the status of a envelope.
             </summary>
             <remarks>
             Retrieves the overall status for the specified envelope.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="options">Options for modifying the behavior of the function.</param>
             <returns>2ApiResponse of Envelope</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.GetEnvelopeAsync(System.String,System.String,DocuSign.eSign.Api.EnvelopesApi.GetEnvelopeOptions)">
             <summary>
             Gets the status of a envelope.
             </summary>
             <remarks>
             Retrieves the overall status for the specified envelope.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="options">Options for modifying the behavior of the function.</param>
             <returns>3Task of Envelope</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.GetEnvelopeAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Api.EnvelopesApi.GetEnvelopeOptions)">
             <summary>
             Gets the status of a envelope.
             </summary>
             <remarks>
             Retrieves the overall status for the specified envelope.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="options">Options for modifying the behavior of the function.</param>
             <returns>4Task of ApiResponse (Envelope)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.Update(System.String,System.String,DocuSign.eSign.Model.Envelope,DocuSign.eSign.Api.EnvelopesApi.UpdateOptions)">
            <summary>
            Send Draft Envelope/Void Envelope/Move/Purge Envelope/Modify draft
            </summary>
            <remarks>
            The Put Envelopes endpoint provides the following functionality:\n\n* Sends the specified single draft envelope.\nAdd {\&quot;status\&quot;:\&quot;sent\&quot;} to the request body to send the envelope.\n\n* Voids the specified in-process envelope.\nAdd {\&quot;status\&quot;:\&quot;voided\&quot;, \&quot;voidedReason\&quot;:\&quot;The reason for voiding the envelope\&quot;} to the request body to void the envelope.\n\n* Replaces the current email subject and message for a draft envelope.\nAdd {\&quot;emailSubject\&quot;:\&quot;subject\&quot;,  \&quot;emailBlurb\&quot;:\&quot;message\&quot;}  to the request body to modify the subject and message.\n\n* Place the envelope documents and envelope metadata in a purge queue so that this information is removed from the DocuSign system.\nAdd {\&quot;purgeState\&quot;:\&quot;purge type\&quot;} to the request body.\n\n*Additional information on purging documents*\n\nThe purge request can only be used for completed envelopes that are not marked as the authoritative copy. The requesting user must have permission to purge documents and must be the sender (the requesting user can act as the sender using Send On Behalf Of).\n\n### Note: If you have set the Document Retention policy on your account, envelope documents are automatically placed in the purge queue and the warning emails are sent at the end of the retention period. \n### Note: You can set the Document Retention policy in the Classic DocuSign Experience by specifying the number of days to retain documents. \n### Note: Setting a Document Retention policy is the same as setting a schedule for purging documents.\n\nWhen the purge request is initiated the envelope documents, or documents and envelope metadata, are placed in a purge queue for deletion in 14 days. A warning email notification is sent to the sender and recipients associated with the envelope, notifying them that the envelope documents will be deleted in 14 days and providing a link to the documents. A second email is sent 7 days later with the same message. At the end of the 14-day period, the envelope documents are deleted from the system.\n\nIf `purgeState=\&quot;documents_queued\&quot;` is used in the request, then only the documents are deleted and any corresponding attachments and tabs remain in the DocuSign system. If `purgeState= \&quot;documents_and_metadata_queued\&quot;` is used in the request, then the documents, attachments, and tabs are deleted.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="envelope">TBD Description</param> <param name="options">Options for modifying the behavior of the function.</param>
             <returns>1EnvelopeUpdateSummary</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.UpdateWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.Envelope,DocuSign.eSign.Api.EnvelopesApi.UpdateOptions)">
             <summary>
             Send Draft Envelope/Void Envelope/Move/Purge Envelope/Modify draft
             </summary>
             <remarks>
             The Put Envelopes endpoint provides the following functionality:\n\n* Sends the specified single draft envelope.\nAdd {\&quot;status\&quot;:\&quot;sent\&quot;} to the request body to send the envelope.\n\n* Voids the specified in-process envelope.\nAdd {\&quot;status\&quot;:\&quot;voided\&quot;, \&quot;voidedReason\&quot;:\&quot;The reason for voiding the envelope\&quot;} to the request body to void the envelope.\n\n* Replaces the current email subject and message for a draft envelope.\nAdd {\&quot;emailSubject\&quot;:\&quot;subject\&quot;,  \&quot;emailBlurb\&quot;:\&quot;message\&quot;}  to the request body to modify the subject and message.\n\n* Place the envelope documents and envelope metadata in a purge queue so that this information is removed from the DocuSign system.\nAdd {\&quot;purgeState\&quot;:\&quot;purge type\&quot;} to the request body.\n\n*Additional information on purging documents*\n\nThe purge request can only be used for completed envelopes that are not marked as the authoritative copy. The requesting user must have permission to purge documents and must be the sender (the requesting user can act as the sender using Send On Behalf Of).\n\n### Note: If you have set the Document Retention policy on your account, envelope documents are automatically placed in the purge queue and the warning emails are sent at the end of the retention period. \n### Note: You can set the Document Retention policy in the Classic DocuSign Experience by specifying the number of days to retain documents. \n### Note: Setting a Document Retention policy is the same as setting a schedule for purging documents.\n\nWhen the purge request is initiated the envelope documents, or documents and envelope metadata, are placed in a purge queue for deletion in 14 days. A warning email notification is sent to the sender and recipients associated with the envelope, notifying them that the envelope documents will be deleted in 14 days and providing a link to the documents. A second email is sent 7 days later with the same message. At the end of the 14-day period, the envelope documents are deleted from the system.\n\nIf `purgeState=\&quot;documents_queued\&quot;` is used in the request, then only the documents are deleted and any corresponding attachments and tabs remain in the DocuSign system. If `purgeState= \&quot;documents_and_metadata_queued\&quot;` is used in the request, then the documents, attachments, and tabs are deleted.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="envelope">TBD Description</param> <param name="options">Options for modifying the behavior of the function.</param>
             <returns>2ApiResponse of EnvelopeUpdateSummary</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.UpdateAsync(System.String,System.String,DocuSign.eSign.Model.Envelope,DocuSign.eSign.Api.EnvelopesApi.UpdateOptions)">
             <summary>
             Send Draft Envelope/Void Envelope/Move/Purge Envelope/Modify draft
             </summary>
             <remarks>
             The Put Envelopes endpoint provides the following functionality:\n\n* Sends the specified single draft envelope.\nAdd {\&quot;status\&quot;:\&quot;sent\&quot;} to the request body to send the envelope.\n\n* Voids the specified in-process envelope.\nAdd {\&quot;status\&quot;:\&quot;voided\&quot;, \&quot;voidedReason\&quot;:\&quot;The reason for voiding the envelope\&quot;} to the request body to void the envelope.\n\n* Replaces the current email subject and message for a draft envelope.\nAdd {\&quot;emailSubject\&quot;:\&quot;subject\&quot;,  \&quot;emailBlurb\&quot;:\&quot;message\&quot;}  to the request body to modify the subject and message.\n\n* Place the envelope documents and envelope metadata in a purge queue so that this information is removed from the DocuSign system.\nAdd {\&quot;purgeState\&quot;:\&quot;purge type\&quot;} to the request body.\n\n*Additional information on purging documents*\n\nThe purge request can only be used for completed envelopes that are not marked as the authoritative copy. The requesting user must have permission to purge documents and must be the sender (the requesting user can act as the sender using Send On Behalf Of).\n\n### Note: If you have set the Document Retention policy on your account, envelope documents are automatically placed in the purge queue and the warning emails are sent at the end of the retention period. \n### Note: You can set the Document Retention policy in the Classic DocuSign Experience by specifying the number of days to retain documents. \n### Note: Setting a Document Retention policy is the same as setting a schedule for purging documents.\n\nWhen the purge request is initiated the envelope documents, or documents and envelope metadata, are placed in a purge queue for deletion in 14 days. A warning email notification is sent to the sender and recipients associated with the envelope, notifying them that the envelope documents will be deleted in 14 days and providing a link to the documents. A second email is sent 7 days later with the same message. At the end of the 14-day period, the envelope documents are deleted from the system.\n\nIf `purgeState=\&quot;documents_queued\&quot;` is used in the request, then only the documents are deleted and any corresponding attachments and tabs remain in the DocuSign system. If `purgeState= \&quot;documents_and_metadata_queued\&quot;` is used in the request, then the documents, attachments, and tabs are deleted.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="envelope">TBD Description</param> <param name="options">Options for modifying the behavior of the function.</param>
             <returns>3Task of EnvelopeUpdateSummary</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.UpdateAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.Envelope,DocuSign.eSign.Api.EnvelopesApi.UpdateOptions)">
             <summary>
             Send Draft Envelope/Void Envelope/Move/Purge Envelope/Modify draft
             </summary>
             <remarks>
             The Put Envelopes endpoint provides the following functionality:\n\n* Sends the specified single draft envelope.\nAdd {\&quot;status\&quot;:\&quot;sent\&quot;} to the request body to send the envelope.\n\n* Voids the specified in-process envelope.\nAdd {\&quot;status\&quot;:\&quot;voided\&quot;, \&quot;voidedReason\&quot;:\&quot;The reason for voiding the envelope\&quot;} to the request body to void the envelope.\n\n* Replaces the current email subject and message for a draft envelope.\nAdd {\&quot;emailSubject\&quot;:\&quot;subject\&quot;,  \&quot;emailBlurb\&quot;:\&quot;message\&quot;}  to the request body to modify the subject and message.\n\n* Place the envelope documents and envelope metadata in a purge queue so that this information is removed from the DocuSign system.\nAdd {\&quot;purgeState\&quot;:\&quot;purge type\&quot;} to the request body.\n\n*Additional information on purging documents*\n\nThe purge request can only be used for completed envelopes that are not marked as the authoritative copy. The requesting user must have permission to purge documents and must be the sender (the requesting user can act as the sender using Send On Behalf Of).\n\n### Note: If you have set the Document Retention policy on your account, envelope documents are automatically placed in the purge queue and the warning emails are sent at the end of the retention period. \n### Note: You can set the Document Retention policy in the Classic DocuSign Experience by specifying the number of days to retain documents. \n### Note: Setting a Document Retention policy is the same as setting a schedule for purging documents.\n\nWhen the purge request is initiated the envelope documents, or documents and envelope metadata, are placed in a purge queue for deletion in 14 days. A warning email notification is sent to the sender and recipients associated with the envelope, notifying them that the envelope documents will be deleted in 14 days and providing a link to the documents. A second email is sent 7 days later with the same message. At the end of the 14-day period, the envelope documents are deleted from the system.\n\nIf `purgeState=\&quot;documents_queued\&quot;` is used in the request, then only the documents are deleted and any corresponding attachments and tabs remain in the DocuSign system. If `purgeState= \&quot;documents_and_metadata_queued\&quot;` is used in the request, then the documents, attachments, and tabs are deleted.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="envelope">TBD Description</param> <param name="options">Options for modifying the behavior of the function.</param>
             <returns>4Task of ApiResponse (EnvelopeUpdateSummary)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.ListAuditEvents(System.String,System.String)">
            <summary>
            Gets the envelope audit events for an envelope.
            </summary>
            <remarks>
            Gets the envelope audit events for the specified envelope.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>1EnvelopeAuditEventResponse</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.ListAuditEventsWithHttpInfo(System.String,System.String)">
             <summary>
             Gets the envelope audit events for an envelope.
             </summary>
             <remarks>
             Gets the envelope audit events for the specified envelope.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>2ApiResponse of EnvelopeAuditEventResponse</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.ListAuditEventsAsync(System.String,System.String)">
             <summary>
             Gets the envelope audit events for an envelope.
             </summary>
             <remarks>
             Gets the envelope audit events for the specified envelope.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>3Task of EnvelopeAuditEventResponse</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.ListAuditEventsAsyncWithHttpInfo(System.String,System.String)">
             <summary>
             Gets the envelope audit events for an envelope.
             </summary>
             <remarks>
             Gets the envelope audit events for the specified envelope.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>4Task of ApiResponse (EnvelopeAuditEventResponse)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.ListCustomFields(System.String,System.String)">
            <summary>
            Gets the custom field information for the specified envelope.
            </summary>
            <remarks>
            Retrieves the custom field information for the specified envelope. You can use these fields in the envelopes for your account to record information about the envelope, help search for envelopes, and track information. The envelope custom fields are shown in the Envelope Settings section when a user is creating an envelope in the DocuSign member console. The envelope custom fields are not seen by the envelope recipients.\n\nThere are two types of envelope custom fields, text, and list. A text custom field lets the sender enter the value for the field. With a list custom field, the sender selects the value of the field from a pre-made list.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>1CustomFieldsEnvelope</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.ListCustomFieldsWithHttpInfo(System.String,System.String)">
             <summary>
             Gets the custom field information for the specified envelope.
             </summary>
             <remarks>
             Retrieves the custom field information for the specified envelope. You can use these fields in the envelopes for your account to record information about the envelope, help search for envelopes, and track information. The envelope custom fields are shown in the Envelope Settings section when a user is creating an envelope in the DocuSign member console. The envelope custom fields are not seen by the envelope recipients.\n\nThere are two types of envelope custom fields, text, and list. A text custom field lets the sender enter the value for the field. With a list custom field, the sender selects the value of the field from a pre-made list.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>2ApiResponse of CustomFieldsEnvelope</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.ListCustomFieldsAsync(System.String,System.String)">
             <summary>
             Gets the custom field information for the specified envelope.
             </summary>
             <remarks>
             Retrieves the custom field information for the specified envelope. You can use these fields in the envelopes for your account to record information about the envelope, help search for envelopes, and track information. The envelope custom fields are shown in the Envelope Settings section when a user is creating an envelope in the DocuSign member console. The envelope custom fields are not seen by the envelope recipients.\n\nThere are two types of envelope custom fields, text, and list. A text custom field lets the sender enter the value for the field. With a list custom field, the sender selects the value of the field from a pre-made list.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>3Task of CustomFieldsEnvelope</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.ListCustomFieldsAsyncWithHttpInfo(System.String,System.String)">
             <summary>
             Gets the custom field information for the specified envelope.
             </summary>
             <remarks>
             Retrieves the custom field information for the specified envelope. You can use these fields in the envelopes for your account to record information about the envelope, help search for envelopes, and track information. The envelope custom fields are shown in the Envelope Settings section when a user is creating an envelope in the DocuSign member console. The envelope custom fields are not seen by the envelope recipients.\n\nThere are two types of envelope custom fields, text, and list. A text custom field lets the sender enter the value for the field. With a list custom field, the sender selects the value of the field from a pre-made list.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>4Task of ApiResponse (CustomFieldsEnvelope)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.UpdateCustomFields(System.String,System.String,DocuSign.eSign.Model.CustomFields)">
            <summary>
            Updates envelope custom fields in an envelope.
            </summary>
            <remarks>
            Updates the envelope custom fields in draft and in-process envelopes.\n\nEach custom field used in an envelope must have a unique name.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="customFields">TBD Description</param>
             <returns>1CustomFields</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.UpdateCustomFieldsWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.CustomFields)">
             <summary>
             Updates envelope custom fields in an envelope.
             </summary>
             <remarks>
             Updates the envelope custom fields in draft and in-process envelopes.\n\nEach custom field used in an envelope must have a unique name.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="customFields">TBD Description</param>
             <returns>2ApiResponse of CustomFields</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.UpdateCustomFieldsAsync(System.String,System.String,DocuSign.eSign.Model.CustomFields)">
             <summary>
             Updates envelope custom fields in an envelope.
             </summary>
             <remarks>
             Updates the envelope custom fields in draft and in-process envelopes.\n\nEach custom field used in an envelope must have a unique name.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="customFields">TBD Description</param>
             <returns>3Task of CustomFields</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.UpdateCustomFieldsAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.CustomFields)">
             <summary>
             Updates envelope custom fields in an envelope.
             </summary>
             <remarks>
             Updates the envelope custom fields in draft and in-process envelopes.\n\nEach custom field used in an envelope must have a unique name.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="customFields">TBD Description</param>
             <returns>4Task of ApiResponse (CustomFields)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.CreateCustomFields(System.String,System.String,DocuSign.eSign.Model.CustomFields)">
            <summary>
            Updates envelope custom fields for an envelope.
            </summary>
            <remarks>
            Updates the envelope custom fields for draft and in-process envelopes.\n\nEach custom field used in an envelope must have a unique name.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="customFields">TBD Description</param>
             <returns>1CustomFields</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.CreateCustomFieldsWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.CustomFields)">
             <summary>
             Updates envelope custom fields for an envelope.
             </summary>
             <remarks>
             Updates the envelope custom fields for draft and in-process envelopes.\n\nEach custom field used in an envelope must have a unique name.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="customFields">TBD Description</param>
             <returns>2ApiResponse of CustomFields</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.CreateCustomFieldsAsync(System.String,System.String,DocuSign.eSign.Model.CustomFields)">
             <summary>
             Updates envelope custom fields for an envelope.
             </summary>
             <remarks>
             Updates the envelope custom fields for draft and in-process envelopes.\n\nEach custom field used in an envelope must have a unique name.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="customFields">TBD Description</param>
             <returns>3Task of CustomFields</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.CreateCustomFieldsAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.CustomFields)">
             <summary>
             Updates envelope custom fields for an envelope.
             </summary>
             <remarks>
             Updates the envelope custom fields for draft and in-process envelopes.\n\nEach custom field used in an envelope must have a unique name.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="customFields">TBD Description</param>
             <returns>4Task of ApiResponse (CustomFields)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.DeleteCustomFields(System.String,System.String,DocuSign.eSign.Model.CustomFields)">
            <summary>
            Deletes envelope custom fields for draft and in-process envelopes.
            </summary>
            <remarks>
            Deletes envelope custom fields for draft and in-process envelopes.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="customFields">TBD Description</param>
             <returns>1CustomFields</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.DeleteCustomFieldsWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.CustomFields)">
             <summary>
             Deletes envelope custom fields for draft and in-process envelopes.
             </summary>
             <remarks>
             Deletes envelope custom fields for draft and in-process envelopes.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="customFields">TBD Description</param>
             <returns>2ApiResponse of CustomFields</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.DeleteCustomFieldsAsync(System.String,System.String,DocuSign.eSign.Model.CustomFields)">
             <summary>
             Deletes envelope custom fields for draft and in-process envelopes.
             </summary>
             <remarks>
             Deletes envelope custom fields for draft and in-process envelopes.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="customFields">TBD Description</param>
             <returns>3Task of CustomFields</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.DeleteCustomFieldsAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.CustomFields)">
             <summary>
             Deletes envelope custom fields for draft and in-process envelopes.
             </summary>
             <remarks>
             Deletes envelope custom fields for draft and in-process envelopes.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="customFields">TBD Description</param>
             <returns>4Task of ApiResponse (CustomFields)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.ListDocuments(System.String,System.String)">
            <summary>
            Gets a list of envelope documents.
            </summary>
            <remarks>
            Retrieves a list of documents associated with the specified envelope.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>1EnvelopeDocumentsResult</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.ListDocumentsWithHttpInfo(System.String,System.String)">
             <summary>
             Gets a list of envelope documents.
             </summary>
             <remarks>
             Retrieves a list of documents associated with the specified envelope.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>2ApiResponse of EnvelopeDocumentsResult</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.ListDocumentsAsync(System.String,System.String)">
             <summary>
             Gets a list of envelope documents.
             </summary>
             <remarks>
             Retrieves a list of documents associated with the specified envelope.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>3Task of EnvelopeDocumentsResult</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.ListDocumentsAsyncWithHttpInfo(System.String,System.String)">
             <summary>
             Gets a list of envelope documents.
             </summary>
             <remarks>
             Retrieves a list of documents associated with the specified envelope.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>4Task of ApiResponse (EnvelopeDocumentsResult)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.UpdateDocuments(System.String,System.String,DocuSign.eSign.Model.EnvelopeDefinition)">
            <summary>
            Adds one or more documents to an existing envelope document.
            </summary>
            <remarks>
            Adds one or more documents to an existing envelope document.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="envelopeDefinition">TBD Description</param>
             <returns>1EnvelopeDocumentsResult</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.UpdateDocumentsWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.EnvelopeDefinition)">
             <summary>
             Adds one or more documents to an existing envelope document.
             </summary>
             <remarks>
             Adds one or more documents to an existing envelope document.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="envelopeDefinition">TBD Description</param>
             <returns>2ApiResponse of EnvelopeDocumentsResult</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.UpdateDocumentsAsync(System.String,System.String,DocuSign.eSign.Model.EnvelopeDefinition)">
             <summary>
             Adds one or more documents to an existing envelope document.
             </summary>
             <remarks>
             Adds one or more documents to an existing envelope document.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="envelopeDefinition">TBD Description</param>
             <returns>3Task of EnvelopeDocumentsResult</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.UpdateDocumentsAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.EnvelopeDefinition)">
             <summary>
             Adds one or more documents to an existing envelope document.
             </summary>
             <remarks>
             Adds one or more documents to an existing envelope document.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="envelopeDefinition">TBD Description</param>
             <returns>4Task of ApiResponse (EnvelopeDocumentsResult)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.DeleteDocuments(System.String,System.String,DocuSign.eSign.Model.EnvelopeDefinition)">
            <summary>
            Deletes documents from a draft envelope.
            </summary>
            <remarks>
            Deletes one or more documents from an existing draft envelope.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="envelopeDefinition">TBD Description</param>
             <returns>1EnvelopeDocumentsResult</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.DeleteDocumentsWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.EnvelopeDefinition)">
             <summary>
             Deletes documents from a draft envelope.
             </summary>
             <remarks>
             Deletes one or more documents from an existing draft envelope.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="envelopeDefinition">TBD Description</param>
             <returns>2ApiResponse of EnvelopeDocumentsResult</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.DeleteDocumentsAsync(System.String,System.String,DocuSign.eSign.Model.EnvelopeDefinition)">
             <summary>
             Deletes documents from a draft envelope.
             </summary>
             <remarks>
             Deletes one or more documents from an existing draft envelope.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="envelopeDefinition">TBD Description</param>
             <returns>3Task of EnvelopeDocumentsResult</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.DeleteDocumentsAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.EnvelopeDefinition)">
             <summary>
             Deletes documents from a draft envelope.
             </summary>
             <remarks>
             Deletes one or more documents from an existing draft envelope.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="envelopeDefinition">TBD Description</param>
             <returns>4Task of ApiResponse (EnvelopeDocumentsResult)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.GetDocument(System.String,System.String,System.String)">
            <summary>
            Gets a document from an envelope.
            </summary>
            <remarks>
            Retrieves the specified document from the envelope. If the account has the Highlight Data Changes feature enabled, there is an option to request that any changes in the envelope be highlighted.\n\nYou can also use this method to retrieve a PDF containing the combined content of all documents and the certificate. If the account has the Highlight Data Changes feature enabled, there is an option to request that any changes in the envelope be highlighted. \n\nTo retrieve the combined content replace the `{documentId}` parameter in the endpoint with `combined`.\n/accounts/{accountId}/envelopes/{envelopeId}/documents/combined
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param>
             <returns>1Stream</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.GetDocumentWithHttpInfo(System.String,System.String,System.String)">
             <summary>
             Gets a document from an envelope.
             </summary>
             <remarks>
             Retrieves the specified document from the envelope. If the account has the Highlight Data Changes feature enabled, there is an option to request that any changes in the envelope be highlighted.\n\nYou can also use this method to retrieve a PDF containing the combined content of all documents and the certificate. If the account has the Highlight Data Changes feature enabled, there is an option to request that any changes in the envelope be highlighted. \n\nTo retrieve the combined content replace the `{documentId}` parameter in the endpoint with `combined`.\n/accounts/{accountId}/envelopes/{envelopeId}/documents/combined
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param>
             <returns>2ApiResponse of Stream</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.GetDocumentAsync(System.String,System.String,System.String)">
             <summary>
             Gets a document from an envelope.
             </summary>
             <remarks>
             Retrieves the specified document from the envelope. If the account has the Highlight Data Changes feature enabled, there is an option to request that any changes in the envelope be highlighted.\n\nYou can also use this method to retrieve a PDF containing the combined content of all documents and the certificate. If the account has the Highlight Data Changes feature enabled, there is an option to request that any changes in the envelope be highlighted. \n\nTo retrieve the combined content replace the `{documentId}` parameter in the endpoint with `combined`.\n/accounts/{accountId}/envelopes/{envelopeId}/documents/combined
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param>
             <returns>3Task of Stream</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.GetDocumentAsyncWithHttpInfo(System.String,System.String,System.String)">
             <summary>
             Gets a document from an envelope.
             </summary>
             <remarks>
             Retrieves the specified document from the envelope. If the account has the Highlight Data Changes feature enabled, there is an option to request that any changes in the envelope be highlighted.\n\nYou can also use this method to retrieve a PDF containing the combined content of all documents and the certificate. If the account has the Highlight Data Changes feature enabled, there is an option to request that any changes in the envelope be highlighted. \n\nTo retrieve the combined content replace the `{documentId}` parameter in the endpoint with `combined`.\n/accounts/{accountId}/envelopes/{envelopeId}/documents/combined
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param>
             <returns>4Task of ApiResponse (Stream)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.ListDocumentFields(System.String,System.String,System.String)">
            <summary>
            Gets the custom document fields from an  existing envelope document.
            </summary>
            <remarks>
            Retrieves the custom document field information from an existing envelope document.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param>
             <returns>1DocumentFieldsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.ListDocumentFieldsWithHttpInfo(System.String,System.String,System.String)">
             <summary>
             Gets the custom document fields from an  existing envelope document.
             </summary>
             <remarks>
             Retrieves the custom document field information from an existing envelope document.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param>
             <returns>2ApiResponse of DocumentFieldsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.ListDocumentFieldsAsync(System.String,System.String,System.String)">
             <summary>
             Gets the custom document fields from an  existing envelope document.
             </summary>
             <remarks>
             Retrieves the custom document field information from an existing envelope document.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param>
             <returns>3Task of DocumentFieldsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.ListDocumentFieldsAsyncWithHttpInfo(System.String,System.String,System.String)">
             <summary>
             Gets the custom document fields from an  existing envelope document.
             </summary>
             <remarks>
             Retrieves the custom document field information from an existing envelope document.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param>
             <returns>4Task of ApiResponse (DocumentFieldsInformation)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.UpdateDocumentFields(System.String,System.String,System.String,DocuSign.eSign.Model.DocumentFieldsInformation)">
            <summary>
            Updates existing custom document fields in an existing envelope document.
            </summary>
            <remarks>
            Updates existing custom document fields in an existing envelope document.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param> <param name="documentFieldsInformation">TBD Description</param>
             <returns>1DocumentFieldsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.UpdateDocumentFieldsWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.DocumentFieldsInformation)">
             <summary>
             Updates existing custom document fields in an existing envelope document.
             </summary>
             <remarks>
             Updates existing custom document fields in an existing envelope document.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param> <param name="documentFieldsInformation">TBD Description</param>
             <returns>2ApiResponse of DocumentFieldsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.UpdateDocumentFieldsAsync(System.String,System.String,System.String,DocuSign.eSign.Model.DocumentFieldsInformation)">
             <summary>
             Updates existing custom document fields in an existing envelope document.
             </summary>
             <remarks>
             Updates existing custom document fields in an existing envelope document.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param> <param name="documentFieldsInformation">TBD Description</param>
             <returns>3Task of DocumentFieldsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.UpdateDocumentFieldsAsyncWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.DocumentFieldsInformation)">
             <summary>
             Updates existing custom document fields in an existing envelope document.
             </summary>
             <remarks>
             Updates existing custom document fields in an existing envelope document.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param> <param name="documentFieldsInformation">TBD Description</param>
             <returns>4Task of ApiResponse (DocumentFieldsInformation)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.CreateDocumentFields(System.String,System.String,System.String,DocuSign.eSign.Model.DocumentFieldsInformation)">
            <summary>
            Creates custom document fields in an existing envelope document.
            </summary>
            <remarks>
            Creates custom document fields in an existing envelope document.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param> <param name="documentFieldsInformation">TBD Description</param>
             <returns>1DocumentFieldsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.CreateDocumentFieldsWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.DocumentFieldsInformation)">
             <summary>
             Creates custom document fields in an existing envelope document.
             </summary>
             <remarks>
             Creates custom document fields in an existing envelope document.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param> <param name="documentFieldsInformation">TBD Description</param>
             <returns>2ApiResponse of DocumentFieldsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.CreateDocumentFieldsAsync(System.String,System.String,System.String,DocuSign.eSign.Model.DocumentFieldsInformation)">
             <summary>
             Creates custom document fields in an existing envelope document.
             </summary>
             <remarks>
             Creates custom document fields in an existing envelope document.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param> <param name="documentFieldsInformation">TBD Description</param>
             <returns>3Task of DocumentFieldsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.CreateDocumentFieldsAsyncWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.DocumentFieldsInformation)">
             <summary>
             Creates custom document fields in an existing envelope document.
             </summary>
             <remarks>
             Creates custom document fields in an existing envelope document.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param> <param name="documentFieldsInformation">TBD Description</param>
             <returns>4Task of ApiResponse (DocumentFieldsInformation)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.DeleteDocumentFields(System.String,System.String,System.String,DocuSign.eSign.Model.DocumentFieldsInformation)">
            <summary>
            Deletes custom document fields from an existing envelope document.
            </summary>
            <remarks>
            Deletes custom document fields from an existing envelope document.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param> <param name="documentFieldsInformation">TBD Description</param>
             <returns>1DocumentFieldsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.DeleteDocumentFieldsWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.DocumentFieldsInformation)">
             <summary>
             Deletes custom document fields from an existing envelope document.
             </summary>
             <remarks>
             Deletes custom document fields from an existing envelope document.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param> <param name="documentFieldsInformation">TBD Description</param>
             <returns>2ApiResponse of DocumentFieldsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.DeleteDocumentFieldsAsync(System.String,System.String,System.String,DocuSign.eSign.Model.DocumentFieldsInformation)">
             <summary>
             Deletes custom document fields from an existing envelope document.
             </summary>
             <remarks>
             Deletes custom document fields from an existing envelope document.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param> <param name="documentFieldsInformation">TBD Description</param>
             <returns>3Task of DocumentFieldsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.DeleteDocumentFieldsAsyncWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.DocumentFieldsInformation)">
             <summary>
             Deletes custom document fields from an existing envelope document.
             </summary>
             <remarks>
             Deletes custom document fields from an existing envelope document.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param> <param name="documentFieldsInformation">TBD Description</param>
             <returns>4Task of ApiResponse (DocumentFieldsInformation)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.DeleteDocumentPage(System.String,System.String,System.String,System.String)">
            <summary>
            Deletes a page from a document in an envelope.
            </summary>
            <remarks>
            Deletes a page from a document in an envelope based on the page number.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param><param name="pageNumber">The page number being accessed.</param>
             <returns>1</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.DeleteDocumentPageWithHttpInfo(System.String,System.String,System.String,System.String)">
             <summary>
             Deletes a page from a document in an envelope.
             </summary>
             <remarks>
             Deletes a page from a document in an envelope based on the page number.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param><param name="pageNumber">The page number being accessed.</param>
             <returns>2ApiResponse of Object(void)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.DeleteDocumentPageAsync(System.String,System.String,System.String,System.String)">
             <summary>
             Deletes a page from a document in an envelope.
             </summary>
             <remarks>
             Deletes a page from a document in an envelope based on the page number.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param><param name="pageNumber">The page number being accessed.</param>
             <returns>3Task of void</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.DeleteDocumentPageAsyncWithHttpInfo(System.String,System.String,System.String,System.String)">
             <summary>
             Deletes a page from a document in an envelope.
             </summary>
             <remarks>
             Deletes a page from a document in an envelope based on the page number.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param><param name="pageNumber">The page number being accessed.</param>
             <returns>4Task of ApiResponse</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.ListTemplatesForDocument(System.String,System.String,System.String)">
            <summary>
            Gets the templates associated with a document in an existing envelope.
            </summary>
            <remarks>
            Retrieves the templates associated with a document in the specified envelope.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param>
             <returns>1TemplateInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.ListTemplatesForDocumentWithHttpInfo(System.String,System.String,System.String)">
             <summary>
             Gets the templates associated with a document in an existing envelope.
             </summary>
             <remarks>
             Retrieves the templates associated with a document in the specified envelope.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param>
             <returns>2ApiResponse of TemplateInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.ListTemplatesForDocumentAsync(System.String,System.String,System.String)">
             <summary>
             Gets the templates associated with a document in an existing envelope.
             </summary>
             <remarks>
             Retrieves the templates associated with a document in the specified envelope.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param>
             <returns>3Task of TemplateInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.ListTemplatesForDocumentAsyncWithHttpInfo(System.String,System.String,System.String)">
             <summary>
             Gets the templates associated with a document in an existing envelope.
             </summary>
             <remarks>
             Retrieves the templates associated with a document in the specified envelope.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param>
             <returns>4Task of ApiResponse (TemplateInformation)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.ApplyTemplateToDocument(System.String,System.String,System.String,DocuSign.eSign.Model.DocumentTemplateList)">
            <summary>
            Adds templates to a document in an  envelope.
            </summary>
            <remarks>
            Adds templates to a document in the specified envelope.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param> <param name="documentTemplateList">TBD Description</param>
             <returns>1DocumentTemplateList</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.ApplyTemplateToDocumentWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.DocumentTemplateList)">
             <summary>
             Adds templates to a document in an  envelope.
             </summary>
             <remarks>
             Adds templates to a document in the specified envelope.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param> <param name="documentTemplateList">TBD Description</param>
             <returns>2ApiResponse of DocumentTemplateList</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.ApplyTemplateToDocumentAsync(System.String,System.String,System.String,DocuSign.eSign.Model.DocumentTemplateList)">
             <summary>
             Adds templates to a document in an  envelope.
             </summary>
             <remarks>
             Adds templates to a document in the specified envelope.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param> <param name="documentTemplateList">TBD Description</param>
             <returns>3Task of DocumentTemplateList</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.ApplyTemplateToDocumentAsyncWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.DocumentTemplateList)">
             <summary>
             Adds templates to a document in an  envelope.
             </summary>
             <remarks>
             Adds templates to a document in the specified envelope.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param> <param name="documentTemplateList">TBD Description</param>
             <returns>4Task of ApiResponse (DocumentTemplateList)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.DeleteTemplatesFromDocument(System.String,System.String,System.String,System.String)">
            <summary>
            Deletes a template from a document in an existing envelope.
            </summary>
            <remarks>
            Deletes the specified template from a document in an existing envelope.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param><param name="templateId">The ID of the template being accessed.</param>
             <returns>1</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.DeleteTemplatesFromDocumentWithHttpInfo(System.String,System.String,System.String,System.String)">
             <summary>
             Deletes a template from a document in an existing envelope.
             </summary>
             <remarks>
             Deletes the specified template from a document in an existing envelope.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param><param name="templateId">The ID of the template being accessed.</param>
             <returns>2ApiResponse of Object(void)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.DeleteTemplatesFromDocumentAsync(System.String,System.String,System.String,System.String)">
             <summary>
             Deletes a template from a document in an existing envelope.
             </summary>
             <remarks>
             Deletes the specified template from a document in an existing envelope.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param><param name="templateId">The ID of the template being accessed.</param>
             <returns>3Task of void</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.DeleteTemplatesFromDocumentAsyncWithHttpInfo(System.String,System.String,System.String,System.String)">
             <summary>
             Deletes a template from a document in an existing envelope.
             </summary>
             <remarks>
             Deletes the specified template from a document in an existing envelope.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param><param name="templateId">The ID of the template being accessed.</param>
             <returns>4Task of ApiResponse</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.GetEmailSettings(System.String,System.String)">
            <summary>
            Gets the email setting overrides for an envelope.
            </summary>
            <remarks>
            Retrieves the email override settings for the specified envelope.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>1EmailSettings</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.GetEmailSettingsWithHttpInfo(System.String,System.String)">
             <summary>
             Gets the email setting overrides for an envelope.
             </summary>
             <remarks>
             Retrieves the email override settings for the specified envelope.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>2ApiResponse of EmailSettings</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.GetEmailSettingsAsync(System.String,System.String)">
             <summary>
             Gets the email setting overrides for an envelope.
             </summary>
             <remarks>
             Retrieves the email override settings for the specified envelope.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>3Task of EmailSettings</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.GetEmailSettingsAsyncWithHttpInfo(System.String,System.String)">
             <summary>
             Gets the email setting overrides for an envelope.
             </summary>
             <remarks>
             Retrieves the email override settings for the specified envelope.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>4Task of ApiResponse (EmailSettings)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.UpdateEmailSettings(System.String,System.String,DocuSign.eSign.Model.EmailSettings)">
            <summary>
            Updates the email setting overrides for an envelope.
            </summary>
            <remarks>
            Updates the existing email override settings for the specified envelope. Note that modifying email settings will only affect email communications that occur after the modification was made.\n\nThis can also be used to delete an individual email override setting by using an empty string for the value to be deleted.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="emailSettings">TBD Description</param>
             <returns>1EmailSettings</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.UpdateEmailSettingsWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.EmailSettings)">
             <summary>
             Updates the email setting overrides for an envelope.
             </summary>
             <remarks>
             Updates the existing email override settings for the specified envelope. Note that modifying email settings will only affect email communications that occur after the modification was made.\n\nThis can also be used to delete an individual email override setting by using an empty string for the value to be deleted.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="emailSettings">TBD Description</param>
             <returns>2ApiResponse of EmailSettings</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.UpdateEmailSettingsAsync(System.String,System.String,DocuSign.eSign.Model.EmailSettings)">
             <summary>
             Updates the email setting overrides for an envelope.
             </summary>
             <remarks>
             Updates the existing email override settings for the specified envelope. Note that modifying email settings will only affect email communications that occur after the modification was made.\n\nThis can also be used to delete an individual email override setting by using an empty string for the value to be deleted.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="emailSettings">TBD Description</param>
             <returns>3Task of EmailSettings</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.UpdateEmailSettingsAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.EmailSettings)">
             <summary>
             Updates the email setting overrides for an envelope.
             </summary>
             <remarks>
             Updates the existing email override settings for the specified envelope. Note that modifying email settings will only affect email communications that occur after the modification was made.\n\nThis can also be used to delete an individual email override setting by using an empty string for the value to be deleted.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="emailSettings">TBD Description</param>
             <returns>4Task of ApiResponse (EmailSettings)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.CreateEmailSettings(System.String,System.String,DocuSign.eSign.Model.EmailSettings)">
            <summary>
            Adds email setting overrides to an envelope.
            </summary>
            <remarks>
            Adds email override settings, changing the email address to reply to an email address, name, or the BCC for email archive information, for the envelope. Note that adding email settings will only affect email communications that occur after the addition was made.\n\n### Important: The BCC Email address feature is designed to provide a copy of all email communications for external archiving purposes. DocuSign recommends that envelopes sent using the BCC for Email Archive feature, including the BCC Email Override option, include additional signer authentication options. To send a copy of the envelope to a recipient who does not need to sign, use a Carbon Copies or Certified Deliveries Recipient Type.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="emailSettings">TBD Description</param>
             <returns>1EmailSettings</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.CreateEmailSettingsWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.EmailSettings)">
             <summary>
             Adds email setting overrides to an envelope.
             </summary>
             <remarks>
             Adds email override settings, changing the email address to reply to an email address, name, or the BCC for email archive information, for the envelope. Note that adding email settings will only affect email communications that occur after the addition was made.\n\n### Important: The BCC Email address feature is designed to provide a copy of all email communications for external archiving purposes. DocuSign recommends that envelopes sent using the BCC for Email Archive feature, including the BCC Email Override option, include additional signer authentication options. To send a copy of the envelope to a recipient who does not need to sign, use a Carbon Copies or Certified Deliveries Recipient Type.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="emailSettings">TBD Description</param>
             <returns>2ApiResponse of EmailSettings</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.CreateEmailSettingsAsync(System.String,System.String,DocuSign.eSign.Model.EmailSettings)">
             <summary>
             Adds email setting overrides to an envelope.
             </summary>
             <remarks>
             Adds email override settings, changing the email address to reply to an email address, name, or the BCC for email archive information, for the envelope. Note that adding email settings will only affect email communications that occur after the addition was made.\n\n### Important: The BCC Email address feature is designed to provide a copy of all email communications for external archiving purposes. DocuSign recommends that envelopes sent using the BCC for Email Archive feature, including the BCC Email Override option, include additional signer authentication options. To send a copy of the envelope to a recipient who does not need to sign, use a Carbon Copies or Certified Deliveries Recipient Type.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="emailSettings">TBD Description</param>
             <returns>3Task of EmailSettings</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.CreateEmailSettingsAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.EmailSettings)">
             <summary>
             Adds email setting overrides to an envelope.
             </summary>
             <remarks>
             Adds email override settings, changing the email address to reply to an email address, name, or the BCC for email archive information, for the envelope. Note that adding email settings will only affect email communications that occur after the addition was made.\n\n### Important: The BCC Email address feature is designed to provide a copy of all email communications for external archiving purposes. DocuSign recommends that envelopes sent using the BCC for Email Archive feature, including the BCC Email Override option, include additional signer authentication options. To send a copy of the envelope to a recipient who does not need to sign, use a Carbon Copies or Certified Deliveries Recipient Type.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="emailSettings">TBD Description</param>
             <returns>4Task of ApiResponse (EmailSettings)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.DeleteEmailSettings(System.String,System.String)">
            <summary>
            Deletes the email setting overrides for an envelope.
            </summary>
            <remarks>
            Deletes all existing email override settings for the envelope. If you want to delete an individual email override setting, use the PUT and set the value to an empty string. Note that deleting email settings will only affect email communications that occur after the deletion and the normal account email settings are used for future email communications.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>1EmailSettings</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.DeleteEmailSettingsWithHttpInfo(System.String,System.String)">
             <summary>
             Deletes the email setting overrides for an envelope.
             </summary>
             <remarks>
             Deletes all existing email override settings for the envelope. If you want to delete an individual email override setting, use the PUT and set the value to an empty string. Note that deleting email settings will only affect email communications that occur after the deletion and the normal account email settings are used for future email communications.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>2ApiResponse of EmailSettings</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.DeleteEmailSettingsAsync(System.String,System.String)">
             <summary>
             Deletes the email setting overrides for an envelope.
             </summary>
             <remarks>
             Deletes all existing email override settings for the envelope. If you want to delete an individual email override setting, use the PUT and set the value to an empty string. Note that deleting email settings will only affect email communications that occur after the deletion and the normal account email settings are used for future email communications.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>3Task of EmailSettings</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.DeleteEmailSettingsAsyncWithHttpInfo(System.String,System.String)">
             <summary>
             Deletes the email setting overrides for an envelope.
             </summary>
             <remarks>
             Deletes all existing email override settings for the envelope. If you want to delete an individual email override setting, use the PUT and set the value to an empty string. Note that deleting email settings will only affect email communications that occur after the deletion and the normal account email settings are used for future email communications.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>4Task of ApiResponse (EmailSettings)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.GetLock(System.String,System.String)">
            <summary>
            Gets envelope lock information.
            </summary>
            <remarks>
            Retrieves general information about the envelope lock.\n\nIf the call is made by the locked by user and the request has the same integrator key as original, then the `X-DocuSign-Edit` header and additional lock information is included in the response. This allows users to recover a lost editing session token and the `X-DocuSign-Edit` header.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>1LockInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.GetLockWithHttpInfo(System.String,System.String)">
             <summary>
             Gets envelope lock information.
             </summary>
             <remarks>
             Retrieves general information about the envelope lock.\n\nIf the call is made by the locked by user and the request has the same integrator key as original, then the `X-DocuSign-Edit` header and additional lock information is included in the response. This allows users to recover a lost editing session token and the `X-DocuSign-Edit` header.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>2ApiResponse of LockInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.GetLockAsync(System.String,System.String)">
             <summary>
             Gets envelope lock information.
             </summary>
             <remarks>
             Retrieves general information about the envelope lock.\n\nIf the call is made by the locked by user and the request has the same integrator key as original, then the `X-DocuSign-Edit` header and additional lock information is included in the response. This allows users to recover a lost editing session token and the `X-DocuSign-Edit` header.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>3Task of LockInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.GetLockAsyncWithHttpInfo(System.String,System.String)">
             <summary>
             Gets envelope lock information.
             </summary>
             <remarks>
             Retrieves general information about the envelope lock.\n\nIf the call is made by the locked by user and the request has the same integrator key as original, then the `X-DocuSign-Edit` header and additional lock information is included in the response. This allows users to recover a lost editing session token and the `X-DocuSign-Edit` header.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>4Task of ApiResponse (LockInformation)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.UpdateLock(System.String,System.String,DocuSign.eSign.Model.LockRequest)">
            <summary>
            Updates an envelope lock.
            </summary>
            <remarks>
            Updates the lock duration time or update the `lockedByApp` property information for the specified envelope. The user and integrator key must match the user specified by the `lockByUser` property and integrator key information and the `X-DocuSign-Edit` header must be included or an error will be generated.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="lockRequest">TBD Description</param>
             <returns>1LockInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.UpdateLockWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.LockRequest)">
             <summary>
             Updates an envelope lock.
             </summary>
             <remarks>
             Updates the lock duration time or update the `lockedByApp` property information for the specified envelope. The user and integrator key must match the user specified by the `lockByUser` property and integrator key information and the `X-DocuSign-Edit` header must be included or an error will be generated.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="lockRequest">TBD Description</param>
             <returns>2ApiResponse of LockInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.UpdateLockAsync(System.String,System.String,DocuSign.eSign.Model.LockRequest)">
             <summary>
             Updates an envelope lock.
             </summary>
             <remarks>
             Updates the lock duration time or update the `lockedByApp` property information for the specified envelope. The user and integrator key must match the user specified by the `lockByUser` property and integrator key information and the `X-DocuSign-Edit` header must be included or an error will be generated.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="lockRequest">TBD Description</param>
             <returns>3Task of LockInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.UpdateLockAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.LockRequest)">
             <summary>
             Updates an envelope lock.
             </summary>
             <remarks>
             Updates the lock duration time or update the `lockedByApp` property information for the specified envelope. The user and integrator key must match the user specified by the `lockByUser` property and integrator key information and the `X-DocuSign-Edit` header must be included or an error will be generated.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="lockRequest">TBD Description</param>
             <returns>4Task of ApiResponse (LockInformation)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.CreateLock(System.String,System.String,DocuSign.eSign.Model.LockRequest)">
            <summary>
            Lock an envelope.
            </summary>
            <remarks>
            Locks the specified envelope, and sets the time until the lock expires, to prevent other users or recipients from accessing and changing the envelope.\n\nNote: Users must have envelope locking capability enabled to use this function (userSetting `canLockEnvelopes` must be  set to true for the user).
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="lockRequest">TBD Description</param>
             <returns>1LockInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.CreateLockWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.LockRequest)">
             <summary>
             Lock an envelope.
             </summary>
             <remarks>
             Locks the specified envelope, and sets the time until the lock expires, to prevent other users or recipients from accessing and changing the envelope.\n\nNote: Users must have envelope locking capability enabled to use this function (userSetting `canLockEnvelopes` must be  set to true for the user).
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="lockRequest">TBD Description</param>
             <returns>2ApiResponse of LockInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.CreateLockAsync(System.String,System.String,DocuSign.eSign.Model.LockRequest)">
             <summary>
             Lock an envelope.
             </summary>
             <remarks>
             Locks the specified envelope, and sets the time until the lock expires, to prevent other users or recipients from accessing and changing the envelope.\n\nNote: Users must have envelope locking capability enabled to use this function (userSetting `canLockEnvelopes` must be  set to true for the user).
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="lockRequest">TBD Description</param>
             <returns>3Task of LockInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.CreateLockAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.LockRequest)">
             <summary>
             Lock an envelope.
             </summary>
             <remarks>
             Locks the specified envelope, and sets the time until the lock expires, to prevent other users or recipients from accessing and changing the envelope.\n\nNote: Users must have envelope locking capability enabled to use this function (userSetting `canLockEnvelopes` must be  set to true for the user).
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="lockRequest">TBD Description</param>
             <returns>4Task of ApiResponse (LockInformation)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.DeleteLock(System.String,System.String)">
            <summary>
            Deletes an envelope lock.
            </summary>
            <remarks>
            Deletes the lock from the specified envelope. The `X-DocuSign-Edit` header must be included in the request.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>1LockInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.DeleteLockWithHttpInfo(System.String,System.String)">
             <summary>
             Deletes an envelope lock.
             </summary>
             <remarks>
             Deletes the lock from the specified envelope. The `X-DocuSign-Edit` header must be included in the request.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>2ApiResponse of LockInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.DeleteLockAsync(System.String,System.String)">
             <summary>
             Deletes an envelope lock.
             </summary>
             <remarks>
             Deletes the lock from the specified envelope. The `X-DocuSign-Edit` header must be included in the request.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>3Task of LockInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.DeleteLockAsyncWithHttpInfo(System.String,System.String)">
             <summary>
             Deletes an envelope lock.
             </summary>
             <remarks>
             Deletes the lock from the specified envelope. The `X-DocuSign-Edit` header must be included in the request.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>4Task of ApiResponse (LockInformation)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.GetNotificationSettings(System.String,System.String)">
            <summary>
            Gets envelope notification information.
            </summary>
            <remarks>
            Retrieves the envelope notification, reminders and expirations, information for an existing envelope.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>1Notification</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.GetNotificationSettingsWithHttpInfo(System.String,System.String)">
             <summary>
             Gets envelope notification information.
             </summary>
             <remarks>
             Retrieves the envelope notification, reminders and expirations, information for an existing envelope.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>2ApiResponse of Notification</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.GetNotificationSettingsAsync(System.String,System.String)">
             <summary>
             Gets envelope notification information.
             </summary>
             <remarks>
             Retrieves the envelope notification, reminders and expirations, information for an existing envelope.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>3Task of Notification</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.GetNotificationSettingsAsyncWithHttpInfo(System.String,System.String)">
             <summary>
             Gets envelope notification information.
             </summary>
             <remarks>
             Retrieves the envelope notification, reminders and expirations, information for an existing envelope.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>4Task of ApiResponse (Notification)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.ListRecipients(System.String,System.String)">
            <summary>
            Gets the status of recipients for an envelope.
            </summary>
            <remarks>
            Retrieves the status of all recipients in a single envelope and identifies the current recipient in the routing list. \n\nThe `currentRoutingOrder` property of the response contains the `routingOrder` value of the current recipient indicating that the envelope has been sent to the recipient, but the recipient has not completed their actions.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>1Recipients</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.ListRecipientsWithHttpInfo(System.String,System.String)">
             <summary>
             Gets the status of recipients for an envelope.
             </summary>
             <remarks>
             Retrieves the status of all recipients in a single envelope and identifies the current recipient in the routing list. \n\nThe `currentRoutingOrder` property of the response contains the `routingOrder` value of the current recipient indicating that the envelope has been sent to the recipient, but the recipient has not completed their actions.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>2ApiResponse of Recipients</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.ListRecipientsAsync(System.String,System.String)">
             <summary>
             Gets the status of recipients for an envelope.
             </summary>
             <remarks>
             Retrieves the status of all recipients in a single envelope and identifies the current recipient in the routing list. \n\nThe `currentRoutingOrder` property of the response contains the `routingOrder` value of the current recipient indicating that the envelope has been sent to the recipient, but the recipient has not completed their actions.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>3Task of Recipients</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.ListRecipientsAsyncWithHttpInfo(System.String,System.String)">
             <summary>
             Gets the status of recipients for an envelope.
             </summary>
             <remarks>
             Retrieves the status of all recipients in a single envelope and identifies the current recipient in the routing list. \n\nThe `currentRoutingOrder` property of the response contains the `routingOrder` value of the current recipient indicating that the envelope has been sent to the recipient, but the recipient has not completed their actions.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>4Task of ApiResponse (Recipients)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.UpdateRecipients(System.String,System.String,DocuSign.eSign.Model.Recipients)">
            <summary>
            Updates recipients in a draft envelope or corrects recipient information for an in process envelope.
            </summary>
            <remarks>
            Updates recipients in a draft envelope or corrects recipient information for an in process envelope. \n\nFor draft envelopes, you can edit the following properties: `email`, `userName`, `routingOrder`, `faxNumber`, `deliveryMethod`, `accessCode`, and `requireIdLookup`.\n\nOnce an envelope has been sent, you can only edit: `email`, `userName`, `signerName`, `routingOrder`, `faxNumber`, and `deliveryMethod`. You can also select to resend an envelope by using the `resend_envelope` option.\n\nIf you send information for a recipient that does not already exist in a draft envelope, the recipient is added to the envelope (similar to the POST).
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="recipients">TBD Description</param>
             <returns>1RecipientsUpdateSummary</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.UpdateRecipientsWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.Recipients)">
             <summary>
             Updates recipients in a draft envelope or corrects recipient information for an in process envelope.
             </summary>
             <remarks>
             Updates recipients in a draft envelope or corrects recipient information for an in process envelope. \n\nFor draft envelopes, you can edit the following properties: `email`, `userName`, `routingOrder`, `faxNumber`, `deliveryMethod`, `accessCode`, and `requireIdLookup`.\n\nOnce an envelope has been sent, you can only edit: `email`, `userName`, `signerName`, `routingOrder`, `faxNumber`, and `deliveryMethod`. You can also select to resend an envelope by using the `resend_envelope` option.\n\nIf you send information for a recipient that does not already exist in a draft envelope, the recipient is added to the envelope (similar to the POST).
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="recipients">TBD Description</param>
             <returns>2ApiResponse of RecipientsUpdateSummary</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.UpdateRecipientsAsync(System.String,System.String,DocuSign.eSign.Model.Recipients)">
             <summary>
             Updates recipients in a draft envelope or corrects recipient information for an in process envelope.
             </summary>
             <remarks>
             Updates recipients in a draft envelope or corrects recipient information for an in process envelope. \n\nFor draft envelopes, you can edit the following properties: `email`, `userName`, `routingOrder`, `faxNumber`, `deliveryMethod`, `accessCode`, and `requireIdLookup`.\n\nOnce an envelope has been sent, you can only edit: `email`, `userName`, `signerName`, `routingOrder`, `faxNumber`, and `deliveryMethod`. You can also select to resend an envelope by using the `resend_envelope` option.\n\nIf you send information for a recipient that does not already exist in a draft envelope, the recipient is added to the envelope (similar to the POST).
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="recipients">TBD Description</param>
             <returns>3Task of RecipientsUpdateSummary</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.UpdateRecipientsAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.Recipients)">
             <summary>
             Updates recipients in a draft envelope or corrects recipient information for an in process envelope.
             </summary>
             <remarks>
             Updates recipients in a draft envelope or corrects recipient information for an in process envelope. \n\nFor draft envelopes, you can edit the following properties: `email`, `userName`, `routingOrder`, `faxNumber`, `deliveryMethod`, `accessCode`, and `requireIdLookup`.\n\nOnce an envelope has been sent, you can only edit: `email`, `userName`, `signerName`, `routingOrder`, `faxNumber`, and `deliveryMethod`. You can also select to resend an envelope by using the `resend_envelope` option.\n\nIf you send information for a recipient that does not already exist in a draft envelope, the recipient is added to the envelope (similar to the POST).
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="recipients">TBD Description</param>
             <returns>4Task of ApiResponse (RecipientsUpdateSummary)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.CreateRecipient(System.String,System.String,DocuSign.eSign.Model.Recipients)">
            <summary>
            Adds one or more recipients to an envelope.
            </summary>
            <remarks>
            Adds one or more recipients to an envelope.\n\nFor an in process envelope, one that has been sent and has not been completed or voided, an email is sent to a new recipient when they are reached in the routing order. If the new recipient&#39;s routing order is before or the same as the envelope&#39;s next recipient, an email is only sent if the optional `resend_envelope` query string is set to **true**.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="recipients">TBD Description</param>
             <returns>1Recipients</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.CreateRecipientWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.Recipients)">
             <summary>
             Adds one or more recipients to an envelope.
             </summary>
             <remarks>
             Adds one or more recipients to an envelope.\n\nFor an in process envelope, one that has been sent and has not been completed or voided, an email is sent to a new recipient when they are reached in the routing order. If the new recipient&#39;s routing order is before or the same as the envelope&#39;s next recipient, an email is only sent if the optional `resend_envelope` query string is set to **true**.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="recipients">TBD Description</param>
             <returns>2ApiResponse of Recipients</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.CreateRecipientAsync(System.String,System.String,DocuSign.eSign.Model.Recipients)">
             <summary>
             Adds one or more recipients to an envelope.
             </summary>
             <remarks>
             Adds one or more recipients to an envelope.\n\nFor an in process envelope, one that has been sent and has not been completed or voided, an email is sent to a new recipient when they are reached in the routing order. If the new recipient&#39;s routing order is before or the same as the envelope&#39;s next recipient, an email is only sent if the optional `resend_envelope` query string is set to **true**.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="recipients">TBD Description</param>
             <returns>3Task of Recipients</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.CreateRecipientAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.Recipients)">
             <summary>
             Adds one or more recipients to an envelope.
             </summary>
             <remarks>
             Adds one or more recipients to an envelope.\n\nFor an in process envelope, one that has been sent and has not been completed or voided, an email is sent to a new recipient when they are reached in the routing order. If the new recipient&#39;s routing order is before or the same as the envelope&#39;s next recipient, an email is only sent if the optional `resend_envelope` query string is set to **true**.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="recipients">TBD Description</param>
             <returns>4Task of ApiResponse (Recipients)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.DeleteRecipients(System.String,System.String,DocuSign.eSign.Model.Recipients)">
            <summary>
            Deletes recipients from an envelope.
            </summary>
            <remarks>
            Deletes one or more recipients from a draft or sent envelope. Recipients to be deleted are listed in the request, with the `recipientId` being used as the key for deleting recipients.\n\nIf the envelope is `In Process`, meaning that it has been sent and has not  been completed or voided, recipients that have completed their actions cannot be deleted.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="recipients">TBD Description</param>
             <returns>1Recipients</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.DeleteRecipientsWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.Recipients)">
             <summary>
             Deletes recipients from an envelope.
             </summary>
             <remarks>
             Deletes one or more recipients from a draft or sent envelope. Recipients to be deleted are listed in the request, with the `recipientId` being used as the key for deleting recipients.\n\nIf the envelope is `In Process`, meaning that it has been sent and has not  been completed or voided, recipients that have completed their actions cannot be deleted.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="recipients">TBD Description</param>
             <returns>2ApiResponse of Recipients</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.DeleteRecipientsAsync(System.String,System.String,DocuSign.eSign.Model.Recipients)">
             <summary>
             Deletes recipients from an envelope.
             </summary>
             <remarks>
             Deletes one or more recipients from a draft or sent envelope. Recipients to be deleted are listed in the request, with the `recipientId` being used as the key for deleting recipients.\n\nIf the envelope is `In Process`, meaning that it has been sent and has not  been completed or voided, recipients that have completed their actions cannot be deleted.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="recipients">TBD Description</param>
             <returns>3Task of Recipients</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.DeleteRecipientsAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.Recipients)">
             <summary>
             Deletes recipients from an envelope.
             </summary>
             <remarks>
             Deletes one or more recipients from a draft or sent envelope. Recipients to be deleted are listed in the request, with the `recipientId` being used as the key for deleting recipients.\n\nIf the envelope is `In Process`, meaning that it has been sent and has not  been completed or voided, recipients that have completed their actions cannot be deleted.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="recipients">TBD Description</param>
             <returns>4Task of ApiResponse (Recipients)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.DeleteRecipient(System.String,System.String,System.String)">
            <summary>
            Deletes a recipient from an envelope.
            </summary>
            <remarks>
            Deletes the specified recipient file from the specified envelope. This cannot be used if the envelope has been sent.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param>
             <returns>1Recipients</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.DeleteRecipientWithHttpInfo(System.String,System.String,System.String)">
             <summary>
             Deletes a recipient from an envelope.
             </summary>
             <remarks>
             Deletes the specified recipient file from the specified envelope. This cannot be used if the envelope has been sent.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param>
             <returns>2ApiResponse of Recipients</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.DeleteRecipientAsync(System.String,System.String,System.String)">
             <summary>
             Deletes a recipient from an envelope.
             </summary>
             <remarks>
             Deletes the specified recipient file from the specified envelope. This cannot be used if the envelope has been sent.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param>
             <returns>3Task of Recipients</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.DeleteRecipientAsyncWithHttpInfo(System.String,System.String,System.String)">
             <summary>
             Deletes a recipient from an envelope.
             </summary>
             <remarks>
             Deletes the specified recipient file from the specified envelope. This cannot be used if the envelope has been sent.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param>
             <returns>4Task of ApiResponse (Recipients)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.ListTabs(System.String,System.String,System.String)">
            <summary>
            Gets the tabs information for a signer or sign-in-person recipient in an envelope.
            </summary>
            <remarks>
            Retrieves information about the tabs associated with a recipient in a draft envelope.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param>
             <returns>1Tabs</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.ListTabsWithHttpInfo(System.String,System.String,System.String)">
             <summary>
             Gets the tabs information for a signer or sign-in-person recipient in an envelope.
             </summary>
             <remarks>
             Retrieves information about the tabs associated with a recipient in a draft envelope.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param>
             <returns>2ApiResponse of Tabs</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.ListTabsAsync(System.String,System.String,System.String)">
             <summary>
             Gets the tabs information for a signer or sign-in-person recipient in an envelope.
             </summary>
             <remarks>
             Retrieves information about the tabs associated with a recipient in a draft envelope.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param>
             <returns>3Task of Tabs</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.ListTabsAsyncWithHttpInfo(System.String,System.String,System.String)">
             <summary>
             Gets the tabs information for a signer or sign-in-person recipient in an envelope.
             </summary>
             <remarks>
             Retrieves information about the tabs associated with a recipient in a draft envelope.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param>
             <returns>4Task of ApiResponse (Tabs)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.UpdateTabs(System.String,System.String,System.String,DocuSign.eSign.Model.Tabs)">
            <summary>
            Updates the tabs for a recipient.
            </summary>
            <remarks>
            Updates one or more tabs for a recipient in a draft envelope.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="tabs">TBD Description</param>
             <returns>1Tabs</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.UpdateTabsWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.Tabs)">
             <summary>
             Updates the tabs for a recipient.
             </summary>
             <remarks>
             Updates one or more tabs for a recipient in a draft envelope.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="tabs">TBD Description</param>
             <returns>2ApiResponse of Tabs</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.UpdateTabsAsync(System.String,System.String,System.String,DocuSign.eSign.Model.Tabs)">
             <summary>
             Updates the tabs for a recipient.
             </summary>
             <remarks>
             Updates one or more tabs for a recipient in a draft envelope.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="tabs">TBD Description</param>
             <returns>3Task of Tabs</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.UpdateTabsAsyncWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.Tabs)">
             <summary>
             Updates the tabs for a recipient.
             </summary>
             <remarks>
             Updates one or more tabs for a recipient in a draft envelope.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="tabs">TBD Description</param>
             <returns>4Task of ApiResponse (Tabs)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.CreateTabs(System.String,System.String,System.String,DocuSign.eSign.Model.Tabs)">
            <summary>
            Adds tabs for a recipient.
            </summary>
            <remarks>
            Adds one or more tabs for a recipient.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="tabs">TBD Description</param>
             <returns>1Tabs</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.CreateTabsWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.Tabs)">
             <summary>
             Adds tabs for a recipient.
             </summary>
             <remarks>
             Adds one or more tabs for a recipient.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="tabs">TBD Description</param>
             <returns>2ApiResponse of Tabs</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.CreateTabsAsync(System.String,System.String,System.String,DocuSign.eSign.Model.Tabs)">
             <summary>
             Adds tabs for a recipient.
             </summary>
             <remarks>
             Adds one or more tabs for a recipient.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="tabs">TBD Description</param>
             <returns>3Task of Tabs</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.CreateTabsAsyncWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.Tabs)">
             <summary>
             Adds tabs for a recipient.
             </summary>
             <remarks>
             Adds one or more tabs for a recipient.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="tabs">TBD Description</param>
             <returns>4Task of ApiResponse (Tabs)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.DeleteTabs(System.String,System.String,System.String,DocuSign.eSign.Model.Tabs)">
            <summary>
            Deletes the tabs associated with a recipient.
            </summary>
            <remarks>
            Deletes one or more tabs associated with a recipient in a draft envelope.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="tabs">TBD Description</param>
             <returns>1Tabs</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.DeleteTabsWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.Tabs)">
             <summary>
             Deletes the tabs associated with a recipient.
             </summary>
             <remarks>
             Deletes one or more tabs associated with a recipient in a draft envelope.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="tabs">TBD Description</param>
             <returns>2ApiResponse of Tabs</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.DeleteTabsAsync(System.String,System.String,System.String,DocuSign.eSign.Model.Tabs)">
             <summary>
             Deletes the tabs associated with a recipient.
             </summary>
             <remarks>
             Deletes one or more tabs associated with a recipient in a draft envelope.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="tabs">TBD Description</param>
             <returns>3Task of Tabs</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.DeleteTabsAsyncWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.Tabs)">
             <summary>
             Deletes the tabs associated with a recipient.
             </summary>
             <remarks>
             Deletes one or more tabs associated with a recipient in a draft envelope.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="tabs">TBD Description</param>
             <returns>4Task of ApiResponse (Tabs)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.ListTemplates(System.String,System.String)">
            <summary>
            Get List of Templates used in an Envelope
            </summary>
            <remarks>
            This returns a list of the templates, name and ID, used in an envelope.&lt;br/&gt;&lt;br/&gt;Note: This only returns information for server side templates.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>1TemplateInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.ListTemplatesWithHttpInfo(System.String,System.String)">
             <summary>
             Get List of Templates used in an Envelope
             </summary>
             <remarks>
             This returns a list of the templates, name and ID, used in an envelope.&lt;br/&gt;&lt;br/&gt;Note: This only returns information for server side templates.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>2ApiResponse of TemplateInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.ListTemplatesAsync(System.String,System.String)">
             <summary>
             Get List of Templates used in an Envelope
             </summary>
             <remarks>
             This returns a list of the templates, name and ID, used in an envelope.&lt;br/&gt;&lt;br/&gt;Note: This only returns information for server side templates.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>3Task of TemplateInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.ListTemplatesAsyncWithHttpInfo(System.String,System.String)">
             <summary>
             Get List of Templates used in an Envelope
             </summary>
             <remarks>
             This returns a list of the templates, name and ID, used in an envelope.&lt;br/&gt;&lt;br/&gt;Note: This only returns information for server side templates.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>4Task of ApiResponse (TemplateInformation)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.ApplyTemplate(System.String,System.String,DocuSign.eSign.Model.DocumentTemplateList)">
            <summary>
            Adds templates to an envelope.
            </summary>
            <remarks>
            Adds templates to the specified envelope.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="documentTemplateList">TBD Description</param>
             <returns>1DocumentTemplateList</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.ApplyTemplateWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.DocumentTemplateList)">
             <summary>
             Adds templates to an envelope.
             </summary>
             <remarks>
             Adds templates to the specified envelope.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="documentTemplateList">TBD Description</param>
             <returns>2ApiResponse of DocumentTemplateList</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.ApplyTemplateAsync(System.String,System.String,DocuSign.eSign.Model.DocumentTemplateList)">
             <summary>
             Adds templates to an envelope.
             </summary>
             <remarks>
             Adds templates to the specified envelope.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="documentTemplateList">TBD Description</param>
             <returns>3Task of DocumentTemplateList</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.ApplyTemplateAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.DocumentTemplateList)">
             <summary>
             Adds templates to an envelope.
             </summary>
             <remarks>
             Adds templates to the specified envelope.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="documentTemplateList">TBD Description</param>
             <returns>4Task of ApiResponse (DocumentTemplateList)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.CreateCorrectView(System.String,System.String,DocuSign.eSign.Model.CorrectViewRequest)">
            <summary>
            Returns a URL to the envelope correction UI.
            </summary>
            <remarks>
            Returns a URL that allows you to embed the envelope correction view of the DocuSign UI in your applications.\n\nImportant: iFrames should not be used for embedded operations on mobile devices due to screen space issues. For iOS devices DocuSign recommends using a WebView.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="correctViewRequest">TBD Description</param>
             <returns>1ViewUrl</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.CreateCorrectViewWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.CorrectViewRequest)">
             <summary>
             Returns a URL to the envelope correction UI.
             </summary>
             <remarks>
             Returns a URL that allows you to embed the envelope correction view of the DocuSign UI in your applications.\n\nImportant: iFrames should not be used for embedded operations on mobile devices due to screen space issues. For iOS devices DocuSign recommends using a WebView.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="correctViewRequest">TBD Description</param>
             <returns>2ApiResponse of ViewUrl</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.CreateCorrectViewAsync(System.String,System.String,DocuSign.eSign.Model.CorrectViewRequest)">
             <summary>
             Returns a URL to the envelope correction UI.
             </summary>
             <remarks>
             Returns a URL that allows you to embed the envelope correction view of the DocuSign UI in your applications.\n\nImportant: iFrames should not be used for embedded operations on mobile devices due to screen space issues. For iOS devices DocuSign recommends using a WebView.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="correctViewRequest">TBD Description</param>
             <returns>3Task of ViewUrl</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.CreateCorrectViewAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.CorrectViewRequest)">
             <summary>
             Returns a URL to the envelope correction UI.
             </summary>
             <remarks>
             Returns a URL that allows you to embed the envelope correction view of the DocuSign UI in your applications.\n\nImportant: iFrames should not be used for embedded operations on mobile devices due to screen space issues. For iOS devices DocuSign recommends using a WebView.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="correctViewRequest">TBD Description</param>
             <returns>4Task of ApiResponse (ViewUrl)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.CreateEditView(System.String,System.String,DocuSign.eSign.Model.ReturnUrlRequest)">
            <summary>
            Returns a URL to the edit view UI.
            </summary>
            <remarks>
            Returns a URL that allows you to embed the edit view of the DocuSign UI in your applications. This is a one-time use login token that allows the user to be placed into the DocuSign editing view. \n\nUpon sending completion, the user is returned to the return URL provided by the API application.\n\nImportant: iFrames should not be used for embedded operations on mobile devices due to screen space issues. For iOS devices DocuSign recommends using a WebView.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="returnUrlRequest">TBD Description</param>
             <returns>1ViewUrl</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.CreateEditViewWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.ReturnUrlRequest)">
             <summary>
             Returns a URL to the edit view UI.
             </summary>
             <remarks>
             Returns a URL that allows you to embed the edit view of the DocuSign UI in your applications. This is a one-time use login token that allows the user to be placed into the DocuSign editing view. \n\nUpon sending completion, the user is returned to the return URL provided by the API application.\n\nImportant: iFrames should not be used for embedded operations on mobile devices due to screen space issues. For iOS devices DocuSign recommends using a WebView.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="returnUrlRequest">TBD Description</param>
             <returns>2ApiResponse of ViewUrl</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.CreateEditViewAsync(System.String,System.String,DocuSign.eSign.Model.ReturnUrlRequest)">
             <summary>
             Returns a URL to the edit view UI.
             </summary>
             <remarks>
             Returns a URL that allows you to embed the edit view of the DocuSign UI in your applications. This is a one-time use login token that allows the user to be placed into the DocuSign editing view. \n\nUpon sending completion, the user is returned to the return URL provided by the API application.\n\nImportant: iFrames should not be used for embedded operations on mobile devices due to screen space issues. For iOS devices DocuSign recommends using a WebView.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="returnUrlRequest">TBD Description</param>
             <returns>3Task of ViewUrl</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.CreateEditViewAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.ReturnUrlRequest)">
             <summary>
             Returns a URL to the edit view UI.
             </summary>
             <remarks>
             Returns a URL that allows you to embed the edit view of the DocuSign UI in your applications. This is a one-time use login token that allows the user to be placed into the DocuSign editing view. \n\nUpon sending completion, the user is returned to the return URL provided by the API application.\n\nImportant: iFrames should not be used for embedded operations on mobile devices due to screen space issues. For iOS devices DocuSign recommends using a WebView.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="returnUrlRequest">TBD Description</param>
             <returns>4Task of ApiResponse (ViewUrl)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.CreateRecipientView(System.String,System.String,DocuSign.eSign.Model.RecipientViewRequest)">
            <summary>
            Returns a URL to the recipient view UI.
            </summary>
            <remarks>
            Returns a URL that allows you to embed the recipient view of the DocuSign UI in your applications. This call cannot be used to view draft envelopes, since those envelopes have not been sent. \n\nImportant: iFrames should not be used for embedded operations on mobile devices due to screen space issues. For iOS devices DocuSign recommends using a WebView. \n\nAn entry is added into the Security Level section of the DocuSign Certificate of Completion that reflects the `securityDomain` and `authenticationMethod` properties used to verify the user identity.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="recipientViewRequest">TBD Description</param>
             <returns>1ViewUrl</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.CreateRecipientViewWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.RecipientViewRequest)">
             <summary>
             Returns a URL to the recipient view UI.
             </summary>
             <remarks>
             Returns a URL that allows you to embed the recipient view of the DocuSign UI in your applications. This call cannot be used to view draft envelopes, since those envelopes have not been sent. \n\nImportant: iFrames should not be used for embedded operations on mobile devices due to screen space issues. For iOS devices DocuSign recommends using a WebView. \n\nAn entry is added into the Security Level section of the DocuSign Certificate of Completion that reflects the `securityDomain` and `authenticationMethod` properties used to verify the user identity.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="recipientViewRequest">TBD Description</param>
             <returns>2ApiResponse of ViewUrl</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.CreateRecipientViewAsync(System.String,System.String,DocuSign.eSign.Model.RecipientViewRequest)">
             <summary>
             Returns a URL to the recipient view UI.
             </summary>
             <remarks>
             Returns a URL that allows you to embed the recipient view of the DocuSign UI in your applications. This call cannot be used to view draft envelopes, since those envelopes have not been sent. \n\nImportant: iFrames should not be used for embedded operations on mobile devices due to screen space issues. For iOS devices DocuSign recommends using a WebView. \n\nAn entry is added into the Security Level section of the DocuSign Certificate of Completion that reflects the `securityDomain` and `authenticationMethod` properties used to verify the user identity.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="recipientViewRequest">TBD Description</param>
             <returns>3Task of ViewUrl</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.CreateRecipientViewAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.RecipientViewRequest)">
             <summary>
             Returns a URL to the recipient view UI.
             </summary>
             <remarks>
             Returns a URL that allows you to embed the recipient view of the DocuSign UI in your applications. This call cannot be used to view draft envelopes, since those envelopes have not been sent. \n\nImportant: iFrames should not be used for embedded operations on mobile devices due to screen space issues. For iOS devices DocuSign recommends using a WebView. \n\nAn entry is added into the Security Level section of the DocuSign Certificate of Completion that reflects the `securityDomain` and `authenticationMethod` properties used to verify the user identity.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="recipientViewRequest">TBD Description</param>
             <returns>4Task of ApiResponse (ViewUrl)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.CreateSenderView(System.String,System.String,DocuSign.eSign.Model.ReturnUrlRequest)">
            <summary>
            Returns a URL to the sender view UI.
            </summary>
            <remarks>
            Returns a URL that allows you to embed the sender view of the DocuSign UI in your applications. This is a one-time use login token that allows the user to be placed into the DocuSign sending view. \n\nUpon sending completion, the user is returned to the return URL provided by the API application.\n\nImportant: iFrames should not be used for embedded operations on mobile devices due to screen space issues. For iOS devices DocuSign recommends using a WebView.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="returnUrlRequest">TBD Description</param>
             <returns>1ViewUrl</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.CreateSenderViewWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.ReturnUrlRequest)">
             <summary>
             Returns a URL to the sender view UI.
             </summary>
             <remarks>
             Returns a URL that allows you to embed the sender view of the DocuSign UI in your applications. This is a one-time use login token that allows the user to be placed into the DocuSign sending view. \n\nUpon sending completion, the user is returned to the return URL provided by the API application.\n\nImportant: iFrames should not be used for embedded operations on mobile devices due to screen space issues. For iOS devices DocuSign recommends using a WebView.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="returnUrlRequest">TBD Description</param>
             <returns>2ApiResponse of ViewUrl</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.CreateSenderViewAsync(System.String,System.String,DocuSign.eSign.Model.ReturnUrlRequest)">
             <summary>
             Returns a URL to the sender view UI.
             </summary>
             <remarks>
             Returns a URL that allows you to embed the sender view of the DocuSign UI in your applications. This is a one-time use login token that allows the user to be placed into the DocuSign sending view. \n\nUpon sending completion, the user is returned to the return URL provided by the API application.\n\nImportant: iFrames should not be used for embedded operations on mobile devices due to screen space issues. For iOS devices DocuSign recommends using a WebView.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="returnUrlRequest">TBD Description</param>
             <returns>3Task of ViewUrl</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.CreateSenderViewAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.ReturnUrlRequest)">
             <summary>
             Returns a URL to the sender view UI.
             </summary>
             <remarks>
             Returns a URL that allows you to embed the sender view of the DocuSign UI in your applications. This is a one-time use login token that allows the user to be placed into the DocuSign sending view. \n\nUpon sending completion, the user is returned to the return URL provided by the API application.\n\nImportant: iFrames should not be used for embedded operations on mobile devices due to screen space issues. For iOS devices DocuSign recommends using a WebView.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="returnUrlRequest">TBD Description</param>
             <returns>4Task of ApiResponse (ViewUrl)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.CreateViewLink(System.String,System.String,DocuSign.eSign.Model.ViewLinkRequest)">
            <summary>
            Reserved: Returns a URL to the secure link view UI.
            </summary>
            <remarks>
            Reserved: Returns a URL that allows you to embed the secure link view of the DocuSign UI in your applications.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="viewLinkRequest">TBD Description</param>
             <returns>1ViewUrl</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.CreateViewLinkWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.ViewLinkRequest)">
             <summary>
             Reserved: Returns a URL to the secure link view UI.
             </summary>
             <remarks>
             Reserved: Returns a URL that allows you to embed the secure link view of the DocuSign UI in your applications.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="viewLinkRequest">TBD Description</param>
             <returns>2ApiResponse of ViewUrl</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.CreateViewLinkAsync(System.String,System.String,DocuSign.eSign.Model.ViewLinkRequest)">
             <summary>
             Reserved: Returns a URL to the secure link view UI.
             </summary>
             <remarks>
             Reserved: Returns a URL that allows you to embed the secure link view of the DocuSign UI in your applications.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="viewLinkRequest">TBD Description</param>
             <returns>3Task of ViewUrl</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.CreateViewLinkAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.ViewLinkRequest)">
             <summary>
             Reserved: Returns a URL to the secure link view UI.
             </summary>
             <remarks>
             Reserved: Returns a URL that allows you to embed the secure link view of the DocuSign UI in your applications.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="viewLinkRequest">TBD Description</param>
             <returns>4Task of ApiResponse (ViewUrl)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.DeleteViewLink(System.String,System.String)">
            <summary>
            Reserved: Expires a secure view link.
            </summary>
            <remarks>
            Reserved: Expires a secure view link
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>1</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.DeleteViewLinkWithHttpInfo(System.String,System.String)">
             <summary>
             Reserved: Expires a secure view link.
             </summary>
             <remarks>
             Reserved: Expires a secure view link
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>2ApiResponse of Object(void)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.DeleteViewLinkAsync(System.String,System.String)">
             <summary>
             Reserved: Expires a secure view link.
             </summary>
             <remarks>
             Reserved: Expires a secure view link
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>3Task of void</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.DeleteViewLinkAsyncWithHttpInfo(System.String,System.String)">
             <summary>
             Reserved: Expires a secure view link.
             </summary>
             <remarks>
             Reserved: Expires a secure view link
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>4Task of ApiResponse</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.CreateConsoleView(System.String,DocuSign.eSign.Model.ConsoleViewRequest)">
            <summary>
            Returns a URL to the authentication view UI.
            </summary>
            <remarks>
            Returns a URL that allows you to embed the authentication view of the DocuSign UI in your applications.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="consoleViewRequest">TBD Description</param>
             <returns>1ViewUrl</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.CreateConsoleViewWithHttpInfo(System.String,DocuSign.eSign.Model.ConsoleViewRequest)">
             <summary>
             Returns a URL to the authentication view UI.
             </summary>
             <remarks>
             Returns a URL that allows you to embed the authentication view of the DocuSign UI in your applications.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="consoleViewRequest">TBD Description</param>
             <returns>2ApiResponse of ViewUrl</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.CreateConsoleViewAsync(System.String,DocuSign.eSign.Model.ConsoleViewRequest)">
             <summary>
             Returns a URL to the authentication view UI.
             </summary>
             <remarks>
             Returns a URL that allows you to embed the authentication view of the DocuSign UI in your applications.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="consoleViewRequest">TBD Description</param>
             <returns>3Task of ViewUrl</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IEnvelopesApi.CreateConsoleViewAsyncWithHttpInfo(System.String,DocuSign.eSign.Model.ConsoleViewRequest)">
             <summary>
             Returns a URL to the authentication view UI.
             </summary>
             <remarks>
             Returns a URL that allows you to embed the authentication view of the DocuSign UI in your applications.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="consoleViewRequest">TBD Description</param>
             <returns>4Task of ApiResponse (ViewUrl)</returns>
        </member>
        <member name="T:DocuSign.eSign.Api.EnvelopesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.eSign.Api.EnvelopesApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.#ctor(DocuSign.eSign.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.eSign.Api.EnvelopesApi"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:DocuSign.eSign.Api.EnvelopesApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="T:DocuSign.eSign.Api.EnvelopesApi.ListStatusChangesOptions">
            <summary>
            Gets status changes for one or more envelopes. Retrieves envelope status changes for all envelopes. You can modify the information returned by adding query strings to limit the request to check between certain dates and times, or for certain envelopes, or for certain status codes. It is recommended that you use one or more of the query strings in order to limit the size of the response.\n\n### Important: Unless you are requesting the status for specific envelopes (using the `envelopeIds` or `transactionIds` properties), you must add a set the `from_date` property in the request.\n\nGetting envelope status using `transactionIds` is useful for offline signing situations where it can be used determine if an envelope was created or not, for the cases where a network connection was lost, before the envelope status could be returned.\n\n### Request Envelope Status Notes ###\n\nThe REST API GET /envelopes call uses certain filters to find results. In some cases requests are check for \&quot;any status change\&quot; instead of the just the single status requested. In these cases, more envelopes might be returned by the request than otherwise would be. For example, for a request with the begin date is set to Jan 1st, an end date set to Jan 7th and the status qualifier (`from_to_status`) set to `Delivered` &amp;mdash; the response set might contain envelopes that were created during that time period, but not delivered during the time period.\n\nTo avoid unnecessary database queries, the DocuSign system checks requests to ensure that the added filters will not result in a zero-size response before acting on the request. The following table shows the valid envelope statuses (in the Valid Current Statuses column) for the status qualifiers in the request. If the status and status qualifiers in the API request do not contain any of the values shown in the valid current statuses column, then an empty list is returned.\n\nFor example, a request with a status qualifier (from_to_status) of `Delivered` and a status of \&quot;`Created`,`Sent`\&quot;, DocuSign will always return an empty list. This is because the request essentially translates to: find the envelopes that were delivered between the begin and end dates that have a current status of `Created` or `Sent`, and since an envelope that has been delivered can never have a status of `Created` or `Sent`, a zero-size response would be generated. In this case, DocuSign does not run the request, but just returns the empty list.\n\nClient applications should check that the statuses they are requesting make sense for a given status qualifier.
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Api.EnvelopesApi.ListStatusChangesOptions.block">
            
        </member>
        <member name="P:DocuSign.eSign.Api.EnvelopesApi.ListStatusChangesOptions.powerformids">
            
        </member>
        <member name="P:DocuSign.eSign.Api.EnvelopesApi.ListStatusChangesOptions.orderBy">
            
        </member>
        <member name="P:DocuSign.eSign.Api.EnvelopesApi.ListStatusChangesOptions.intersectingFolderIds">
            
        </member>
        <member name="P:DocuSign.eSign.Api.EnvelopesApi.ListStatusChangesOptions.fromDate">
            The date/time setting that specifies the date/time when the request begins checking for status changes for envelopes in the account.\n\nThis is required unless &#39;envelopeId&#39;s are used. 
        </member>
        <member name="P:DocuSign.eSign.Api.EnvelopesApi.ListStatusChangesOptions.acStatus">
            Specifies the Authoritative Copy Status for the envelopes. The possible values are: Unknown, Original, Transferred, AuthoritativeCopy, AuthoritativeCopyExportPending, AuthoritativeCopyExported, DepositPending, Deposited, DepositedEO, or DepositFailed. 
        </member>
        <member name="P:DocuSign.eSign.Api.EnvelopesApi.ListStatusChangesOptions.count">
            
        </member>
        <member name="P:DocuSign.eSign.Api.EnvelopesApi.ListStatusChangesOptions.customField">
            This specifies the envelope custom field name and value searched for in the envelope information. The value portion of the query can use partial strings by adding &#39;%&#39; (percent sign) around the custom field query value. \n\nExample 1: If you have an envelope custom field called \&quot;Region\&quot; and you want to search for all envelopes where the value is \&quot;West\&quot; you would use the query: `?custom_field=Region=West`. \n\nExample 2: To search for envelopes where the `ApplicationID` custom field has the value or partial value of \&quot;DocuSign\&quot; in field, the query would be: `?custom_field=ApplicationId=%DocuSign%` This would find envelopes where the custom field value is \&quot;DocuSign for Salesforce\&quot; or \&quot;DocuSign envelope.\&quot; 
        </member>
        <member name="P:DocuSign.eSign.Api.EnvelopesApi.ListStatusChangesOptions.email">
            
        </member>
        <member name="P:DocuSign.eSign.Api.EnvelopesApi.ListStatusChangesOptions.userName">
            
        </member>
        <member name="P:DocuSign.eSign.Api.EnvelopesApi.ListStatusChangesOptions.exclude">
            
        </member>
        <member name="P:DocuSign.eSign.Api.EnvelopesApi.ListStatusChangesOptions.folderIds">
            
        </member>
        <member name="P:DocuSign.eSign.Api.EnvelopesApi.ListStatusChangesOptions.folderTypes">
            
        </member>
        <member name="P:DocuSign.eSign.Api.EnvelopesApi.ListStatusChangesOptions.searchText">
            
        </member>
        <member name="P:DocuSign.eSign.Api.EnvelopesApi.ListStatusChangesOptions.fromToStatus">
            This is the status type checked for in the `from_date`/`to_date` period. If `changed` is specified, then envelopes that changed status during the period are found. If for example, `created` is specified, then envelopes created during the period are found. Default is `changed`. \n\nPossible values are: Voided, Changed, Created, Deleted, Sent, Delivered, Signed, Completed, Declined, TimedOut and Processing. 
        </member>
        <member name="P:DocuSign.eSign.Api.EnvelopesApi.ListStatusChangesOptions.include">
            
        </member>
        <member name="P:DocuSign.eSign.Api.EnvelopesApi.ListStatusChangesOptions.order">
            
        </member>
        <member name="P:DocuSign.eSign.Api.EnvelopesApi.ListStatusChangesOptions.envelopeIds">
            
        </member>
        <member name="P:DocuSign.eSign.Api.EnvelopesApi.ListStatusChangesOptions.toDate">
            Optional date/time setting that specifies the date/time when the request stops for status changes for envelopes in the account. If no entry, the system uses the time of the call as the `to_date`. 
        </member>
        <member name="P:DocuSign.eSign.Api.EnvelopesApi.ListStatusChangesOptions.userId">
            
        </member>
        <member name="P:DocuSign.eSign.Api.EnvelopesApi.ListStatusChangesOptions.status">
            The list of current statuses to include in the response. By default, all envelopes found are returned. If values are specified, then of the envelopes found, only those with the current status specified are returned in the results. \n\nPossible values are: Voided, Created, Deleted, Sent, Delivered, Signed, Completed, Declined, TimedOut and Processing. 
        </member>
        <member name="P:DocuSign.eSign.Api.EnvelopesApi.ListStatusChangesOptions.startPosition">
            
        </member>
        <member name="P:DocuSign.eSign.Api.EnvelopesApi.ListStatusChangesOptions.transactionIds">
            If included in the query string, this is a comma separated list of envelope `transactionId`s. \n\nIf included in the `request_body`, this is a list of envelope `transactionId`s. \n\n### Note: `transactionId`s are only valid in the DocuSign system for seven days. 
        </member>
        <member name="P:DocuSign.eSign.Api.EnvelopesApi.ListStatusChangesOptions.userFilter">
            
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.ListStatusChanges(System.String,DocuSign.eSign.Api.EnvelopesApi.ListStatusChangesOptions)">
             <summary>
             Gets status changes for one or more envelopes. Retrieves envelope status changes for all envelopes. You can modify the information returned by adding query strings to limit the request to check between certain dates and times, or for certain envelopes, or for certain status codes. It is recommended that you use one or more of the query strings in order to limit the size of the response.\n\n### Important: Unless you are requesting the status for specific envelopes (using the `envelopeIds` or `transactionIds` properties), you must add a set the `from_date` property in the request.\n\nGetting envelope status using `transactionIds` is useful for offline signing situations where it can be used determine if an envelope was created or not, for the cases where a network connection was lost, before the envelope status could be returned.\n\n### Request Envelope Status Notes ###\n\nThe REST API GET /envelopes call uses certain filters to find results. In some cases requests are check for \&quot;any status change\&quot; instead of the just the single status requested. In these cases, more envelopes might be returned by the request than otherwise would be. For example, for a request with the begin date is set to Jan 1st, an end date set to Jan 7th and the status qualifier (`from_to_status`) set to `Delivered` &amp;mdash; the response set might contain envelopes that were created during that time period, but not delivered during the time period.\n\nTo avoid unnecessary database queries, the DocuSign system checks requests to ensure that the added filters will not result in a zero-size response before acting on the request. The following table shows the valid envelope statuses (in the Valid Current Statuses column) for the status qualifiers in the request. If the status and status qualifiers in the API request do not contain any of the values shown in the valid current statuses column, then an empty list is returned.\n\nFor example, a request with a status qualifier (from_to_status) of `Delivered` and a status of \&quot;`Created`,`Sent`\&quot;, DocuSign will always return an empty list. This is because the request essentially translates to: find the envelopes that were delivered between the begin and end dates that have a current status of `Created` or `Sent`, and since an envelope that has been delivered can never have a status of `Created` or `Sent`, a zero-size response would be generated. In this case, DocuSign does not run the request, but just returns the empty list.\n\nClient applications should check that the statuses they are requesting make sense for a given status qualifier.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="options">Options for modifying the behavior of the function.</param>
             <returns>5EnvelopesInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.ListStatusChangesWithHttpInfo(System.String,DocuSign.eSign.Api.EnvelopesApi.ListStatusChangesOptions)">
             <summary>
             Gets status changes for one or more envelopes. Retrieves envelope status changes for all envelopes. You can modify the information returned by adding query strings to limit the request to check between certain dates and times, or for certain envelopes, or for certain status codes. It is recommended that you use one or more of the query strings in order to limit the size of the response.\n\n### Important: Unless you are requesting the status for specific envelopes (using the `envelopeIds` or `transactionIds` properties), you must add a set the `from_date` property in the request.\n\nGetting envelope status using `transactionIds` is useful for offline signing situations where it can be used determine if an envelope was created or not, for the cases where a network connection was lost, before the envelope status could be returned.\n\n### Request Envelope Status Notes ###\n\nThe REST API GET /envelopes call uses certain filters to find results. In some cases requests are check for \&quot;any status change\&quot; instead of the just the single status requested. In these cases, more envelopes might be returned by the request than otherwise would be. For example, for a request with the begin date is set to Jan 1st, an end date set to Jan 7th and the status qualifier (`from_to_status`) set to `Delivered` &amp;mdash; the response set might contain envelopes that were created during that time period, but not delivered during the time period.\n\nTo avoid unnecessary database queries, the DocuSign system checks requests to ensure that the added filters will not result in a zero-size response before acting on the request. The following table shows the valid envelope statuses (in the Valid Current Statuses column) for the status qualifiers in the request. If the status and status qualifiers in the API request do not contain any of the values shown in the valid current statuses column, then an empty list is returned.\n\nFor example, a request with a status qualifier (from_to_status) of `Delivered` and a status of \&quot;`Created`,`Sent`\&quot;, DocuSign will always return an empty list. This is because the request essentially translates to: find the envelopes that were delivered between the begin and end dates that have a current status of `Created` or `Sent`, and since an envelope that has been delivered can never have a status of `Created` or `Sent`, a zero-size response would be generated. In this case, DocuSign does not run the request, but just returns the empty list.\n\nClient applications should check that the statuses they are requesting make sense for a given status qualifier.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="options">Options for modifying the behavior of the function.</param>
             <returns>6ApiResponse of EnvelopesInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.ListStatusChangesAsync(System.String,DocuSign.eSign.Api.EnvelopesApi.ListStatusChangesOptions)">
             <summary>
             Gets status changes for one or more envelopes. Retrieves envelope status changes for all envelopes. You can modify the information returned by adding query strings to limit the request to check between certain dates and times, or for certain envelopes, or for certain status codes. It is recommended that you use one or more of the query strings in order to limit the size of the response.\n\n### Important: Unless you are requesting the status for specific envelopes (using the `envelopeIds` or `transactionIds` properties), you must add a set the `from_date` property in the request.\n\nGetting envelope status using `transactionIds` is useful for offline signing situations where it can be used determine if an envelope was created or not, for the cases where a network connection was lost, before the envelope status could be returned.\n\n### Request Envelope Status Notes ###\n\nThe REST API GET /envelopes call uses certain filters to find results. In some cases requests are check for \&quot;any status change\&quot; instead of the just the single status requested. In these cases, more envelopes might be returned by the request than otherwise would be. For example, for a request with the begin date is set to Jan 1st, an end date set to Jan 7th and the status qualifier (`from_to_status`) set to `Delivered` &amp;mdash; the response set might contain envelopes that were created during that time period, but not delivered during the time period.\n\nTo avoid unnecessary database queries, the DocuSign system checks requests to ensure that the added filters will not result in a zero-size response before acting on the request. The following table shows the valid envelope statuses (in the Valid Current Statuses column) for the status qualifiers in the request. If the status and status qualifiers in the API request do not contain any of the values shown in the valid current statuses column, then an empty list is returned.\n\nFor example, a request with a status qualifier (from_to_status) of `Delivered` and a status of \&quot;`Created`,`Sent`\&quot;, DocuSign will always return an empty list. This is because the request essentially translates to: find the envelopes that were delivered between the begin and end dates that have a current status of `Created` or `Sent`, and since an envelope that has been delivered can never have a status of `Created` or `Sent`, a zero-size response would be generated. In this case, DocuSign does not run the request, but just returns the empty list.\n\nClient applications should check that the statuses they are requesting make sense for a given status qualifier.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="options">Options for modifying the behavior of the function.</param>
             <returns>7Task of EnvelopesInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.ListStatusChangesAsyncWithHttpInfo(System.String,DocuSign.eSign.Api.EnvelopesApi.ListStatusChangesOptions)">
             <summary>
             Gets status changes for one or more envelopes. Retrieves envelope status changes for all envelopes. You can modify the information returned by adding query strings to limit the request to check between certain dates and times, or for certain envelopes, or for certain status codes. It is recommended that you use one or more of the query strings in order to limit the size of the response.\n\n### Important: Unless you are requesting the status for specific envelopes (using the `envelopeIds` or `transactionIds` properties), you must add a set the `from_date` property in the request.\n\nGetting envelope status using `transactionIds` is useful for offline signing situations where it can be used determine if an envelope was created or not, for the cases where a network connection was lost, before the envelope status could be returned.\n\n### Request Envelope Status Notes ###\n\nThe REST API GET /envelopes call uses certain filters to find results. In some cases requests are check for \&quot;any status change\&quot; instead of the just the single status requested. In these cases, more envelopes might be returned by the request than otherwise would be. For example, for a request with the begin date is set to Jan 1st, an end date set to Jan 7th and the status qualifier (`from_to_status`) set to `Delivered` &amp;mdash; the response set might contain envelopes that were created during that time period, but not delivered during the time period.\n\nTo avoid unnecessary database queries, the DocuSign system checks requests to ensure that the added filters will not result in a zero-size response before acting on the request. The following table shows the valid envelope statuses (in the Valid Current Statuses column) for the status qualifiers in the request. If the status and status qualifiers in the API request do not contain any of the values shown in the valid current statuses column, then an empty list is returned.\n\nFor example, a request with a status qualifier (from_to_status) of `Delivered` and a status of \&quot;`Created`,`Sent`\&quot;, DocuSign will always return an empty list. This is because the request essentially translates to: find the envelopes that were delivered between the begin and end dates that have a current status of `Created` or `Sent`, and since an envelope that has been delivered can never have a status of `Created` or `Sent`, a zero-size response would be generated. In this case, DocuSign does not run the request, but just returns the empty list.\n\nClient applications should check that the statuses they are requesting make sense for a given status qualifier.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="options">Options for modifying the behavior of the function.</param>
             <returns>8Task of ApiResponse (EnvelopesInformation)</returns>
        </member>
        <member name="T:DocuSign.eSign.Api.EnvelopesApi.CreateEnvelopeOptions">
            <summary>
            Creates an envelope. Creates an envelope. \n\nUsing this function you can:\n* Create an envelope and send it.\n* Create an envelope from an existing template and send it.\n\nIn either case, you can choose to save the envelope as a draft envelope instead of sending it by setting the `status` property in the request to `created` instead of `sent`.\n\n### Send an Envelope or Create a Draft Envelope\n\nThis is a multi-part/form request.\n\nEnvelope Event Notification: `eventNotification` is an optional property that specifies a set of envelope and recipient status codes, a URL, and some other options. When the envelope or recipient status changes to one of the specified status codes, DocuSign sends a message containing the updated status to the specified URL.\n\n### Note: DocuSign Connect must be enabled to use `eventNotification`, but Connect does not need to be configured for the account since the configuration is done for each envelope.\n\n### Send an Envelope from a Template\n\nWhen you create an envelope using a `templateId`, the `recipients` structure is used to assign recipients to template roles via the `roleName` property, override recipient settings that have been specified in the template and set values for tab fields that were defined in the template.\n\nWhen a template is added or applied to an envelope and the template has a locked email subject and message, that subject and message is used for the envelope and cannot be changed even if another locked template is subsequently added or applied to the envelope. If an email subject or message is entered before adding or applying a locked template, the email subject and message is overwritten with the email subject and message from the locked template.\n\n**Composite Templates**:\n\nYou can add Composite Templates structure to the  to create envelopes from a combination of DocuSign templates and PDF forms. The basic envelope remains the same, while the Composite Template adds new document and template overlays into the envelope. There can be any number of Composite Template structures in the envelope.\n\nEach Composite Template consists of server templates, inline templates, PDF Metadata templates, and documents.\n\n* Composite Template ID is an optional element used to identify the composite template. It is used as a reference when adding document object information. If used, the document content-disposition must include the `compositeTemplateId` to which the document should be added. If `compositeTemplateId` is not specified in the content-disposition, the document is applied based on the `documentId` only. If no document object is specified, the composite template inherits the first document.\n* Server Templates are server-side templates stored on the DocuSign server. If supplied they are overlaid into the envelope in the order of their Sequence value.\n* Inline Templates provide the container to pass inline XML properties. Inline templates allow you to add documents and, for PDF documents, transform the PDF fields into DocuSign tabs. If inline templates are supplied, they are overlaid into the envelope in the order of their Sequence value.\n* PDF Metadata Templates provide a container to embed design-time template information into a PDF document. DocuSign uses this information when processing the Envelope. This convention allows the document to carry the signing instructions with it, so that less information needs to be provided at run-time through an inline template or synchronized with an external structure like a server template. PDF Metadata templates are stored in the Metadata layer of a PDF in accordance with Acrobat&#39;s XMP specification. DocuSign will only find PDF Metadata templates inside documents passed in the Document object (see below). If supplied the PDF meta data template will be overlaid into the envelope in the order of their Sequence value.\n* Document objects are optional structures that provide a container to pass in a document or form. If this object is not passed, the composite template inherits the first document it finds from some other server template or inline template, starting with the lowest sequence value (discussed below).\n\nIf there are multiple composite templates, the document content-disposition can include the `compositeTemplateId` to which the document should be added. Using the `compositeTemplateId` sets which documents are associated with particular composite templates. An example of this usage is:\n\n```\n   --5cd3320a-5aac-4453-b3a4-cbb52a4cba5d\n\n   Content-Type: application/pdf\n\n   Content-Disposition: file; filename=\&quot;eula.pdf\&quot;; documentId=1; compositeTemplateId=\&quot;1\&quot;\n\n   Content-Transfer-Encoding: base64\n```\n\nAcrobat form objects are only extrapolated from the document object. DocuSign does not derive Acrobat form properties from server templates or inline templates. To instruct DocuSign to extrapolate objects from the Acrobat form, set `transformPdfFields` to \&quot;true\&quot; for the document. See the Transform PDF Fields section for more information about how fields are transformed into DocuSign tabs.\n\n*Sequence*\n\nEach type of template has a sequence property, which enables the templates to be over-laid in a particular order. This is significant because \&quot;last-out\&quot; wins in cases of the same property being specified in multiple places in the method schema.\n\n**Merge Recipient Roles for Draft Envelopes**\n\nWhen an envelope with multiple templates is sent, the recipients from the templates are merged according to template roles and empty recipients are removed. When creating an envelope with multiple templates, but not sending it (keeping it in a created state), duplicate recipients are not merged, which could cause leave duplicate recipients in the envelope.\n\nTo prevent this, the query parameter `merge_roles_on_draft` should be added when posting a draft envelope (status=created) with multiple templates. Doing this will merge template roles and remove empty recipients.\n\n### Note: DocuSign recommends that the merge roles query parameter be used anytime you are creating an envelope with multiple templates and keeping it in draft (created) status.\n\n**Template Email Subject Merge Fields**\n\nThis provides the ability to insert recipient name and email address merge fields into the email subject line when creating or sending from a template.\n\nThe merge fields, based on the recipient’s `roleName`, are added to the `emailSubject` when the template is created or when the template is used to create an envelope. After a template sender adds the name and email information for the recipient and sends the envelope, the recipient information is automatically merged into the appropriate fields in the email subject line.\n\nBoth the sender and the recipients will see the information in the email subject line for any emails associated with the template. This provides an easy way for senders to organize their envelope emails without having to open an envelope to check the recipient.\n\nIf merging the recipient information into the subject line causes the subject line to exceed 100 characters, then any characters over the 100 character limit are not included in the subject line. For cases where the recipient name or email is expected to be long, you should consider placing the merge field at the start of the email subject.\n\n* To add a recipient’s name in the subject line add the following text in the `emailSubject` when creating the template or when sending an envelope from a template:\n\n   [[&lt;roleName&gt;_UserName]]\n\n   Example:\n\n   `\&quot;emailSubject\&quot;:\&quot;[[Signer 1_UserName]], Please sign this NDA\&quot;,`\n\n* To add a recipient’s email address in the subject line add the following text in the emailSubject when creating the template or when sending an envelope from a template:\n\n   [[&lt;roleName&gt;_Email]]\n\n   Example:\n\n   `\&quot;emailSubject\&quot;:\&quot;[[Signer 1_Email]], Please sign this NDA\&quot;,`\n\nIn both cases the &lt;roleName&gt; is the recipient’s `roleName` in the template.\n\nFor cases where another recipient (such as an Agent, Editor, or Intermediary recipient) is entering the name and email information for the recipient included in the email subject, then [[&lt;roleName&gt;_UserName]] or [[&lt;roleName&gt;_Email]] is shown in the email subject.\n\n*Rules for determining the `brandId` used in an envelope*\n\nThe following rules are used to determine the `brandId` used in an envelope:\n\n* If a `brandId` is specified in the envelope/template and that brandId is available to the account, that brand is used in the envelope.\n* If more than one template is used in an envelope and more than one `brandId` is specified, the first `brandId` specified is used throughout the envelope.\n* In cases where no brand is specified and the sender belongs to a Group; if there is only one brand associated with the Group, then that brand is used in the envelope. Otherwise, the account’s default signing brand is used.\n* For envelopes that do not meet any of the previous rules, the account&#39;s default signing brand is used in the envelope.\n\n### Important: The BCC Email address feature is designed to provide a copy of all email communications for external archiving purposes. DocuSign recommends that envelopes sent using the BCC for Email Archive feature, including the BCC Email Override option, include additional signer authentication options. To send a copy of the envelope to a recipient who does not need to sign, use a Carbon Copies or Certified Deliveries Recipient Type.
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Api.EnvelopesApi.CreateEnvelopeOptions.cdseMode">
            
        </member>
        <member name="P:DocuSign.eSign.Api.EnvelopesApi.CreateEnvelopeOptions.mergeRolesOnDraft">
            When set to **true**, merges template roles and remove empty recipients when you create an envelope with multiple templates. 
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.CreateEnvelope(System.String,DocuSign.eSign.Model.EnvelopeDefinition,DocuSign.eSign.Api.EnvelopesApi.CreateEnvelopeOptions)">
             <summary>
             Creates an envelope. Creates an envelope. \n\nUsing this function you can:\n* Create an envelope and send it.\n* Create an envelope from an existing template and send it.\n\nIn either case, you can choose to save the envelope as a draft envelope instead of sending it by setting the `status` property in the request to `created` instead of `sent`.\n\n### Send an Envelope or Create a Draft Envelope\n\nThis is a multi-part/form request.\n\nEnvelope Event Notification: `eventNotification` is an optional property that specifies a set of envelope and recipient status codes, a URL, and some other options. When the envelope or recipient status changes to one of the specified status codes, DocuSign sends a message containing the updated status to the specified URL.\n\n### Note: DocuSign Connect must be enabled to use `eventNotification`, but Connect does not need to be configured for the account since the configuration is done for each envelope.\n\n### Send an Envelope from a Template\n\nWhen you create an envelope using a `templateId`, the `recipients` structure is used to assign recipients to template roles via the `roleName` property, override recipient settings that have been specified in the template and set values for tab fields that were defined in the template.\n\nWhen a template is added or applied to an envelope and the template has a locked email subject and message, that subject and message is used for the envelope and cannot be changed even if another locked template is subsequently added or applied to the envelope. If an email subject or message is entered before adding or applying a locked template, the email subject and message is overwritten with the email subject and message from the locked template.\n\n**Composite Templates**:\n\nYou can add Composite Templates structure to the  to create envelopes from a combination of DocuSign templates and PDF forms. The basic envelope remains the same, while the Composite Template adds new document and template overlays into the envelope. There can be any number of Composite Template structures in the envelope.\n\nEach Composite Template consists of server templates, inline templates, PDF Metadata templates, and documents.\n\n* Composite Template ID is an optional element used to identify the composite template. It is used as a reference when adding document object information. If used, the document content-disposition must include the `compositeTemplateId` to which the document should be added. If `compositeTemplateId` is not specified in the content-disposition, the document is applied based on the `documentId` only. If no document object is specified, the composite template inherits the first document.\n* Server Templates are server-side templates stored on the DocuSign server. If supplied they are overlaid into the envelope in the order of their Sequence value.\n* Inline Templates provide the container to pass inline XML properties. Inline templates allow you to add documents and, for PDF documents, transform the PDF fields into DocuSign tabs. If inline templates are supplied, they are overlaid into the envelope in the order of their Sequence value.\n* PDF Metadata Templates provide a container to embed design-time template information into a PDF document. DocuSign uses this information when processing the Envelope. This convention allows the document to carry the signing instructions with it, so that less information needs to be provided at run-time through an inline template or synchronized with an external structure like a server template. PDF Metadata templates are stored in the Metadata layer of a PDF in accordance with Acrobat&#39;s XMP specification. DocuSign will only find PDF Metadata templates inside documents passed in the Document object (see below). If supplied the PDF meta data template will be overlaid into the envelope in the order of their Sequence value.\n* Document objects are optional structures that provide a container to pass in a document or form. If this object is not passed, the composite template inherits the first document it finds from some other server template or inline template, starting with the lowest sequence value (discussed below).\n\nIf there are multiple composite templates, the document content-disposition can include the `compositeTemplateId` to which the document should be added. Using the `compositeTemplateId` sets which documents are associated with particular composite templates. An example of this usage is:\n\n```\n   --5cd3320a-5aac-4453-b3a4-cbb52a4cba5d\n\n   Content-Type: application/pdf\n\n   Content-Disposition: file; filename=\&quot;eula.pdf\&quot;; documentId=1; compositeTemplateId=\&quot;1\&quot;\n\n   Content-Transfer-Encoding: base64\n```\n\nAcrobat form objects are only extrapolated from the document object. DocuSign does not derive Acrobat form properties from server templates or inline templates. To instruct DocuSign to extrapolate objects from the Acrobat form, set `transformPdfFields` to \&quot;true\&quot; for the document. See the Transform PDF Fields section for more information about how fields are transformed into DocuSign tabs.\n\n*Sequence*\n\nEach type of template has a sequence property, which enables the templates to be over-laid in a particular order. This is significant because \&quot;last-out\&quot; wins in cases of the same property being specified in multiple places in the method schema.\n\n**Merge Recipient Roles for Draft Envelopes**\n\nWhen an envelope with multiple templates is sent, the recipients from the templates are merged according to template roles and empty recipients are removed. When creating an envelope with multiple templates, but not sending it (keeping it in a created state), duplicate recipients are not merged, which could cause leave duplicate recipients in the envelope.\n\nTo prevent this, the query parameter `merge_roles_on_draft` should be added when posting a draft envelope (status=created) with multiple templates. Doing this will merge template roles and remove empty recipients.\n\n### Note: DocuSign recommends that the merge roles query parameter be used anytime you are creating an envelope with multiple templates and keeping it in draft (created) status.\n\n**Template Email Subject Merge Fields**\n\nThis provides the ability to insert recipient name and email address merge fields into the email subject line when creating or sending from a template.\n\nThe merge fields, based on the recipient’s `roleName`, are added to the `emailSubject` when the template is created or when the template is used to create an envelope. After a template sender adds the name and email information for the recipient and sends the envelope, the recipient information is automatically merged into the appropriate fields in the email subject line.\n\nBoth the sender and the recipients will see the information in the email subject line for any emails associated with the template. This provides an easy way for senders to organize their envelope emails without having to open an envelope to check the recipient.\n\nIf merging the recipient information into the subject line causes the subject line to exceed 100 characters, then any characters over the 100 character limit are not included in the subject line. For cases where the recipient name or email is expected to be long, you should consider placing the merge field at the start of the email subject.\n\n* To add a recipient’s name in the subject line add the following text in the `emailSubject` when creating the template or when sending an envelope from a template:\n\n   [[&lt;roleName&gt;_UserName]]\n\n   Example:\n\n   `\&quot;emailSubject\&quot;:\&quot;[[Signer 1_UserName]], Please sign this NDA\&quot;,`\n\n* To add a recipient’s email address in the subject line add the following text in the emailSubject when creating the template or when sending an envelope from a template:\n\n   [[&lt;roleName&gt;_Email]]\n\n   Example:\n\n   `\&quot;emailSubject\&quot;:\&quot;[[Signer 1_Email]], Please sign this NDA\&quot;,`\n\nIn both cases the &lt;roleName&gt; is the recipient’s `roleName` in the template.\n\nFor cases where another recipient (such as an Agent, Editor, or Intermediary recipient) is entering the name and email information for the recipient included in the email subject, then [[&lt;roleName&gt;_UserName]] or [[&lt;roleName&gt;_Email]] is shown in the email subject.\n\n*Rules for determining the `brandId` used in an envelope*\n\nThe following rules are used to determine the `brandId` used in an envelope:\n\n* If a `brandId` is specified in the envelope/template and that brandId is available to the account, that brand is used in the envelope.\n* If more than one template is used in an envelope and more than one `brandId` is specified, the first `brandId` specified is used throughout the envelope.\n* In cases where no brand is specified and the sender belongs to a Group; if there is only one brand associated with the Group, then that brand is used in the envelope. Otherwise, the account’s default signing brand is used.\n* For envelopes that do not meet any of the previous rules, the account&#39;s default signing brand is used in the envelope.\n\n### Important: The BCC Email address feature is designed to provide a copy of all email communications for external archiving purposes. DocuSign recommends that envelopes sent using the BCC for Email Archive feature, including the BCC Email Override option, include additional signer authentication options. To send a copy of the envelope to a recipient who does not need to sign, use a Carbon Copies or Certified Deliveries Recipient Type.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="envelopeDefinition">TBD Description</param> <param name="options">Options for modifying the behavior of the function.</param>
             <returns>5EnvelopeSummary</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.CreateEnvelopeWithHttpInfo(System.String,DocuSign.eSign.Model.EnvelopeDefinition,DocuSign.eSign.Api.EnvelopesApi.CreateEnvelopeOptions)">
             <summary>
             Creates an envelope. Creates an envelope. \n\nUsing this function you can:\n* Create an envelope and send it.\n* Create an envelope from an existing template and send it.\n\nIn either case, you can choose to save the envelope as a draft envelope instead of sending it by setting the `status` property in the request to `created` instead of `sent`.\n\n### Send an Envelope or Create a Draft Envelope\n\nThis is a multi-part/form request.\n\nEnvelope Event Notification: `eventNotification` is an optional property that specifies a set of envelope and recipient status codes, a URL, and some other options. When the envelope or recipient status changes to one of the specified status codes, DocuSign sends a message containing the updated status to the specified URL.\n\n### Note: DocuSign Connect must be enabled to use `eventNotification`, but Connect does not need to be configured for the account since the configuration is done for each envelope.\n\n### Send an Envelope from a Template\n\nWhen you create an envelope using a `templateId`, the `recipients` structure is used to assign recipients to template roles via the `roleName` property, override recipient settings that have been specified in the template and set values for tab fields that were defined in the template.\n\nWhen a template is added or applied to an envelope and the template has a locked email subject and message, that subject and message is used for the envelope and cannot be changed even if another locked template is subsequently added or applied to the envelope. If an email subject or message is entered before adding or applying a locked template, the email subject and message is overwritten with the email subject and message from the locked template.\n\n**Composite Templates**:\n\nYou can add Composite Templates structure to the  to create envelopes from a combination of DocuSign templates and PDF forms. The basic envelope remains the same, while the Composite Template adds new document and template overlays into the envelope. There can be any number of Composite Template structures in the envelope.\n\nEach Composite Template consists of server templates, inline templates, PDF Metadata templates, and documents.\n\n* Composite Template ID is an optional element used to identify the composite template. It is used as a reference when adding document object information. If used, the document content-disposition must include the `compositeTemplateId` to which the document should be added. If `compositeTemplateId` is not specified in the content-disposition, the document is applied based on the `documentId` only. If no document object is specified, the composite template inherits the first document.\n* Server Templates are server-side templates stored on the DocuSign server. If supplied they are overlaid into the envelope in the order of their Sequence value.\n* Inline Templates provide the container to pass inline XML properties. Inline templates allow you to add documents and, for PDF documents, transform the PDF fields into DocuSign tabs. If inline templates are supplied, they are overlaid into the envelope in the order of their Sequence value.\n* PDF Metadata Templates provide a container to embed design-time template information into a PDF document. DocuSign uses this information when processing the Envelope. This convention allows the document to carry the signing instructions with it, so that less information needs to be provided at run-time through an inline template or synchronized with an external structure like a server template. PDF Metadata templates are stored in the Metadata layer of a PDF in accordance with Acrobat&#39;s XMP specification. DocuSign will only find PDF Metadata templates inside documents passed in the Document object (see below). If supplied the PDF meta data template will be overlaid into the envelope in the order of their Sequence value.\n* Document objects are optional structures that provide a container to pass in a document or form. If this object is not passed, the composite template inherits the first document it finds from some other server template or inline template, starting with the lowest sequence value (discussed below).\n\nIf there are multiple composite templates, the document content-disposition can include the `compositeTemplateId` to which the document should be added. Using the `compositeTemplateId` sets which documents are associated with particular composite templates. An example of this usage is:\n\n```\n   --5cd3320a-5aac-4453-b3a4-cbb52a4cba5d\n\n   Content-Type: application/pdf\n\n   Content-Disposition: file; filename=\&quot;eula.pdf\&quot;; documentId=1; compositeTemplateId=\&quot;1\&quot;\n\n   Content-Transfer-Encoding: base64\n```\n\nAcrobat form objects are only extrapolated from the document object. DocuSign does not derive Acrobat form properties from server templates or inline templates. To instruct DocuSign to extrapolate objects from the Acrobat form, set `transformPdfFields` to \&quot;true\&quot; for the document. See the Transform PDF Fields section for more information about how fields are transformed into DocuSign tabs.\n\n*Sequence*\n\nEach type of template has a sequence property, which enables the templates to be over-laid in a particular order. This is significant because \&quot;last-out\&quot; wins in cases of the same property being specified in multiple places in the method schema.\n\n**Merge Recipient Roles for Draft Envelopes**\n\nWhen an envelope with multiple templates is sent, the recipients from the templates are merged according to template roles and empty recipients are removed. When creating an envelope with multiple templates, but not sending it (keeping it in a created state), duplicate recipients are not merged, which could cause leave duplicate recipients in the envelope.\n\nTo prevent this, the query parameter `merge_roles_on_draft` should be added when posting a draft envelope (status=created) with multiple templates. Doing this will merge template roles and remove empty recipients.\n\n### Note: DocuSign recommends that the merge roles query parameter be used anytime you are creating an envelope with multiple templates and keeping it in draft (created) status.\n\n**Template Email Subject Merge Fields**\n\nThis provides the ability to insert recipient name and email address merge fields into the email subject line when creating or sending from a template.\n\nThe merge fields, based on the recipient’s `roleName`, are added to the `emailSubject` when the template is created or when the template is used to create an envelope. After a template sender adds the name and email information for the recipient and sends the envelope, the recipient information is automatically merged into the appropriate fields in the email subject line.\n\nBoth the sender and the recipients will see the information in the email subject line for any emails associated with the template. This provides an easy way for senders to organize their envelope emails without having to open an envelope to check the recipient.\n\nIf merging the recipient information into the subject line causes the subject line to exceed 100 characters, then any characters over the 100 character limit are not included in the subject line. For cases where the recipient name or email is expected to be long, you should consider placing the merge field at the start of the email subject.\n\n* To add a recipient’s name in the subject line add the following text in the `emailSubject` when creating the template or when sending an envelope from a template:\n\n   [[&lt;roleName&gt;_UserName]]\n\n   Example:\n\n   `\&quot;emailSubject\&quot;:\&quot;[[Signer 1_UserName]], Please sign this NDA\&quot;,`\n\n* To add a recipient’s email address in the subject line add the following text in the emailSubject when creating the template or when sending an envelope from a template:\n\n   [[&lt;roleName&gt;_Email]]\n\n   Example:\n\n   `\&quot;emailSubject\&quot;:\&quot;[[Signer 1_Email]], Please sign this NDA\&quot;,`\n\nIn both cases the &lt;roleName&gt; is the recipient’s `roleName` in the template.\n\nFor cases where another recipient (such as an Agent, Editor, or Intermediary recipient) is entering the name and email information for the recipient included in the email subject, then [[&lt;roleName&gt;_UserName]] or [[&lt;roleName&gt;_Email]] is shown in the email subject.\n\n*Rules for determining the `brandId` used in an envelope*\n\nThe following rules are used to determine the `brandId` used in an envelope:\n\n* If a `brandId` is specified in the envelope/template and that brandId is available to the account, that brand is used in the envelope.\n* If more than one template is used in an envelope and more than one `brandId` is specified, the first `brandId` specified is used throughout the envelope.\n* In cases where no brand is specified and the sender belongs to a Group; if there is only one brand associated with the Group, then that brand is used in the envelope. Otherwise, the account’s default signing brand is used.\n* For envelopes that do not meet any of the previous rules, the account&#39;s default signing brand is used in the envelope.\n\n### Important: The BCC Email address feature is designed to provide a copy of all email communications for external archiving purposes. DocuSign recommends that envelopes sent using the BCC for Email Archive feature, including the BCC Email Override option, include additional signer authentication options. To send a copy of the envelope to a recipient who does not need to sign, use a Carbon Copies or Certified Deliveries Recipient Type.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="envelopeDefinition">TBD Description</param> <param name="options">Options for modifying the behavior of the function.</param>
             <returns>6ApiResponse of EnvelopeSummary</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.CreateEnvelopeAsync(System.String,DocuSign.eSign.Model.EnvelopeDefinition,DocuSign.eSign.Api.EnvelopesApi.CreateEnvelopeOptions)">
             <summary>
             Creates an envelope. Creates an envelope. \n\nUsing this function you can:\n* Create an envelope and send it.\n* Create an envelope from an existing template and send it.\n\nIn either case, you can choose to save the envelope as a draft envelope instead of sending it by setting the `status` property in the request to `created` instead of `sent`.\n\n### Send an Envelope or Create a Draft Envelope\n\nThis is a multi-part/form request.\n\nEnvelope Event Notification: `eventNotification` is an optional property that specifies a set of envelope and recipient status codes, a URL, and some other options. When the envelope or recipient status changes to one of the specified status codes, DocuSign sends a message containing the updated status to the specified URL.\n\n### Note: DocuSign Connect must be enabled to use `eventNotification`, but Connect does not need to be configured for the account since the configuration is done for each envelope.\n\n### Send an Envelope from a Template\n\nWhen you create an envelope using a `templateId`, the `recipients` structure is used to assign recipients to template roles via the `roleName` property, override recipient settings that have been specified in the template and set values for tab fields that were defined in the template.\n\nWhen a template is added or applied to an envelope and the template has a locked email subject and message, that subject and message is used for the envelope and cannot be changed even if another locked template is subsequently added or applied to the envelope. If an email subject or message is entered before adding or applying a locked template, the email subject and message is overwritten with the email subject and message from the locked template.\n\n**Composite Templates**:\n\nYou can add Composite Templates structure to the  to create envelopes from a combination of DocuSign templates and PDF forms. The basic envelope remains the same, while the Composite Template adds new document and template overlays into the envelope. There can be any number of Composite Template structures in the envelope.\n\nEach Composite Template consists of server templates, inline templates, PDF Metadata templates, and documents.\n\n* Composite Template ID is an optional element used to identify the composite template. It is used as a reference when adding document object information. If used, the document content-disposition must include the `compositeTemplateId` to which the document should be added. If `compositeTemplateId` is not specified in the content-disposition, the document is applied based on the `documentId` only. If no document object is specified, the composite template inherits the first document.\n* Server Templates are server-side templates stored on the DocuSign server. If supplied they are overlaid into the envelope in the order of their Sequence value.\n* Inline Templates provide the container to pass inline XML properties. Inline templates allow you to add documents and, for PDF documents, transform the PDF fields into DocuSign tabs. If inline templates are supplied, they are overlaid into the envelope in the order of their Sequence value.\n* PDF Metadata Templates provide a container to embed design-time template information into a PDF document. DocuSign uses this information when processing the Envelope. This convention allows the document to carry the signing instructions with it, so that less information needs to be provided at run-time through an inline template or synchronized with an external structure like a server template. PDF Metadata templates are stored in the Metadata layer of a PDF in accordance with Acrobat&#39;s XMP specification. DocuSign will only find PDF Metadata templates inside documents passed in the Document object (see below). If supplied the PDF meta data template will be overlaid into the envelope in the order of their Sequence value.\n* Document objects are optional structures that provide a container to pass in a document or form. If this object is not passed, the composite template inherits the first document it finds from some other server template or inline template, starting with the lowest sequence value (discussed below).\n\nIf there are multiple composite templates, the document content-disposition can include the `compositeTemplateId` to which the document should be added. Using the `compositeTemplateId` sets which documents are associated with particular composite templates. An example of this usage is:\n\n```\n   --5cd3320a-5aac-4453-b3a4-cbb52a4cba5d\n\n   Content-Type: application/pdf\n\n   Content-Disposition: file; filename=\&quot;eula.pdf\&quot;; documentId=1; compositeTemplateId=\&quot;1\&quot;\n\n   Content-Transfer-Encoding: base64\n```\n\nAcrobat form objects are only extrapolated from the document object. DocuSign does not derive Acrobat form properties from server templates or inline templates. To instruct DocuSign to extrapolate objects from the Acrobat form, set `transformPdfFields` to \&quot;true\&quot; for the document. See the Transform PDF Fields section for more information about how fields are transformed into DocuSign tabs.\n\n*Sequence*\n\nEach type of template has a sequence property, which enables the templates to be over-laid in a particular order. This is significant because \&quot;last-out\&quot; wins in cases of the same property being specified in multiple places in the method schema.\n\n**Merge Recipient Roles for Draft Envelopes**\n\nWhen an envelope with multiple templates is sent, the recipients from the templates are merged according to template roles and empty recipients are removed. When creating an envelope with multiple templates, but not sending it (keeping it in a created state), duplicate recipients are not merged, which could cause leave duplicate recipients in the envelope.\n\nTo prevent this, the query parameter `merge_roles_on_draft` should be added when posting a draft envelope (status=created) with multiple templates. Doing this will merge template roles and remove empty recipients.\n\n### Note: DocuSign recommends that the merge roles query parameter be used anytime you are creating an envelope with multiple templates and keeping it in draft (created) status.\n\n**Template Email Subject Merge Fields**\n\nThis provides the ability to insert recipient name and email address merge fields into the email subject line when creating or sending from a template.\n\nThe merge fields, based on the recipient’s `roleName`, are added to the `emailSubject` when the template is created or when the template is used to create an envelope. After a template sender adds the name and email information for the recipient and sends the envelope, the recipient information is automatically merged into the appropriate fields in the email subject line.\n\nBoth the sender and the recipients will see the information in the email subject line for any emails associated with the template. This provides an easy way for senders to organize their envelope emails without having to open an envelope to check the recipient.\n\nIf merging the recipient information into the subject line causes the subject line to exceed 100 characters, then any characters over the 100 character limit are not included in the subject line. For cases where the recipient name or email is expected to be long, you should consider placing the merge field at the start of the email subject.\n\n* To add a recipient’s name in the subject line add the following text in the `emailSubject` when creating the template or when sending an envelope from a template:\n\n   [[&lt;roleName&gt;_UserName]]\n\n   Example:\n\n   `\&quot;emailSubject\&quot;:\&quot;[[Signer 1_UserName]], Please sign this NDA\&quot;,`\n\n* To add a recipient’s email address in the subject line add the following text in the emailSubject when creating the template or when sending an envelope from a template:\n\n   [[&lt;roleName&gt;_Email]]\n\n   Example:\n\n   `\&quot;emailSubject\&quot;:\&quot;[[Signer 1_Email]], Please sign this NDA\&quot;,`\n\nIn both cases the &lt;roleName&gt; is the recipient’s `roleName` in the template.\n\nFor cases where another recipient (such as an Agent, Editor, or Intermediary recipient) is entering the name and email information for the recipient included in the email subject, then [[&lt;roleName&gt;_UserName]] or [[&lt;roleName&gt;_Email]] is shown in the email subject.\n\n*Rules for determining the `brandId` used in an envelope*\n\nThe following rules are used to determine the `brandId` used in an envelope:\n\n* If a `brandId` is specified in the envelope/template and that brandId is available to the account, that brand is used in the envelope.\n* If more than one template is used in an envelope and more than one `brandId` is specified, the first `brandId` specified is used throughout the envelope.\n* In cases where no brand is specified and the sender belongs to a Group; if there is only one brand associated with the Group, then that brand is used in the envelope. Otherwise, the account’s default signing brand is used.\n* For envelopes that do not meet any of the previous rules, the account&#39;s default signing brand is used in the envelope.\n\n### Important: The BCC Email address feature is designed to provide a copy of all email communications for external archiving purposes. DocuSign recommends that envelopes sent using the BCC for Email Archive feature, including the BCC Email Override option, include additional signer authentication options. To send a copy of the envelope to a recipient who does not need to sign, use a Carbon Copies or Certified Deliveries Recipient Type.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="envelopeDefinition">TBD Description</param> <param name="options">Options for modifying the behavior of the function.</param>
             <returns>7Task of EnvelopeSummary</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.CreateEnvelopeAsyncWithHttpInfo(System.String,DocuSign.eSign.Model.EnvelopeDefinition,DocuSign.eSign.Api.EnvelopesApi.CreateEnvelopeOptions)">
             <summary>
             Creates an envelope. Creates an envelope. \n\nUsing this function you can:\n* Create an envelope and send it.\n* Create an envelope from an existing template and send it.\n\nIn either case, you can choose to save the envelope as a draft envelope instead of sending it by setting the `status` property in the request to `created` instead of `sent`.\n\n### Send an Envelope or Create a Draft Envelope\n\nThis is a multi-part/form request.\n\nEnvelope Event Notification: `eventNotification` is an optional property that specifies a set of envelope and recipient status codes, a URL, and some other options. When the envelope or recipient status changes to one of the specified status codes, DocuSign sends a message containing the updated status to the specified URL.\n\n### Note: DocuSign Connect must be enabled to use `eventNotification`, but Connect does not need to be configured for the account since the configuration is done for each envelope.\n\n### Send an Envelope from a Template\n\nWhen you create an envelope using a `templateId`, the `recipients` structure is used to assign recipients to template roles via the `roleName` property, override recipient settings that have been specified in the template and set values for tab fields that were defined in the template.\n\nWhen a template is added or applied to an envelope and the template has a locked email subject and message, that subject and message is used for the envelope and cannot be changed even if another locked template is subsequently added or applied to the envelope. If an email subject or message is entered before adding or applying a locked template, the email subject and message is overwritten with the email subject and message from the locked template.\n\n**Composite Templates**:\n\nYou can add Composite Templates structure to the  to create envelopes from a combination of DocuSign templates and PDF forms. The basic envelope remains the same, while the Composite Template adds new document and template overlays into the envelope. There can be any number of Composite Template structures in the envelope.\n\nEach Composite Template consists of server templates, inline templates, PDF Metadata templates, and documents.\n\n* Composite Template ID is an optional element used to identify the composite template. It is used as a reference when adding document object information. If used, the document content-disposition must include the `compositeTemplateId` to which the document should be added. If `compositeTemplateId` is not specified in the content-disposition, the document is applied based on the `documentId` only. If no document object is specified, the composite template inherits the first document.\n* Server Templates are server-side templates stored on the DocuSign server. If supplied they are overlaid into the envelope in the order of their Sequence value.\n* Inline Templates provide the container to pass inline XML properties. Inline templates allow you to add documents and, for PDF documents, transform the PDF fields into DocuSign tabs. If inline templates are supplied, they are overlaid into the envelope in the order of their Sequence value.\n* PDF Metadata Templates provide a container to embed design-time template information into a PDF document. DocuSign uses this information when processing the Envelope. This convention allows the document to carry the signing instructions with it, so that less information needs to be provided at run-time through an inline template or synchronized with an external structure like a server template. PDF Metadata templates are stored in the Metadata layer of a PDF in accordance with Acrobat&#39;s XMP specification. DocuSign will only find PDF Metadata templates inside documents passed in the Document object (see below). If supplied the PDF meta data template will be overlaid into the envelope in the order of their Sequence value.\n* Document objects are optional structures that provide a container to pass in a document or form. If this object is not passed, the composite template inherits the first document it finds from some other server template or inline template, starting with the lowest sequence value (discussed below).\n\nIf there are multiple composite templates, the document content-disposition can include the `compositeTemplateId` to which the document should be added. Using the `compositeTemplateId` sets which documents are associated with particular composite templates. An example of this usage is:\n\n```\n   --5cd3320a-5aac-4453-b3a4-cbb52a4cba5d\n\n   Content-Type: application/pdf\n\n   Content-Disposition: file; filename=\&quot;eula.pdf\&quot;; documentId=1; compositeTemplateId=\&quot;1\&quot;\n\n   Content-Transfer-Encoding: base64\n```\n\nAcrobat form objects are only extrapolated from the document object. DocuSign does not derive Acrobat form properties from server templates or inline templates. To instruct DocuSign to extrapolate objects from the Acrobat form, set `transformPdfFields` to \&quot;true\&quot; for the document. See the Transform PDF Fields section for more information about how fields are transformed into DocuSign tabs.\n\n*Sequence*\n\nEach type of template has a sequence property, which enables the templates to be over-laid in a particular order. This is significant because \&quot;last-out\&quot; wins in cases of the same property being specified in multiple places in the method schema.\n\n**Merge Recipient Roles for Draft Envelopes**\n\nWhen an envelope with multiple templates is sent, the recipients from the templates are merged according to template roles and empty recipients are removed. When creating an envelope with multiple templates, but not sending it (keeping it in a created state), duplicate recipients are not merged, which could cause leave duplicate recipients in the envelope.\n\nTo prevent this, the query parameter `merge_roles_on_draft` should be added when posting a draft envelope (status=created) with multiple templates. Doing this will merge template roles and remove empty recipients.\n\n### Note: DocuSign recommends that the merge roles query parameter be used anytime you are creating an envelope with multiple templates and keeping it in draft (created) status.\n\n**Template Email Subject Merge Fields**\n\nThis provides the ability to insert recipient name and email address merge fields into the email subject line when creating or sending from a template.\n\nThe merge fields, based on the recipient’s `roleName`, are added to the `emailSubject` when the template is created or when the template is used to create an envelope. After a template sender adds the name and email information for the recipient and sends the envelope, the recipient information is automatically merged into the appropriate fields in the email subject line.\n\nBoth the sender and the recipients will see the information in the email subject line for any emails associated with the template. This provides an easy way for senders to organize their envelope emails without having to open an envelope to check the recipient.\n\nIf merging the recipient information into the subject line causes the subject line to exceed 100 characters, then any characters over the 100 character limit are not included in the subject line. For cases where the recipient name or email is expected to be long, you should consider placing the merge field at the start of the email subject.\n\n* To add a recipient’s name in the subject line add the following text in the `emailSubject` when creating the template or when sending an envelope from a template:\n\n   [[&lt;roleName&gt;_UserName]]\n\n   Example:\n\n   `\&quot;emailSubject\&quot;:\&quot;[[Signer 1_UserName]], Please sign this NDA\&quot;,`\n\n* To add a recipient’s email address in the subject line add the following text in the emailSubject when creating the template or when sending an envelope from a template:\n\n   [[&lt;roleName&gt;_Email]]\n\n   Example:\n\n   `\&quot;emailSubject\&quot;:\&quot;[[Signer 1_Email]], Please sign this NDA\&quot;,`\n\nIn both cases the &lt;roleName&gt; is the recipient’s `roleName` in the template.\n\nFor cases where another recipient (such as an Agent, Editor, or Intermediary recipient) is entering the name and email information for the recipient included in the email subject, then [[&lt;roleName&gt;_UserName]] or [[&lt;roleName&gt;_Email]] is shown in the email subject.\n\n*Rules for determining the `brandId` used in an envelope*\n\nThe following rules are used to determine the `brandId` used in an envelope:\n\n* If a `brandId` is specified in the envelope/template and that brandId is available to the account, that brand is used in the envelope.\n* If more than one template is used in an envelope and more than one `brandId` is specified, the first `brandId` specified is used throughout the envelope.\n* In cases where no brand is specified and the sender belongs to a Group; if there is only one brand associated with the Group, then that brand is used in the envelope. Otherwise, the account’s default signing brand is used.\n* For envelopes that do not meet any of the previous rules, the account&#39;s default signing brand is used in the envelope.\n\n### Important: The BCC Email address feature is designed to provide a copy of all email communications for external archiving purposes. DocuSign recommends that envelopes sent using the BCC for Email Archive feature, including the BCC Email Override option, include additional signer authentication options. To send a copy of the envelope to a recipient who does not need to sign, use a Carbon Copies or Certified Deliveries Recipient Type.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="envelopeDefinition">TBD Description</param> <param name="options">Options for modifying the behavior of the function.</param>
             <returns>8Task of ApiResponse (EnvelopeSummary)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.ListStatus(System.String,DocuSign.eSign.Model.EnvelopeIdsRequest)">
             <summary>
             Gets the envelope status for the specified envelopes. Retrieves the envelope status for the specified envelopes.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="envelopeIdsRequest">TBD Description</param>
             <returns>5EnvelopesInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.ListStatusWithHttpInfo(System.String,DocuSign.eSign.Model.EnvelopeIdsRequest)">
             <summary>
             Gets the envelope status for the specified envelopes. Retrieves the envelope status for the specified envelopes.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="envelopeIdsRequest">TBD Description</param>
             <returns>6ApiResponse of EnvelopesInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.ListStatusAsync(System.String,DocuSign.eSign.Model.EnvelopeIdsRequest)">
             <summary>
             Gets the envelope status for the specified envelopes. Retrieves the envelope status for the specified envelopes.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="envelopeIdsRequest">TBD Description</param>
             <returns>7Task of EnvelopesInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.ListStatusAsyncWithHttpInfo(System.String,DocuSign.eSign.Model.EnvelopeIdsRequest)">
             <summary>
             Gets the envelope status for the specified envelopes. Retrieves the envelope status for the specified envelopes.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="envelopeIdsRequest">TBD Description</param>
             <returns>8Task of ApiResponse (EnvelopesInformation)</returns>
        </member>
        <member name="T:DocuSign.eSign.Api.EnvelopesApi.GetEnvelopeOptions">
            <summary>
            Gets the status of a envelope. Retrieves the overall status for the specified envelope.
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Api.EnvelopesApi.GetEnvelopeOptions.include">
            
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.GetEnvelope(System.String,System.String,DocuSign.eSign.Api.EnvelopesApi.GetEnvelopeOptions)">
             <summary>
             Gets the status of a envelope. Retrieves the overall status for the specified envelope.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="options">Options for modifying the behavior of the function.</param>
             <returns>5Envelope</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.GetEnvelopeWithHttpInfo(System.String,System.String,DocuSign.eSign.Api.EnvelopesApi.GetEnvelopeOptions)">
             <summary>
             Gets the status of a envelope. Retrieves the overall status for the specified envelope.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="options">Options for modifying the behavior of the function.</param>
             <returns>6ApiResponse of Envelope</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.GetEnvelopeAsync(System.String,System.String,DocuSign.eSign.Api.EnvelopesApi.GetEnvelopeOptions)">
             <summary>
             Gets the status of a envelope. Retrieves the overall status for the specified envelope.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="options">Options for modifying the behavior of the function.</param>
             <returns>7Task of Envelope</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.GetEnvelopeAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Api.EnvelopesApi.GetEnvelopeOptions)">
             <summary>
             Gets the status of a envelope. Retrieves the overall status for the specified envelope.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="options">Options for modifying the behavior of the function.</param>
             <returns>8Task of ApiResponse (Envelope)</returns>
        </member>
        <member name="T:DocuSign.eSign.Api.EnvelopesApi.UpdateOptions">
            <summary>
            Send Draft Envelope/Void Envelope/Move/Purge Envelope/Modify draft The Put Envelopes endpoint provides the following functionality:\n\n* Sends the specified single draft envelope.\nAdd {\&quot;status\&quot;:\&quot;sent\&quot;} to the request body to send the envelope.\n\n* Voids the specified in-process envelope.\nAdd {\&quot;status\&quot;:\&quot;voided\&quot;, \&quot;voidedReason\&quot;:\&quot;The reason for voiding the envelope\&quot;} to the request body to void the envelope.\n\n* Replaces the current email subject and message for a draft envelope.\nAdd {\&quot;emailSubject\&quot;:\&quot;subject\&quot;,  \&quot;emailBlurb\&quot;:\&quot;message\&quot;}  to the request body to modify the subject and message.\n\n* Place the envelope documents and envelope metadata in a purge queue so that this information is removed from the DocuSign system.\nAdd {\&quot;purgeState\&quot;:\&quot;purge type\&quot;} to the request body.\n\n*Additional information on purging documents*\n\nThe purge request can only be used for completed envelopes that are not marked as the authoritative copy. The requesting user must have permission to purge documents and must be the sender (the requesting user can act as the sender using Send On Behalf Of).\n\n### Note: If you have set the Document Retention policy on your account, envelope documents are automatically placed in the purge queue and the warning emails are sent at the end of the retention period. \n### Note: You can set the Document Retention policy in the Classic DocuSign Experience by specifying the number of days to retain documents. \n### Note: Setting a Document Retention policy is the same as setting a schedule for purging documents.\n\nWhen the purge request is initiated the envelope documents, or documents and envelope metadata, are placed in a purge queue for deletion in 14 days. A warning email notification is sent to the sender and recipients associated with the envelope, notifying them that the envelope documents will be deleted in 14 days and providing a link to the documents. A second email is sent 7 days later with the same message. At the end of the 14-day period, the envelope documents are deleted from the system.\n\nIf `purgeState=\&quot;documents_queued\&quot;` is used in the request, then only the documents are deleted and any corresponding attachments and tabs remain in the DocuSign system. If `purgeState= \&quot;documents_and_metadata_queued\&quot;` is used in the request, then the documents, attachments, and tabs are deleted.
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Api.EnvelopesApi.UpdateOptions.resendEnvelope">
            When set to **true**, sends the specified envelope again. 
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.Update(System.String,System.String,DocuSign.eSign.Model.Envelope,DocuSign.eSign.Api.EnvelopesApi.UpdateOptions)">
             <summary>
             Send Draft Envelope/Void Envelope/Move/Purge Envelope/Modify draft The Put Envelopes endpoint provides the following functionality:\n\n* Sends the specified single draft envelope.\nAdd {\&quot;status\&quot;:\&quot;sent\&quot;} to the request body to send the envelope.\n\n* Voids the specified in-process envelope.\nAdd {\&quot;status\&quot;:\&quot;voided\&quot;, \&quot;voidedReason\&quot;:\&quot;The reason for voiding the envelope\&quot;} to the request body to void the envelope.\n\n* Replaces the current email subject and message for a draft envelope.\nAdd {\&quot;emailSubject\&quot;:\&quot;subject\&quot;,  \&quot;emailBlurb\&quot;:\&quot;message\&quot;}  to the request body to modify the subject and message.\n\n* Place the envelope documents and envelope metadata in a purge queue so that this information is removed from the DocuSign system.\nAdd {\&quot;purgeState\&quot;:\&quot;purge type\&quot;} to the request body.\n\n*Additional information on purging documents*\n\nThe purge request can only be used for completed envelopes that are not marked as the authoritative copy. The requesting user must have permission to purge documents and must be the sender (the requesting user can act as the sender using Send On Behalf Of).\n\n### Note: If you have set the Document Retention policy on your account, envelope documents are automatically placed in the purge queue and the warning emails are sent at the end of the retention period. \n### Note: You can set the Document Retention policy in the Classic DocuSign Experience by specifying the number of days to retain documents. \n### Note: Setting a Document Retention policy is the same as setting a schedule for purging documents.\n\nWhen the purge request is initiated the envelope documents, or documents and envelope metadata, are placed in a purge queue for deletion in 14 days. A warning email notification is sent to the sender and recipients associated with the envelope, notifying them that the envelope documents will be deleted in 14 days and providing a link to the documents. A second email is sent 7 days later with the same message. At the end of the 14-day period, the envelope documents are deleted from the system.\n\nIf `purgeState=\&quot;documents_queued\&quot;` is used in the request, then only the documents are deleted and any corresponding attachments and tabs remain in the DocuSign system. If `purgeState= \&quot;documents_and_metadata_queued\&quot;` is used in the request, then the documents, attachments, and tabs are deleted.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="envelope">TBD Description</param> <param name="options">Options for modifying the behavior of the function.</param>
             <returns>5EnvelopeUpdateSummary</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.UpdateWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.Envelope,DocuSign.eSign.Api.EnvelopesApi.UpdateOptions)">
             <summary>
             Send Draft Envelope/Void Envelope/Move/Purge Envelope/Modify draft The Put Envelopes endpoint provides the following functionality:\n\n* Sends the specified single draft envelope.\nAdd {\&quot;status\&quot;:\&quot;sent\&quot;} to the request body to send the envelope.\n\n* Voids the specified in-process envelope.\nAdd {\&quot;status\&quot;:\&quot;voided\&quot;, \&quot;voidedReason\&quot;:\&quot;The reason for voiding the envelope\&quot;} to the request body to void the envelope.\n\n* Replaces the current email subject and message for a draft envelope.\nAdd {\&quot;emailSubject\&quot;:\&quot;subject\&quot;,  \&quot;emailBlurb\&quot;:\&quot;message\&quot;}  to the request body to modify the subject and message.\n\n* Place the envelope documents and envelope metadata in a purge queue so that this information is removed from the DocuSign system.\nAdd {\&quot;purgeState\&quot;:\&quot;purge type\&quot;} to the request body.\n\n*Additional information on purging documents*\n\nThe purge request can only be used for completed envelopes that are not marked as the authoritative copy. The requesting user must have permission to purge documents and must be the sender (the requesting user can act as the sender using Send On Behalf Of).\n\n### Note: If you have set the Document Retention policy on your account, envelope documents are automatically placed in the purge queue and the warning emails are sent at the end of the retention period. \n### Note: You can set the Document Retention policy in the Classic DocuSign Experience by specifying the number of days to retain documents. \n### Note: Setting a Document Retention policy is the same as setting a schedule for purging documents.\n\nWhen the purge request is initiated the envelope documents, or documents and envelope metadata, are placed in a purge queue for deletion in 14 days. A warning email notification is sent to the sender and recipients associated with the envelope, notifying them that the envelope documents will be deleted in 14 days and providing a link to the documents. A second email is sent 7 days later with the same message. At the end of the 14-day period, the envelope documents are deleted from the system.\n\nIf `purgeState=\&quot;documents_queued\&quot;` is used in the request, then only the documents are deleted and any corresponding attachments and tabs remain in the DocuSign system. If `purgeState= \&quot;documents_and_metadata_queued\&quot;` is used in the request, then the documents, attachments, and tabs are deleted.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="envelope">TBD Description</param> <param name="options">Options for modifying the behavior of the function.</param>
             <returns>6ApiResponse of EnvelopeUpdateSummary</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.UpdateAsync(System.String,System.String,DocuSign.eSign.Model.Envelope,DocuSign.eSign.Api.EnvelopesApi.UpdateOptions)">
             <summary>
             Send Draft Envelope/Void Envelope/Move/Purge Envelope/Modify draft The Put Envelopes endpoint provides the following functionality:\n\n* Sends the specified single draft envelope.\nAdd {\&quot;status\&quot;:\&quot;sent\&quot;} to the request body to send the envelope.\n\n* Voids the specified in-process envelope.\nAdd {\&quot;status\&quot;:\&quot;voided\&quot;, \&quot;voidedReason\&quot;:\&quot;The reason for voiding the envelope\&quot;} to the request body to void the envelope.\n\n* Replaces the current email subject and message for a draft envelope.\nAdd {\&quot;emailSubject\&quot;:\&quot;subject\&quot;,  \&quot;emailBlurb\&quot;:\&quot;message\&quot;}  to the request body to modify the subject and message.\n\n* Place the envelope documents and envelope metadata in a purge queue so that this information is removed from the DocuSign system.\nAdd {\&quot;purgeState\&quot;:\&quot;purge type\&quot;} to the request body.\n\n*Additional information on purging documents*\n\nThe purge request can only be used for completed envelopes that are not marked as the authoritative copy. The requesting user must have permission to purge documents and must be the sender (the requesting user can act as the sender using Send On Behalf Of).\n\n### Note: If you have set the Document Retention policy on your account, envelope documents are automatically placed in the purge queue and the warning emails are sent at the end of the retention period. \n### Note: You can set the Document Retention policy in the Classic DocuSign Experience by specifying the number of days to retain documents. \n### Note: Setting a Document Retention policy is the same as setting a schedule for purging documents.\n\nWhen the purge request is initiated the envelope documents, or documents and envelope metadata, are placed in a purge queue for deletion in 14 days. A warning email notification is sent to the sender and recipients associated with the envelope, notifying them that the envelope documents will be deleted in 14 days and providing a link to the documents. A second email is sent 7 days later with the same message. At the end of the 14-day period, the envelope documents are deleted from the system.\n\nIf `purgeState=\&quot;documents_queued\&quot;` is used in the request, then only the documents are deleted and any corresponding attachments and tabs remain in the DocuSign system. If `purgeState= \&quot;documents_and_metadata_queued\&quot;` is used in the request, then the documents, attachments, and tabs are deleted.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="envelope">TBD Description</param> <param name="options">Options for modifying the behavior of the function.</param>
             <returns>7Task of EnvelopeUpdateSummary</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.UpdateAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.Envelope,DocuSign.eSign.Api.EnvelopesApi.UpdateOptions)">
             <summary>
             Send Draft Envelope/Void Envelope/Move/Purge Envelope/Modify draft The Put Envelopes endpoint provides the following functionality:\n\n* Sends the specified single draft envelope.\nAdd {\&quot;status\&quot;:\&quot;sent\&quot;} to the request body to send the envelope.\n\n* Voids the specified in-process envelope.\nAdd {\&quot;status\&quot;:\&quot;voided\&quot;, \&quot;voidedReason\&quot;:\&quot;The reason for voiding the envelope\&quot;} to the request body to void the envelope.\n\n* Replaces the current email subject and message for a draft envelope.\nAdd {\&quot;emailSubject\&quot;:\&quot;subject\&quot;,  \&quot;emailBlurb\&quot;:\&quot;message\&quot;}  to the request body to modify the subject and message.\n\n* Place the envelope documents and envelope metadata in a purge queue so that this information is removed from the DocuSign system.\nAdd {\&quot;purgeState\&quot;:\&quot;purge type\&quot;} to the request body.\n\n*Additional information on purging documents*\n\nThe purge request can only be used for completed envelopes that are not marked as the authoritative copy. The requesting user must have permission to purge documents and must be the sender (the requesting user can act as the sender using Send On Behalf Of).\n\n### Note: If you have set the Document Retention policy on your account, envelope documents are automatically placed in the purge queue and the warning emails are sent at the end of the retention period. \n### Note: You can set the Document Retention policy in the Classic DocuSign Experience by specifying the number of days to retain documents. \n### Note: Setting a Document Retention policy is the same as setting a schedule for purging documents.\n\nWhen the purge request is initiated the envelope documents, or documents and envelope metadata, are placed in a purge queue for deletion in 14 days. A warning email notification is sent to the sender and recipients associated with the envelope, notifying them that the envelope documents will be deleted in 14 days and providing a link to the documents. A second email is sent 7 days later with the same message. At the end of the 14-day period, the envelope documents are deleted from the system.\n\nIf `purgeState=\&quot;documents_queued\&quot;` is used in the request, then only the documents are deleted and any corresponding attachments and tabs remain in the DocuSign system. If `purgeState= \&quot;documents_and_metadata_queued\&quot;` is used in the request, then the documents, attachments, and tabs are deleted.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="envelope">TBD Description</param> <param name="options">Options for modifying the behavior of the function.</param>
             <returns>8Task of ApiResponse (EnvelopeUpdateSummary)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.ListAuditEvents(System.String,System.String)">
             <summary>
             Gets the envelope audit events for an envelope. Gets the envelope audit events for the specified envelope.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>5EnvelopeAuditEventResponse</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.ListAuditEventsWithHttpInfo(System.String,System.String)">
             <summary>
             Gets the envelope audit events for an envelope. Gets the envelope audit events for the specified envelope.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>6ApiResponse of EnvelopeAuditEventResponse</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.ListAuditEventsAsync(System.String,System.String)">
             <summary>
             Gets the envelope audit events for an envelope. Gets the envelope audit events for the specified envelope.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>7Task of EnvelopeAuditEventResponse</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.ListAuditEventsAsyncWithHttpInfo(System.String,System.String)">
             <summary>
             Gets the envelope audit events for an envelope. Gets the envelope audit events for the specified envelope.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>8Task of ApiResponse (EnvelopeAuditEventResponse)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.ListCustomFields(System.String,System.String)">
             <summary>
             Gets the custom field information for the specified envelope. Retrieves the custom field information for the specified envelope. You can use these fields in the envelopes for your account to record information about the envelope, help search for envelopes, and track information. The envelope custom fields are shown in the Envelope Settings section when a user is creating an envelope in the DocuSign member console. The envelope custom fields are not seen by the envelope recipients.\n\nThere are two types of envelope custom fields, text, and list. A text custom field lets the sender enter the value for the field. With a list custom field, the sender selects the value of the field from a pre-made list.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>5CustomFieldsEnvelope</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.ListCustomFieldsWithHttpInfo(System.String,System.String)">
             <summary>
             Gets the custom field information for the specified envelope. Retrieves the custom field information for the specified envelope. You can use these fields in the envelopes for your account to record information about the envelope, help search for envelopes, and track information. The envelope custom fields are shown in the Envelope Settings section when a user is creating an envelope in the DocuSign member console. The envelope custom fields are not seen by the envelope recipients.\n\nThere are two types of envelope custom fields, text, and list. A text custom field lets the sender enter the value for the field. With a list custom field, the sender selects the value of the field from a pre-made list.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>6ApiResponse of CustomFieldsEnvelope</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.ListCustomFieldsAsync(System.String,System.String)">
             <summary>
             Gets the custom field information for the specified envelope. Retrieves the custom field information for the specified envelope. You can use these fields in the envelopes for your account to record information about the envelope, help search for envelopes, and track information. The envelope custom fields are shown in the Envelope Settings section when a user is creating an envelope in the DocuSign member console. The envelope custom fields are not seen by the envelope recipients.\n\nThere are two types of envelope custom fields, text, and list. A text custom field lets the sender enter the value for the field. With a list custom field, the sender selects the value of the field from a pre-made list.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>7Task of CustomFieldsEnvelope</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.ListCustomFieldsAsyncWithHttpInfo(System.String,System.String)">
             <summary>
             Gets the custom field information for the specified envelope. Retrieves the custom field information for the specified envelope. You can use these fields in the envelopes for your account to record information about the envelope, help search for envelopes, and track information. The envelope custom fields are shown in the Envelope Settings section when a user is creating an envelope in the DocuSign member console. The envelope custom fields are not seen by the envelope recipients.\n\nThere are two types of envelope custom fields, text, and list. A text custom field lets the sender enter the value for the field. With a list custom field, the sender selects the value of the field from a pre-made list.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>8Task of ApiResponse (CustomFieldsEnvelope)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.UpdateCustomFields(System.String,System.String,DocuSign.eSign.Model.CustomFields)">
             <summary>
             Updates envelope custom fields in an envelope. Updates the envelope custom fields in draft and in-process envelopes.\n\nEach custom field used in an envelope must have a unique name.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="customFields">TBD Description</param>
             <returns>5CustomFields</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.UpdateCustomFieldsWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.CustomFields)">
             <summary>
             Updates envelope custom fields in an envelope. Updates the envelope custom fields in draft and in-process envelopes.\n\nEach custom field used in an envelope must have a unique name.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="customFields">TBD Description</param>
             <returns>6ApiResponse of CustomFields</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.UpdateCustomFieldsAsync(System.String,System.String,DocuSign.eSign.Model.CustomFields)">
             <summary>
             Updates envelope custom fields in an envelope. Updates the envelope custom fields in draft and in-process envelopes.\n\nEach custom field used in an envelope must have a unique name.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="customFields">TBD Description</param>
             <returns>7Task of CustomFields</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.UpdateCustomFieldsAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.CustomFields)">
             <summary>
             Updates envelope custom fields in an envelope. Updates the envelope custom fields in draft and in-process envelopes.\n\nEach custom field used in an envelope must have a unique name.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="customFields">TBD Description</param>
             <returns>8Task of ApiResponse (CustomFields)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.CreateCustomFields(System.String,System.String,DocuSign.eSign.Model.CustomFields)">
             <summary>
             Updates envelope custom fields for an envelope. Updates the envelope custom fields for draft and in-process envelopes.\n\nEach custom field used in an envelope must have a unique name.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="customFields">TBD Description</param>
             <returns>5CustomFields</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.CreateCustomFieldsWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.CustomFields)">
             <summary>
             Updates envelope custom fields for an envelope. Updates the envelope custom fields for draft and in-process envelopes.\n\nEach custom field used in an envelope must have a unique name.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="customFields">TBD Description</param>
             <returns>6ApiResponse of CustomFields</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.CreateCustomFieldsAsync(System.String,System.String,DocuSign.eSign.Model.CustomFields)">
             <summary>
             Updates envelope custom fields for an envelope. Updates the envelope custom fields for draft and in-process envelopes.\n\nEach custom field used in an envelope must have a unique name.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="customFields">TBD Description</param>
             <returns>7Task of CustomFields</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.CreateCustomFieldsAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.CustomFields)">
             <summary>
             Updates envelope custom fields for an envelope. Updates the envelope custom fields for draft and in-process envelopes.\n\nEach custom field used in an envelope must have a unique name.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="customFields">TBD Description</param>
             <returns>8Task of ApiResponse (CustomFields)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.DeleteCustomFields(System.String,System.String,DocuSign.eSign.Model.CustomFields)">
             <summary>
             Deletes envelope custom fields for draft and in-process envelopes. Deletes envelope custom fields for draft and in-process envelopes.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="customFields">TBD Description</param>
             <returns>5CustomFields</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.DeleteCustomFieldsWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.CustomFields)">
             <summary>
             Deletes envelope custom fields for draft and in-process envelopes. Deletes envelope custom fields for draft and in-process envelopes.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="customFields">TBD Description</param>
             <returns>6ApiResponse of CustomFields</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.DeleteCustomFieldsAsync(System.String,System.String,DocuSign.eSign.Model.CustomFields)">
             <summary>
             Deletes envelope custom fields for draft and in-process envelopes. Deletes envelope custom fields for draft and in-process envelopes.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="customFields">TBD Description</param>
             <returns>7Task of CustomFields</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.DeleteCustomFieldsAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.CustomFields)">
             <summary>
             Deletes envelope custom fields for draft and in-process envelopes. Deletes envelope custom fields for draft and in-process envelopes.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="customFields">TBD Description</param>
             <returns>8Task of ApiResponse (CustomFields)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.ListDocuments(System.String,System.String)">
             <summary>
             Gets a list of envelope documents. Retrieves a list of documents associated with the specified envelope.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>5EnvelopeDocumentsResult</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.ListDocumentsWithHttpInfo(System.String,System.String)">
             <summary>
             Gets a list of envelope documents. Retrieves a list of documents associated with the specified envelope.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>6ApiResponse of EnvelopeDocumentsResult</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.ListDocumentsAsync(System.String,System.String)">
             <summary>
             Gets a list of envelope documents. Retrieves a list of documents associated with the specified envelope.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>7Task of EnvelopeDocumentsResult</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.ListDocumentsAsyncWithHttpInfo(System.String,System.String)">
             <summary>
             Gets a list of envelope documents. Retrieves a list of documents associated with the specified envelope.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>8Task of ApiResponse (EnvelopeDocumentsResult)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.UpdateDocuments(System.String,System.String,DocuSign.eSign.Model.EnvelopeDefinition)">
             <summary>
             Adds one or more documents to an existing envelope document. Adds one or more documents to an existing envelope document.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="envelopeDefinition">TBD Description</param>
             <returns>5EnvelopeDocumentsResult</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.UpdateDocumentsWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.EnvelopeDefinition)">
             <summary>
             Adds one or more documents to an existing envelope document. Adds one or more documents to an existing envelope document.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="envelopeDefinition">TBD Description</param>
             <returns>6ApiResponse of EnvelopeDocumentsResult</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.UpdateDocumentsAsync(System.String,System.String,DocuSign.eSign.Model.EnvelopeDefinition)">
             <summary>
             Adds one or more documents to an existing envelope document. Adds one or more documents to an existing envelope document.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="envelopeDefinition">TBD Description</param>
             <returns>7Task of EnvelopeDocumentsResult</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.UpdateDocumentsAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.EnvelopeDefinition)">
             <summary>
             Adds one or more documents to an existing envelope document. Adds one or more documents to an existing envelope document.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="envelopeDefinition">TBD Description</param>
             <returns>8Task of ApiResponse (EnvelopeDocumentsResult)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.DeleteDocuments(System.String,System.String,DocuSign.eSign.Model.EnvelopeDefinition)">
             <summary>
             Deletes documents from a draft envelope. Deletes one or more documents from an existing draft envelope.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="envelopeDefinition">TBD Description</param>
             <returns>5EnvelopeDocumentsResult</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.DeleteDocumentsWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.EnvelopeDefinition)">
             <summary>
             Deletes documents from a draft envelope. Deletes one or more documents from an existing draft envelope.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="envelopeDefinition">TBD Description</param>
             <returns>6ApiResponse of EnvelopeDocumentsResult</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.DeleteDocumentsAsync(System.String,System.String,DocuSign.eSign.Model.EnvelopeDefinition)">
             <summary>
             Deletes documents from a draft envelope. Deletes one or more documents from an existing draft envelope.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="envelopeDefinition">TBD Description</param>
             <returns>7Task of EnvelopeDocumentsResult</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.DeleteDocumentsAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.EnvelopeDefinition)">
             <summary>
             Deletes documents from a draft envelope. Deletes one or more documents from an existing draft envelope.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="envelopeDefinition">TBD Description</param>
             <returns>8Task of ApiResponse (EnvelopeDocumentsResult)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.GetDocument(System.String,System.String,System.String)">
             <summary>
             Gets a document from an envelope. Retrieves the specified document from the envelope. If the account has the Highlight Data Changes feature enabled, there is an option to request that any changes in the envelope be highlighted.\n\nYou can also use this method to retrieve a PDF containing the combined content of all documents and the certificate. If the account has the Highlight Data Changes feature enabled, there is an option to request that any changes in the envelope be highlighted. \n\nTo retrieve the combined content replace the `{documentId}` parameter in the endpoint with `combined`.\n/accounts/{accountId}/envelopes/{envelopeId}/documents/combined
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param>
             <returns>5Stream</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.GetDocumentWithHttpInfo(System.String,System.String,System.String)">
             <summary>
             Gets a document from an envelope. Retrieves the specified document from the envelope. If the account has the Highlight Data Changes feature enabled, there is an option to request that any changes in the envelope be highlighted.\n\nYou can also use this method to retrieve a PDF containing the combined content of all documents and the certificate. If the account has the Highlight Data Changes feature enabled, there is an option to request that any changes in the envelope be highlighted. \n\nTo retrieve the combined content replace the `{documentId}` parameter in the endpoint with `combined`.\n/accounts/{accountId}/envelopes/{envelopeId}/documents/combined
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param>
             <returns>6ApiResponse of Stream</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.GetDocumentAsync(System.String,System.String,System.String)">
             <summary>
             Gets a document from an envelope. Retrieves the specified document from the envelope. If the account has the Highlight Data Changes feature enabled, there is an option to request that any changes in the envelope be highlighted.\n\nYou can also use this method to retrieve a PDF containing the combined content of all documents and the certificate. If the account has the Highlight Data Changes feature enabled, there is an option to request that any changes in the envelope be highlighted. \n\nTo retrieve the combined content replace the `{documentId}` parameter in the endpoint with `combined`.\n/accounts/{accountId}/envelopes/{envelopeId}/documents/combined
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param>
             <returns>7Task of Stream</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.GetDocumentAsyncWithHttpInfo(System.String,System.String,System.String)">
             <summary>
             Gets a document from an envelope. Retrieves the specified document from the envelope. If the account has the Highlight Data Changes feature enabled, there is an option to request that any changes in the envelope be highlighted.\n\nYou can also use this method to retrieve a PDF containing the combined content of all documents and the certificate. If the account has the Highlight Data Changes feature enabled, there is an option to request that any changes in the envelope be highlighted. \n\nTo retrieve the combined content replace the `{documentId}` parameter in the endpoint with `combined`.\n/accounts/{accountId}/envelopes/{envelopeId}/documents/combined
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param>
             <returns>8Task of ApiResponse (Stream)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.ListDocumentFields(System.String,System.String,System.String)">
             <summary>
             Gets the custom document fields from an  existing envelope document. Retrieves the custom document field information from an existing envelope document.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param>
             <returns>5DocumentFieldsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.ListDocumentFieldsWithHttpInfo(System.String,System.String,System.String)">
             <summary>
             Gets the custom document fields from an  existing envelope document. Retrieves the custom document field information from an existing envelope document.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param>
             <returns>6ApiResponse of DocumentFieldsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.ListDocumentFieldsAsync(System.String,System.String,System.String)">
             <summary>
             Gets the custom document fields from an  existing envelope document. Retrieves the custom document field information from an existing envelope document.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param>
             <returns>7Task of DocumentFieldsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.ListDocumentFieldsAsyncWithHttpInfo(System.String,System.String,System.String)">
             <summary>
             Gets the custom document fields from an  existing envelope document. Retrieves the custom document field information from an existing envelope document.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param>
             <returns>8Task of ApiResponse (DocumentFieldsInformation)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.UpdateDocumentFields(System.String,System.String,System.String,DocuSign.eSign.Model.DocumentFieldsInformation)">
             <summary>
             Updates existing custom document fields in an existing envelope document. Updates existing custom document fields in an existing envelope document.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param> <param name="documentFieldsInformation">TBD Description</param>
             <returns>5DocumentFieldsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.UpdateDocumentFieldsWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.DocumentFieldsInformation)">
             <summary>
             Updates existing custom document fields in an existing envelope document. Updates existing custom document fields in an existing envelope document.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param> <param name="documentFieldsInformation">TBD Description</param>
             <returns>6ApiResponse of DocumentFieldsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.UpdateDocumentFieldsAsync(System.String,System.String,System.String,DocuSign.eSign.Model.DocumentFieldsInformation)">
             <summary>
             Updates existing custom document fields in an existing envelope document. Updates existing custom document fields in an existing envelope document.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param> <param name="documentFieldsInformation">TBD Description</param>
             <returns>7Task of DocumentFieldsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.UpdateDocumentFieldsAsyncWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.DocumentFieldsInformation)">
             <summary>
             Updates existing custom document fields in an existing envelope document. Updates existing custom document fields in an existing envelope document.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param> <param name="documentFieldsInformation">TBD Description</param>
             <returns>8Task of ApiResponse (DocumentFieldsInformation)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.CreateDocumentFields(System.String,System.String,System.String,DocuSign.eSign.Model.DocumentFieldsInformation)">
             <summary>
             Creates custom document fields in an existing envelope document. Creates custom document fields in an existing envelope document.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param> <param name="documentFieldsInformation">TBD Description</param>
             <returns>5DocumentFieldsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.CreateDocumentFieldsWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.DocumentFieldsInformation)">
             <summary>
             Creates custom document fields in an existing envelope document. Creates custom document fields in an existing envelope document.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param> <param name="documentFieldsInformation">TBD Description</param>
             <returns>6ApiResponse of DocumentFieldsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.CreateDocumentFieldsAsync(System.String,System.String,System.String,DocuSign.eSign.Model.DocumentFieldsInformation)">
             <summary>
             Creates custom document fields in an existing envelope document. Creates custom document fields in an existing envelope document.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param> <param name="documentFieldsInformation">TBD Description</param>
             <returns>7Task of DocumentFieldsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.CreateDocumentFieldsAsyncWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.DocumentFieldsInformation)">
             <summary>
             Creates custom document fields in an existing envelope document. Creates custom document fields in an existing envelope document.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param> <param name="documentFieldsInformation">TBD Description</param>
             <returns>8Task of ApiResponse (DocumentFieldsInformation)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.DeleteDocumentFields(System.String,System.String,System.String,DocuSign.eSign.Model.DocumentFieldsInformation)">
             <summary>
             Deletes custom document fields from an existing envelope document. Deletes custom document fields from an existing envelope document.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param> <param name="documentFieldsInformation">TBD Description</param>
             <returns>5DocumentFieldsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.DeleteDocumentFieldsWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.DocumentFieldsInformation)">
             <summary>
             Deletes custom document fields from an existing envelope document. Deletes custom document fields from an existing envelope document.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param> <param name="documentFieldsInformation">TBD Description</param>
             <returns>6ApiResponse of DocumentFieldsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.DeleteDocumentFieldsAsync(System.String,System.String,System.String,DocuSign.eSign.Model.DocumentFieldsInformation)">
             <summary>
             Deletes custom document fields from an existing envelope document. Deletes custom document fields from an existing envelope document.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param> <param name="documentFieldsInformation">TBD Description</param>
             <returns>7Task of DocumentFieldsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.DeleteDocumentFieldsAsyncWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.DocumentFieldsInformation)">
             <summary>
             Deletes custom document fields from an existing envelope document. Deletes custom document fields from an existing envelope document.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param> <param name="documentFieldsInformation">TBD Description</param>
             <returns>8Task of ApiResponse (DocumentFieldsInformation)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.DeleteDocumentPage(System.String,System.String,System.String,System.String)">
             <summary>
             Deletes a page from a document in an envelope. Deletes a page from a document in an envelope based on the page number.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param><param name="pageNumber">The page number being accessed.</param>
             <returns>5</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.DeleteDocumentPageWithHttpInfo(System.String,System.String,System.String,System.String)">
             <summary>
             Deletes a page from a document in an envelope. Deletes a page from a document in an envelope based on the page number.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param><param name="pageNumber">The page number being accessed.</param>
             <returns>6ApiResponse of Object(void)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.DeleteDocumentPageAsync(System.String,System.String,System.String,System.String)">
             <summary>
             Deletes a page from a document in an envelope. Deletes a page from a document in an envelope based on the page number.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param><param name="pageNumber">The page number being accessed.</param>
             <returns>7Task of void</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.DeleteDocumentPageAsyncWithHttpInfo(System.String,System.String,System.String,System.String)">
             <summary>
             Deletes a page from a document in an envelope. Deletes a page from a document in an envelope based on the page number.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param><param name="pageNumber">The page number being accessed.</param>
             <returns>8Task of ApiResponse</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.ListTemplatesForDocument(System.String,System.String,System.String)">
             <summary>
             Gets the templates associated with a document in an existing envelope. Retrieves the templates associated with a document in the specified envelope.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param>
             <returns>5TemplateInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.ListTemplatesForDocumentWithHttpInfo(System.String,System.String,System.String)">
             <summary>
             Gets the templates associated with a document in an existing envelope. Retrieves the templates associated with a document in the specified envelope.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param>
             <returns>6ApiResponse of TemplateInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.ListTemplatesForDocumentAsync(System.String,System.String,System.String)">
             <summary>
             Gets the templates associated with a document in an existing envelope. Retrieves the templates associated with a document in the specified envelope.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param>
             <returns>7Task of TemplateInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.ListTemplatesForDocumentAsyncWithHttpInfo(System.String,System.String,System.String)">
             <summary>
             Gets the templates associated with a document in an existing envelope. Retrieves the templates associated with a document in the specified envelope.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param>
             <returns>8Task of ApiResponse (TemplateInformation)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.ApplyTemplateToDocument(System.String,System.String,System.String,DocuSign.eSign.Model.DocumentTemplateList)">
             <summary>
             Adds templates to a document in an  envelope. Adds templates to a document in the specified envelope.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param> <param name="documentTemplateList">TBD Description</param>
             <returns>5DocumentTemplateList</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.ApplyTemplateToDocumentWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.DocumentTemplateList)">
             <summary>
             Adds templates to a document in an  envelope. Adds templates to a document in the specified envelope.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param> <param name="documentTemplateList">TBD Description</param>
             <returns>6ApiResponse of DocumentTemplateList</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.ApplyTemplateToDocumentAsync(System.String,System.String,System.String,DocuSign.eSign.Model.DocumentTemplateList)">
             <summary>
             Adds templates to a document in an  envelope. Adds templates to a document in the specified envelope.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param> <param name="documentTemplateList">TBD Description</param>
             <returns>7Task of DocumentTemplateList</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.ApplyTemplateToDocumentAsyncWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.DocumentTemplateList)">
             <summary>
             Adds templates to a document in an  envelope. Adds templates to a document in the specified envelope.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param> <param name="documentTemplateList">TBD Description</param>
             <returns>8Task of ApiResponse (DocumentTemplateList)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.DeleteTemplatesFromDocument(System.String,System.String,System.String,System.String)">
             <summary>
             Deletes a template from a document in an existing envelope. Deletes the specified template from a document in an existing envelope.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param><param name="templateId">The ID of the template being accessed.</param>
             <returns>5</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.DeleteTemplatesFromDocumentWithHttpInfo(System.String,System.String,System.String,System.String)">
             <summary>
             Deletes a template from a document in an existing envelope. Deletes the specified template from a document in an existing envelope.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param><param name="templateId">The ID of the template being accessed.</param>
             <returns>6ApiResponse of Object(void)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.DeleteTemplatesFromDocumentAsync(System.String,System.String,System.String,System.String)">
             <summary>
             Deletes a template from a document in an existing envelope. Deletes the specified template from a document in an existing envelope.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param><param name="templateId">The ID of the template being accessed.</param>
             <returns>7Task of void</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.DeleteTemplatesFromDocumentAsyncWithHttpInfo(System.String,System.String,System.String,System.String)">
             <summary>
             Deletes a template from a document in an existing envelope. Deletes the specified template from a document in an existing envelope.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="documentId">The ID of the document being accessed.</param><param name="templateId">The ID of the template being accessed.</param>
             <returns>8Task of ApiResponse</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.GetEmailSettings(System.String,System.String)">
             <summary>
             Gets the email setting overrides for an envelope. Retrieves the email override settings for the specified envelope.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>5EmailSettings</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.GetEmailSettingsWithHttpInfo(System.String,System.String)">
             <summary>
             Gets the email setting overrides for an envelope. Retrieves the email override settings for the specified envelope.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>6ApiResponse of EmailSettings</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.GetEmailSettingsAsync(System.String,System.String)">
             <summary>
             Gets the email setting overrides for an envelope. Retrieves the email override settings for the specified envelope.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>7Task of EmailSettings</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.GetEmailSettingsAsyncWithHttpInfo(System.String,System.String)">
             <summary>
             Gets the email setting overrides for an envelope. Retrieves the email override settings for the specified envelope.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>8Task of ApiResponse (EmailSettings)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.UpdateEmailSettings(System.String,System.String,DocuSign.eSign.Model.EmailSettings)">
             <summary>
             Updates the email setting overrides for an envelope. Updates the existing email override settings for the specified envelope. Note that modifying email settings will only affect email communications that occur after the modification was made.\n\nThis can also be used to delete an individual email override setting by using an empty string for the value to be deleted.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="emailSettings">TBD Description</param>
             <returns>5EmailSettings</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.UpdateEmailSettingsWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.EmailSettings)">
             <summary>
             Updates the email setting overrides for an envelope. Updates the existing email override settings for the specified envelope. Note that modifying email settings will only affect email communications that occur after the modification was made.\n\nThis can also be used to delete an individual email override setting by using an empty string for the value to be deleted.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="emailSettings">TBD Description</param>
             <returns>6ApiResponse of EmailSettings</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.UpdateEmailSettingsAsync(System.String,System.String,DocuSign.eSign.Model.EmailSettings)">
             <summary>
             Updates the email setting overrides for an envelope. Updates the existing email override settings for the specified envelope. Note that modifying email settings will only affect email communications that occur after the modification was made.\n\nThis can also be used to delete an individual email override setting by using an empty string for the value to be deleted.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="emailSettings">TBD Description</param>
             <returns>7Task of EmailSettings</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.UpdateEmailSettingsAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.EmailSettings)">
             <summary>
             Updates the email setting overrides for an envelope. Updates the existing email override settings for the specified envelope. Note that modifying email settings will only affect email communications that occur after the modification was made.\n\nThis can also be used to delete an individual email override setting by using an empty string for the value to be deleted.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="emailSettings">TBD Description</param>
             <returns>8Task of ApiResponse (EmailSettings)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.CreateEmailSettings(System.String,System.String,DocuSign.eSign.Model.EmailSettings)">
             <summary>
             Adds email setting overrides to an envelope. Adds email override settings, changing the email address to reply to an email address, name, or the BCC for email archive information, for the envelope. Note that adding email settings will only affect email communications that occur after the addition was made.\n\n### Important: The BCC Email address feature is designed to provide a copy of all email communications for external archiving purposes. DocuSign recommends that envelopes sent using the BCC for Email Archive feature, including the BCC Email Override option, include additional signer authentication options. To send a copy of the envelope to a recipient who does not need to sign, use a Carbon Copies or Certified Deliveries Recipient Type.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="emailSettings">TBD Description</param>
             <returns>5EmailSettings</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.CreateEmailSettingsWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.EmailSettings)">
             <summary>
             Adds email setting overrides to an envelope. Adds email override settings, changing the email address to reply to an email address, name, or the BCC for email archive information, for the envelope. Note that adding email settings will only affect email communications that occur after the addition was made.\n\n### Important: The BCC Email address feature is designed to provide a copy of all email communications for external archiving purposes. DocuSign recommends that envelopes sent using the BCC for Email Archive feature, including the BCC Email Override option, include additional signer authentication options. To send a copy of the envelope to a recipient who does not need to sign, use a Carbon Copies or Certified Deliveries Recipient Type.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="emailSettings">TBD Description</param>
             <returns>6ApiResponse of EmailSettings</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.CreateEmailSettingsAsync(System.String,System.String,DocuSign.eSign.Model.EmailSettings)">
             <summary>
             Adds email setting overrides to an envelope. Adds email override settings, changing the email address to reply to an email address, name, or the BCC for email archive information, for the envelope. Note that adding email settings will only affect email communications that occur after the addition was made.\n\n### Important: The BCC Email address feature is designed to provide a copy of all email communications for external archiving purposes. DocuSign recommends that envelopes sent using the BCC for Email Archive feature, including the BCC Email Override option, include additional signer authentication options. To send a copy of the envelope to a recipient who does not need to sign, use a Carbon Copies or Certified Deliveries Recipient Type.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="emailSettings">TBD Description</param>
             <returns>7Task of EmailSettings</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.CreateEmailSettingsAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.EmailSettings)">
             <summary>
             Adds email setting overrides to an envelope. Adds email override settings, changing the email address to reply to an email address, name, or the BCC for email archive information, for the envelope. Note that adding email settings will only affect email communications that occur after the addition was made.\n\n### Important: The BCC Email address feature is designed to provide a copy of all email communications for external archiving purposes. DocuSign recommends that envelopes sent using the BCC for Email Archive feature, including the BCC Email Override option, include additional signer authentication options. To send a copy of the envelope to a recipient who does not need to sign, use a Carbon Copies or Certified Deliveries Recipient Type.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="emailSettings">TBD Description</param>
             <returns>8Task of ApiResponse (EmailSettings)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.DeleteEmailSettings(System.String,System.String)">
             <summary>
             Deletes the email setting overrides for an envelope. Deletes all existing email override settings for the envelope. If you want to delete an individual email override setting, use the PUT and set the value to an empty string. Note that deleting email settings will only affect email communications that occur after the deletion and the normal account email settings are used for future email communications.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>5EmailSettings</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.DeleteEmailSettingsWithHttpInfo(System.String,System.String)">
             <summary>
             Deletes the email setting overrides for an envelope. Deletes all existing email override settings for the envelope. If you want to delete an individual email override setting, use the PUT and set the value to an empty string. Note that deleting email settings will only affect email communications that occur after the deletion and the normal account email settings are used for future email communications.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>6ApiResponse of EmailSettings</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.DeleteEmailSettingsAsync(System.String,System.String)">
             <summary>
             Deletes the email setting overrides for an envelope. Deletes all existing email override settings for the envelope. If you want to delete an individual email override setting, use the PUT and set the value to an empty string. Note that deleting email settings will only affect email communications that occur after the deletion and the normal account email settings are used for future email communications.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>7Task of EmailSettings</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.DeleteEmailSettingsAsyncWithHttpInfo(System.String,System.String)">
             <summary>
             Deletes the email setting overrides for an envelope. Deletes all existing email override settings for the envelope. If you want to delete an individual email override setting, use the PUT and set the value to an empty string. Note that deleting email settings will only affect email communications that occur after the deletion and the normal account email settings are used for future email communications.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>8Task of ApiResponse (EmailSettings)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.GetLock(System.String,System.String)">
             <summary>
             Gets envelope lock information. Retrieves general information about the envelope lock.\n\nIf the call is made by the locked by user and the request has the same integrator key as original, then the `X-DocuSign-Edit` header and additional lock information is included in the response. This allows users to recover a lost editing session token and the `X-DocuSign-Edit` header.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>5LockInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.GetLockWithHttpInfo(System.String,System.String)">
             <summary>
             Gets envelope lock information. Retrieves general information about the envelope lock.\n\nIf the call is made by the locked by user and the request has the same integrator key as original, then the `X-DocuSign-Edit` header and additional lock information is included in the response. This allows users to recover a lost editing session token and the `X-DocuSign-Edit` header.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>6ApiResponse of LockInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.GetLockAsync(System.String,System.String)">
             <summary>
             Gets envelope lock information. Retrieves general information about the envelope lock.\n\nIf the call is made by the locked by user and the request has the same integrator key as original, then the `X-DocuSign-Edit` header and additional lock information is included in the response. This allows users to recover a lost editing session token and the `X-DocuSign-Edit` header.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>7Task of LockInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.GetLockAsyncWithHttpInfo(System.String,System.String)">
             <summary>
             Gets envelope lock information. Retrieves general information about the envelope lock.\n\nIf the call is made by the locked by user and the request has the same integrator key as original, then the `X-DocuSign-Edit` header and additional lock information is included in the response. This allows users to recover a lost editing session token and the `X-DocuSign-Edit` header.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>8Task of ApiResponse (LockInformation)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.UpdateLock(System.String,System.String,DocuSign.eSign.Model.LockRequest)">
             <summary>
             Updates an envelope lock. Updates the lock duration time or update the `lockedByApp` property information for the specified envelope. The user and integrator key must match the user specified by the `lockByUser` property and integrator key information and the `X-DocuSign-Edit` header must be included or an error will be generated.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="lockRequest">TBD Description</param>
             <returns>5LockInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.UpdateLockWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.LockRequest)">
             <summary>
             Updates an envelope lock. Updates the lock duration time or update the `lockedByApp` property information for the specified envelope. The user and integrator key must match the user specified by the `lockByUser` property and integrator key information and the `X-DocuSign-Edit` header must be included or an error will be generated.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="lockRequest">TBD Description</param>
             <returns>6ApiResponse of LockInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.UpdateLockAsync(System.String,System.String,DocuSign.eSign.Model.LockRequest)">
             <summary>
             Updates an envelope lock. Updates the lock duration time or update the `lockedByApp` property information for the specified envelope. The user and integrator key must match the user specified by the `lockByUser` property and integrator key information and the `X-DocuSign-Edit` header must be included or an error will be generated.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="lockRequest">TBD Description</param>
             <returns>7Task of LockInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.UpdateLockAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.LockRequest)">
             <summary>
             Updates an envelope lock. Updates the lock duration time or update the `lockedByApp` property information for the specified envelope. The user and integrator key must match the user specified by the `lockByUser` property and integrator key information and the `X-DocuSign-Edit` header must be included or an error will be generated.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="lockRequest">TBD Description</param>
             <returns>8Task of ApiResponse (LockInformation)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.CreateLock(System.String,System.String,DocuSign.eSign.Model.LockRequest)">
             <summary>
             Lock an envelope. Locks the specified envelope, and sets the time until the lock expires, to prevent other users or recipients from accessing and changing the envelope.\n\nNote: Users must have envelope locking capability enabled to use this function (userSetting `canLockEnvelopes` must be  set to true for the user).
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="lockRequest">TBD Description</param>
             <returns>5LockInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.CreateLockWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.LockRequest)">
             <summary>
             Lock an envelope. Locks the specified envelope, and sets the time until the lock expires, to prevent other users or recipients from accessing and changing the envelope.\n\nNote: Users must have envelope locking capability enabled to use this function (userSetting `canLockEnvelopes` must be  set to true for the user).
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="lockRequest">TBD Description</param>
             <returns>6ApiResponse of LockInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.CreateLockAsync(System.String,System.String,DocuSign.eSign.Model.LockRequest)">
             <summary>
             Lock an envelope. Locks the specified envelope, and sets the time until the lock expires, to prevent other users or recipients from accessing and changing the envelope.\n\nNote: Users must have envelope locking capability enabled to use this function (userSetting `canLockEnvelopes` must be  set to true for the user).
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="lockRequest">TBD Description</param>
             <returns>7Task of LockInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.CreateLockAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.LockRequest)">
             <summary>
             Lock an envelope. Locks the specified envelope, and sets the time until the lock expires, to prevent other users or recipients from accessing and changing the envelope.\n\nNote: Users must have envelope locking capability enabled to use this function (userSetting `canLockEnvelopes` must be  set to true for the user).
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="lockRequest">TBD Description</param>
             <returns>8Task of ApiResponse (LockInformation)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.DeleteLock(System.String,System.String)">
             <summary>
             Deletes an envelope lock. Deletes the lock from the specified envelope. The `X-DocuSign-Edit` header must be included in the request.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>5LockInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.DeleteLockWithHttpInfo(System.String,System.String)">
             <summary>
             Deletes an envelope lock. Deletes the lock from the specified envelope. The `X-DocuSign-Edit` header must be included in the request.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>6ApiResponse of LockInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.DeleteLockAsync(System.String,System.String)">
             <summary>
             Deletes an envelope lock. Deletes the lock from the specified envelope. The `X-DocuSign-Edit` header must be included in the request.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>7Task of LockInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.DeleteLockAsyncWithHttpInfo(System.String,System.String)">
             <summary>
             Deletes an envelope lock. Deletes the lock from the specified envelope. The `X-DocuSign-Edit` header must be included in the request.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>8Task of ApiResponse (LockInformation)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.GetNotificationSettings(System.String,System.String)">
             <summary>
             Gets envelope notification information. Retrieves the envelope notification, reminders and expirations, information for an existing envelope.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>5Notification</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.GetNotificationSettingsWithHttpInfo(System.String,System.String)">
             <summary>
             Gets envelope notification information. Retrieves the envelope notification, reminders and expirations, information for an existing envelope.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>6ApiResponse of Notification</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.GetNotificationSettingsAsync(System.String,System.String)">
             <summary>
             Gets envelope notification information. Retrieves the envelope notification, reminders and expirations, information for an existing envelope.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>7Task of Notification</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.GetNotificationSettingsAsyncWithHttpInfo(System.String,System.String)">
             <summary>
             Gets envelope notification information. Retrieves the envelope notification, reminders and expirations, information for an existing envelope.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>8Task of ApiResponse (Notification)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.ListRecipients(System.String,System.String)">
             <summary>
             Gets the status of recipients for an envelope. Retrieves the status of all recipients in a single envelope and identifies the current recipient in the routing list. \n\nThe `currentRoutingOrder` property of the response contains the `routingOrder` value of the current recipient indicating that the envelope has been sent to the recipient, but the recipient has not completed their actions.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>5Recipients</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.ListRecipientsWithHttpInfo(System.String,System.String)">
             <summary>
             Gets the status of recipients for an envelope. Retrieves the status of all recipients in a single envelope and identifies the current recipient in the routing list. \n\nThe `currentRoutingOrder` property of the response contains the `routingOrder` value of the current recipient indicating that the envelope has been sent to the recipient, but the recipient has not completed their actions.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>6ApiResponse of Recipients</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.ListRecipientsAsync(System.String,System.String)">
             <summary>
             Gets the status of recipients for an envelope. Retrieves the status of all recipients in a single envelope and identifies the current recipient in the routing list. \n\nThe `currentRoutingOrder` property of the response contains the `routingOrder` value of the current recipient indicating that the envelope has been sent to the recipient, but the recipient has not completed their actions.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>7Task of Recipients</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.ListRecipientsAsyncWithHttpInfo(System.String,System.String)">
             <summary>
             Gets the status of recipients for an envelope. Retrieves the status of all recipients in a single envelope and identifies the current recipient in the routing list. \n\nThe `currentRoutingOrder` property of the response contains the `routingOrder` value of the current recipient indicating that the envelope has been sent to the recipient, but the recipient has not completed their actions.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>8Task of ApiResponse (Recipients)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.UpdateRecipients(System.String,System.String,DocuSign.eSign.Model.Recipients)">
             <summary>
             Updates recipients in a draft envelope or corrects recipient information for an in process envelope. Updates recipients in a draft envelope or corrects recipient information for an in process envelope. \n\nFor draft envelopes, you can edit the following properties: `email`, `userName`, `routingOrder`, `faxNumber`, `deliveryMethod`, `accessCode`, and `requireIdLookup`.\n\nOnce an envelope has been sent, you can only edit: `email`, `userName`, `signerName`, `routingOrder`, `faxNumber`, and `deliveryMethod`. You can also select to resend an envelope by using the `resend_envelope` option.\n\nIf you send information for a recipient that does not already exist in a draft envelope, the recipient is added to the envelope (similar to the POST).
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="recipients">TBD Description</param>
             <returns>5RecipientsUpdateSummary</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.UpdateRecipientsWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.Recipients)">
             <summary>
             Updates recipients in a draft envelope or corrects recipient information for an in process envelope. Updates recipients in a draft envelope or corrects recipient information for an in process envelope. \n\nFor draft envelopes, you can edit the following properties: `email`, `userName`, `routingOrder`, `faxNumber`, `deliveryMethod`, `accessCode`, and `requireIdLookup`.\n\nOnce an envelope has been sent, you can only edit: `email`, `userName`, `signerName`, `routingOrder`, `faxNumber`, and `deliveryMethod`. You can also select to resend an envelope by using the `resend_envelope` option.\n\nIf you send information for a recipient that does not already exist in a draft envelope, the recipient is added to the envelope (similar to the POST).
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="recipients">TBD Description</param>
             <returns>6ApiResponse of RecipientsUpdateSummary</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.UpdateRecipientsAsync(System.String,System.String,DocuSign.eSign.Model.Recipients)">
             <summary>
             Updates recipients in a draft envelope or corrects recipient information for an in process envelope. Updates recipients in a draft envelope or corrects recipient information for an in process envelope. \n\nFor draft envelopes, you can edit the following properties: `email`, `userName`, `routingOrder`, `faxNumber`, `deliveryMethod`, `accessCode`, and `requireIdLookup`.\n\nOnce an envelope has been sent, you can only edit: `email`, `userName`, `signerName`, `routingOrder`, `faxNumber`, and `deliveryMethod`. You can also select to resend an envelope by using the `resend_envelope` option.\n\nIf you send information for a recipient that does not already exist in a draft envelope, the recipient is added to the envelope (similar to the POST).
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="recipients">TBD Description</param>
             <returns>7Task of RecipientsUpdateSummary</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.UpdateRecipientsAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.Recipients)">
             <summary>
             Updates recipients in a draft envelope or corrects recipient information for an in process envelope. Updates recipients in a draft envelope or corrects recipient information for an in process envelope. \n\nFor draft envelopes, you can edit the following properties: `email`, `userName`, `routingOrder`, `faxNumber`, `deliveryMethod`, `accessCode`, and `requireIdLookup`.\n\nOnce an envelope has been sent, you can only edit: `email`, `userName`, `signerName`, `routingOrder`, `faxNumber`, and `deliveryMethod`. You can also select to resend an envelope by using the `resend_envelope` option.\n\nIf you send information for a recipient that does not already exist in a draft envelope, the recipient is added to the envelope (similar to the POST).
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="recipients">TBD Description</param>
             <returns>8Task of ApiResponse (RecipientsUpdateSummary)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.CreateRecipient(System.String,System.String,DocuSign.eSign.Model.Recipients)">
             <summary>
             Adds one or more recipients to an envelope. Adds one or more recipients to an envelope.\n\nFor an in process envelope, one that has been sent and has not been completed or voided, an email is sent to a new recipient when they are reached in the routing order. If the new recipient&#39;s routing order is before or the same as the envelope&#39;s next recipient, an email is only sent if the optional `resend_envelope` query string is set to **true**.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="recipients">TBD Description</param>
             <returns>5Recipients</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.CreateRecipientWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.Recipients)">
             <summary>
             Adds one or more recipients to an envelope. Adds one or more recipients to an envelope.\n\nFor an in process envelope, one that has been sent and has not been completed or voided, an email is sent to a new recipient when they are reached in the routing order. If the new recipient&#39;s routing order is before or the same as the envelope&#39;s next recipient, an email is only sent if the optional `resend_envelope` query string is set to **true**.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="recipients">TBD Description</param>
             <returns>6ApiResponse of Recipients</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.CreateRecipientAsync(System.String,System.String,DocuSign.eSign.Model.Recipients)">
             <summary>
             Adds one or more recipients to an envelope. Adds one or more recipients to an envelope.\n\nFor an in process envelope, one that has been sent and has not been completed or voided, an email is sent to a new recipient when they are reached in the routing order. If the new recipient&#39;s routing order is before or the same as the envelope&#39;s next recipient, an email is only sent if the optional `resend_envelope` query string is set to **true**.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="recipients">TBD Description</param>
             <returns>7Task of Recipients</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.CreateRecipientAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.Recipients)">
             <summary>
             Adds one or more recipients to an envelope. Adds one or more recipients to an envelope.\n\nFor an in process envelope, one that has been sent and has not been completed or voided, an email is sent to a new recipient when they are reached in the routing order. If the new recipient&#39;s routing order is before or the same as the envelope&#39;s next recipient, an email is only sent if the optional `resend_envelope` query string is set to **true**.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="recipients">TBD Description</param>
             <returns>8Task of ApiResponse (Recipients)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.DeleteRecipients(System.String,System.String,DocuSign.eSign.Model.Recipients)">
             <summary>
             Deletes recipients from an envelope. Deletes one or more recipients from a draft or sent envelope. Recipients to be deleted are listed in the request, with the `recipientId` being used as the key for deleting recipients.\n\nIf the envelope is `In Process`, meaning that it has been sent and has not  been completed or voided, recipients that have completed their actions cannot be deleted.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="recipients">TBD Description</param>
             <returns>5Recipients</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.DeleteRecipientsWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.Recipients)">
             <summary>
             Deletes recipients from an envelope. Deletes one or more recipients from a draft or sent envelope. Recipients to be deleted are listed in the request, with the `recipientId` being used as the key for deleting recipients.\n\nIf the envelope is `In Process`, meaning that it has been sent and has not  been completed or voided, recipients that have completed their actions cannot be deleted.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="recipients">TBD Description</param>
             <returns>6ApiResponse of Recipients</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.DeleteRecipientsAsync(System.String,System.String,DocuSign.eSign.Model.Recipients)">
             <summary>
             Deletes recipients from an envelope. Deletes one or more recipients from a draft or sent envelope. Recipients to be deleted are listed in the request, with the `recipientId` being used as the key for deleting recipients.\n\nIf the envelope is `In Process`, meaning that it has been sent and has not  been completed or voided, recipients that have completed their actions cannot be deleted.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="recipients">TBD Description</param>
             <returns>7Task of Recipients</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.DeleteRecipientsAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.Recipients)">
             <summary>
             Deletes recipients from an envelope. Deletes one or more recipients from a draft or sent envelope. Recipients to be deleted are listed in the request, with the `recipientId` being used as the key for deleting recipients.\n\nIf the envelope is `In Process`, meaning that it has been sent and has not  been completed or voided, recipients that have completed their actions cannot be deleted.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="recipients">TBD Description</param>
             <returns>8Task of ApiResponse (Recipients)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.DeleteRecipient(System.String,System.String,System.String)">
             <summary>
             Deletes a recipient from an envelope. Deletes the specified recipient file from the specified envelope. This cannot be used if the envelope has been sent.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param>
             <returns>5Recipients</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.DeleteRecipientWithHttpInfo(System.String,System.String,System.String)">
             <summary>
             Deletes a recipient from an envelope. Deletes the specified recipient file from the specified envelope. This cannot be used if the envelope has been sent.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param>
             <returns>6ApiResponse of Recipients</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.DeleteRecipientAsync(System.String,System.String,System.String)">
             <summary>
             Deletes a recipient from an envelope. Deletes the specified recipient file from the specified envelope. This cannot be used if the envelope has been sent.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param>
             <returns>7Task of Recipients</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.DeleteRecipientAsyncWithHttpInfo(System.String,System.String,System.String)">
             <summary>
             Deletes a recipient from an envelope. Deletes the specified recipient file from the specified envelope. This cannot be used if the envelope has been sent.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param>
             <returns>8Task of ApiResponse (Recipients)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.ListTabs(System.String,System.String,System.String)">
             <summary>
             Gets the tabs information for a signer or sign-in-person recipient in an envelope. Retrieves information about the tabs associated with a recipient in a draft envelope.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param>
             <returns>5Tabs</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.ListTabsWithHttpInfo(System.String,System.String,System.String)">
             <summary>
             Gets the tabs information for a signer or sign-in-person recipient in an envelope. Retrieves information about the tabs associated with a recipient in a draft envelope.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param>
             <returns>6ApiResponse of Tabs</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.ListTabsAsync(System.String,System.String,System.String)">
             <summary>
             Gets the tabs information for a signer or sign-in-person recipient in an envelope. Retrieves information about the tabs associated with a recipient in a draft envelope.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param>
             <returns>7Task of Tabs</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.ListTabsAsyncWithHttpInfo(System.String,System.String,System.String)">
             <summary>
             Gets the tabs information for a signer or sign-in-person recipient in an envelope. Retrieves information about the tabs associated with a recipient in a draft envelope.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param>
             <returns>8Task of ApiResponse (Tabs)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.UpdateTabs(System.String,System.String,System.String,DocuSign.eSign.Model.Tabs)">
             <summary>
             Updates the tabs for a recipient. Updates one or more tabs for a recipient in a draft envelope.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="tabs">TBD Description</param>
             <returns>5Tabs</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.UpdateTabsWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.Tabs)">
             <summary>
             Updates the tabs for a recipient. Updates one or more tabs for a recipient in a draft envelope.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="tabs">TBD Description</param>
             <returns>6ApiResponse of Tabs</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.UpdateTabsAsync(System.String,System.String,System.String,DocuSign.eSign.Model.Tabs)">
             <summary>
             Updates the tabs for a recipient. Updates one or more tabs for a recipient in a draft envelope.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="tabs">TBD Description</param>
             <returns>7Task of Tabs</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.UpdateTabsAsyncWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.Tabs)">
             <summary>
             Updates the tabs for a recipient. Updates one or more tabs for a recipient in a draft envelope.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="tabs">TBD Description</param>
             <returns>8Task of ApiResponse (Tabs)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.CreateTabs(System.String,System.String,System.String,DocuSign.eSign.Model.Tabs)">
             <summary>
             Adds tabs for a recipient. Adds one or more tabs for a recipient.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="tabs">TBD Description</param>
             <returns>5Tabs</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.CreateTabsWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.Tabs)">
             <summary>
             Adds tabs for a recipient. Adds one or more tabs for a recipient.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="tabs">TBD Description</param>
             <returns>6ApiResponse of Tabs</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.CreateTabsAsync(System.String,System.String,System.String,DocuSign.eSign.Model.Tabs)">
             <summary>
             Adds tabs for a recipient. Adds one or more tabs for a recipient.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="tabs">TBD Description</param>
             <returns>7Task of Tabs</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.CreateTabsAsyncWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.Tabs)">
             <summary>
             Adds tabs for a recipient. Adds one or more tabs for a recipient.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="tabs">TBD Description</param>
             <returns>8Task of ApiResponse (Tabs)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.DeleteTabs(System.String,System.String,System.String,DocuSign.eSign.Model.Tabs)">
             <summary>
             Deletes the tabs associated with a recipient. Deletes one or more tabs associated with a recipient in a draft envelope.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="tabs">TBD Description</param>
             <returns>5Tabs</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.DeleteTabsWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.Tabs)">
             <summary>
             Deletes the tabs associated with a recipient. Deletes one or more tabs associated with a recipient in a draft envelope.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="tabs">TBD Description</param>
             <returns>6ApiResponse of Tabs</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.DeleteTabsAsync(System.String,System.String,System.String,DocuSign.eSign.Model.Tabs)">
             <summary>
             Deletes the tabs associated with a recipient. Deletes one or more tabs associated with a recipient in a draft envelope.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="tabs">TBD Description</param>
             <returns>7Task of Tabs</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.DeleteTabsAsyncWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.Tabs)">
             <summary>
             Deletes the tabs associated with a recipient. Deletes one or more tabs associated with a recipient in a draft envelope.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="tabs">TBD Description</param>
             <returns>8Task of ApiResponse (Tabs)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.ListTemplates(System.String,System.String)">
             <summary>
             Get List of Templates used in an Envelope This returns a list of the templates, name and ID, used in an envelope.&lt;br/&gt;&lt;br/&gt;Note: This only returns information for server side templates.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>5TemplateInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.ListTemplatesWithHttpInfo(System.String,System.String)">
             <summary>
             Get List of Templates used in an Envelope This returns a list of the templates, name and ID, used in an envelope.&lt;br/&gt;&lt;br/&gt;Note: This only returns information for server side templates.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>6ApiResponse of TemplateInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.ListTemplatesAsync(System.String,System.String)">
             <summary>
             Get List of Templates used in an Envelope This returns a list of the templates, name and ID, used in an envelope.&lt;br/&gt;&lt;br/&gt;Note: This only returns information for server side templates.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>7Task of TemplateInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.ListTemplatesAsyncWithHttpInfo(System.String,System.String)">
             <summary>
             Get List of Templates used in an Envelope This returns a list of the templates, name and ID, used in an envelope.&lt;br/&gt;&lt;br/&gt;Note: This only returns information for server side templates.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>8Task of ApiResponse (TemplateInformation)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.ApplyTemplate(System.String,System.String,DocuSign.eSign.Model.DocumentTemplateList)">
             <summary>
             Adds templates to an envelope. Adds templates to the specified envelope.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="documentTemplateList">TBD Description</param>
             <returns>5DocumentTemplateList</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.ApplyTemplateWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.DocumentTemplateList)">
             <summary>
             Adds templates to an envelope. Adds templates to the specified envelope.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="documentTemplateList">TBD Description</param>
             <returns>6ApiResponse of DocumentTemplateList</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.ApplyTemplateAsync(System.String,System.String,DocuSign.eSign.Model.DocumentTemplateList)">
             <summary>
             Adds templates to an envelope. Adds templates to the specified envelope.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="documentTemplateList">TBD Description</param>
             <returns>7Task of DocumentTemplateList</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.ApplyTemplateAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.DocumentTemplateList)">
             <summary>
             Adds templates to an envelope. Adds templates to the specified envelope.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="documentTemplateList">TBD Description</param>
             <returns>8Task of ApiResponse (DocumentTemplateList)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.CreateCorrectView(System.String,System.String,DocuSign.eSign.Model.CorrectViewRequest)">
             <summary>
             Returns a URL to the envelope correction UI. Returns a URL that allows you to embed the envelope correction view of the DocuSign UI in your applications.\n\nImportant: iFrames should not be used for embedded operations on mobile devices due to screen space issues. For iOS devices DocuSign recommends using a WebView.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="correctViewRequest">TBD Description</param>
             <returns>5ViewUrl</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.CreateCorrectViewWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.CorrectViewRequest)">
             <summary>
             Returns a URL to the envelope correction UI. Returns a URL that allows you to embed the envelope correction view of the DocuSign UI in your applications.\n\nImportant: iFrames should not be used for embedded operations on mobile devices due to screen space issues. For iOS devices DocuSign recommends using a WebView.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="correctViewRequest">TBD Description</param>
             <returns>6ApiResponse of ViewUrl</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.CreateCorrectViewAsync(System.String,System.String,DocuSign.eSign.Model.CorrectViewRequest)">
             <summary>
             Returns a URL to the envelope correction UI. Returns a URL that allows you to embed the envelope correction view of the DocuSign UI in your applications.\n\nImportant: iFrames should not be used for embedded operations on mobile devices due to screen space issues. For iOS devices DocuSign recommends using a WebView.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="correctViewRequest">TBD Description</param>
             <returns>7Task of ViewUrl</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.CreateCorrectViewAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.CorrectViewRequest)">
             <summary>
             Returns a URL to the envelope correction UI. Returns a URL that allows you to embed the envelope correction view of the DocuSign UI in your applications.\n\nImportant: iFrames should not be used for embedded operations on mobile devices due to screen space issues. For iOS devices DocuSign recommends using a WebView.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="correctViewRequest">TBD Description</param>
             <returns>8Task of ApiResponse (ViewUrl)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.CreateEditView(System.String,System.String,DocuSign.eSign.Model.ReturnUrlRequest)">
             <summary>
             Returns a URL to the edit view UI. Returns a URL that allows you to embed the edit view of the DocuSign UI in your applications. This is a one-time use login token that allows the user to be placed into the DocuSign editing view. \n\nUpon sending completion, the user is returned to the return URL provided by the API application.\n\nImportant: iFrames should not be used for embedded operations on mobile devices due to screen space issues. For iOS devices DocuSign recommends using a WebView.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="returnUrlRequest">TBD Description</param>
             <returns>5ViewUrl</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.CreateEditViewWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.ReturnUrlRequest)">
             <summary>
             Returns a URL to the edit view UI. Returns a URL that allows you to embed the edit view of the DocuSign UI in your applications. This is a one-time use login token that allows the user to be placed into the DocuSign editing view. \n\nUpon sending completion, the user is returned to the return URL provided by the API application.\n\nImportant: iFrames should not be used for embedded operations on mobile devices due to screen space issues. For iOS devices DocuSign recommends using a WebView.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="returnUrlRequest">TBD Description</param>
             <returns>6ApiResponse of ViewUrl</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.CreateEditViewAsync(System.String,System.String,DocuSign.eSign.Model.ReturnUrlRequest)">
             <summary>
             Returns a URL to the edit view UI. Returns a URL that allows you to embed the edit view of the DocuSign UI in your applications. This is a one-time use login token that allows the user to be placed into the DocuSign editing view. \n\nUpon sending completion, the user is returned to the return URL provided by the API application.\n\nImportant: iFrames should not be used for embedded operations on mobile devices due to screen space issues. For iOS devices DocuSign recommends using a WebView.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="returnUrlRequest">TBD Description</param>
             <returns>7Task of ViewUrl</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.CreateEditViewAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.ReturnUrlRequest)">
             <summary>
             Returns a URL to the edit view UI. Returns a URL that allows you to embed the edit view of the DocuSign UI in your applications. This is a one-time use login token that allows the user to be placed into the DocuSign editing view. \n\nUpon sending completion, the user is returned to the return URL provided by the API application.\n\nImportant: iFrames should not be used for embedded operations on mobile devices due to screen space issues. For iOS devices DocuSign recommends using a WebView.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="returnUrlRequest">TBD Description</param>
             <returns>8Task of ApiResponse (ViewUrl)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.CreateRecipientView(System.String,System.String,DocuSign.eSign.Model.RecipientViewRequest)">
             <summary>
             Returns a URL to the recipient view UI. Returns a URL that allows you to embed the recipient view of the DocuSign UI in your applications. This call cannot be used to view draft envelopes, since those envelopes have not been sent. \n\nImportant: iFrames should not be used for embedded operations on mobile devices due to screen space issues. For iOS devices DocuSign recommends using a WebView. \n\nAn entry is added into the Security Level section of the DocuSign Certificate of Completion that reflects the `securityDomain` and `authenticationMethod` properties used to verify the user identity.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="recipientViewRequest">TBD Description</param>
             <returns>5ViewUrl</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.CreateRecipientViewWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.RecipientViewRequest)">
             <summary>
             Returns a URL to the recipient view UI. Returns a URL that allows you to embed the recipient view of the DocuSign UI in your applications. This call cannot be used to view draft envelopes, since those envelopes have not been sent. \n\nImportant: iFrames should not be used for embedded operations on mobile devices due to screen space issues. For iOS devices DocuSign recommends using a WebView. \n\nAn entry is added into the Security Level section of the DocuSign Certificate of Completion that reflects the `securityDomain` and `authenticationMethod` properties used to verify the user identity.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="recipientViewRequest">TBD Description</param>
             <returns>6ApiResponse of ViewUrl</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.CreateRecipientViewAsync(System.String,System.String,DocuSign.eSign.Model.RecipientViewRequest)">
             <summary>
             Returns a URL to the recipient view UI. Returns a URL that allows you to embed the recipient view of the DocuSign UI in your applications. This call cannot be used to view draft envelopes, since those envelopes have not been sent. \n\nImportant: iFrames should not be used for embedded operations on mobile devices due to screen space issues. For iOS devices DocuSign recommends using a WebView. \n\nAn entry is added into the Security Level section of the DocuSign Certificate of Completion that reflects the `securityDomain` and `authenticationMethod` properties used to verify the user identity.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="recipientViewRequest">TBD Description</param>
             <returns>7Task of ViewUrl</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.CreateRecipientViewAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.RecipientViewRequest)">
             <summary>
             Returns a URL to the recipient view UI. Returns a URL that allows you to embed the recipient view of the DocuSign UI in your applications. This call cannot be used to view draft envelopes, since those envelopes have not been sent. \n\nImportant: iFrames should not be used for embedded operations on mobile devices due to screen space issues. For iOS devices DocuSign recommends using a WebView. \n\nAn entry is added into the Security Level section of the DocuSign Certificate of Completion that reflects the `securityDomain` and `authenticationMethod` properties used to verify the user identity.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="recipientViewRequest">TBD Description</param>
             <returns>8Task of ApiResponse (ViewUrl)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.CreateSenderView(System.String,System.String,DocuSign.eSign.Model.ReturnUrlRequest)">
             <summary>
             Returns a URL to the sender view UI. Returns a URL that allows you to embed the sender view of the DocuSign UI in your applications. This is a one-time use login token that allows the user to be placed into the DocuSign sending view. \n\nUpon sending completion, the user is returned to the return URL provided by the API application.\n\nImportant: iFrames should not be used for embedded operations on mobile devices due to screen space issues. For iOS devices DocuSign recommends using a WebView.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="returnUrlRequest">TBD Description</param>
             <returns>5ViewUrl</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.CreateSenderViewWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.ReturnUrlRequest)">
             <summary>
             Returns a URL to the sender view UI. Returns a URL that allows you to embed the sender view of the DocuSign UI in your applications. This is a one-time use login token that allows the user to be placed into the DocuSign sending view. \n\nUpon sending completion, the user is returned to the return URL provided by the API application.\n\nImportant: iFrames should not be used for embedded operations on mobile devices due to screen space issues. For iOS devices DocuSign recommends using a WebView.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="returnUrlRequest">TBD Description</param>
             <returns>6ApiResponse of ViewUrl</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.CreateSenderViewAsync(System.String,System.String,DocuSign.eSign.Model.ReturnUrlRequest)">
             <summary>
             Returns a URL to the sender view UI. Returns a URL that allows you to embed the sender view of the DocuSign UI in your applications. This is a one-time use login token that allows the user to be placed into the DocuSign sending view. \n\nUpon sending completion, the user is returned to the return URL provided by the API application.\n\nImportant: iFrames should not be used for embedded operations on mobile devices due to screen space issues. For iOS devices DocuSign recommends using a WebView.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="returnUrlRequest">TBD Description</param>
             <returns>7Task of ViewUrl</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.CreateSenderViewAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.ReturnUrlRequest)">
             <summary>
             Returns a URL to the sender view UI. Returns a URL that allows you to embed the sender view of the DocuSign UI in your applications. This is a one-time use login token that allows the user to be placed into the DocuSign sending view. \n\nUpon sending completion, the user is returned to the return URL provided by the API application.\n\nImportant: iFrames should not be used for embedded operations on mobile devices due to screen space issues. For iOS devices DocuSign recommends using a WebView.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="returnUrlRequest">TBD Description</param>
             <returns>8Task of ApiResponse (ViewUrl)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.CreateViewLink(System.String,System.String,DocuSign.eSign.Model.ViewLinkRequest)">
             <summary>
             Reserved: Returns a URL to the secure link view UI. Reserved: Returns a URL that allows you to embed the secure link view of the DocuSign UI in your applications.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="viewLinkRequest">TBD Description</param>
             <returns>5ViewUrl</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.CreateViewLinkWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.ViewLinkRequest)">
             <summary>
             Reserved: Returns a URL to the secure link view UI. Reserved: Returns a URL that allows you to embed the secure link view of the DocuSign UI in your applications.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="viewLinkRequest">TBD Description</param>
             <returns>6ApiResponse of ViewUrl</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.CreateViewLinkAsync(System.String,System.String,DocuSign.eSign.Model.ViewLinkRequest)">
             <summary>
             Reserved: Returns a URL to the secure link view UI. Reserved: Returns a URL that allows you to embed the secure link view of the DocuSign UI in your applications.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="viewLinkRequest">TBD Description</param>
             <returns>7Task of ViewUrl</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.CreateViewLinkAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.ViewLinkRequest)">
             <summary>
             Reserved: Returns a URL to the secure link view UI. Reserved: Returns a URL that allows you to embed the secure link view of the DocuSign UI in your applications.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param> <param name="viewLinkRequest">TBD Description</param>
             <returns>8Task of ApiResponse (ViewUrl)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.DeleteViewLink(System.String,System.String)">
             <summary>
             Reserved: Expires a secure view link. Reserved: Expires a secure view link
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>5</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.DeleteViewLinkWithHttpInfo(System.String,System.String)">
             <summary>
             Reserved: Expires a secure view link. Reserved: Expires a secure view link
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>6ApiResponse of Object(void)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.DeleteViewLinkAsync(System.String,System.String)">
             <summary>
             Reserved: Expires a secure view link. Reserved: Expires a secure view link
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>7Task of void</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.DeleteViewLinkAsyncWithHttpInfo(System.String,System.String)">
             <summary>
             Reserved: Expires a secure view link. Reserved: Expires a secure view link
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="envelopeId">The envelopeId Guid of the envelope being accessed.</param>
             <returns>8Task of ApiResponse</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.CreateConsoleView(System.String,DocuSign.eSign.Model.ConsoleViewRequest)">
             <summary>
             Returns a URL to the authentication view UI. Returns a URL that allows you to embed the authentication view of the DocuSign UI in your applications.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="consoleViewRequest">TBD Description</param>
             <returns>5ViewUrl</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.CreateConsoleViewWithHttpInfo(System.String,DocuSign.eSign.Model.ConsoleViewRequest)">
             <summary>
             Returns a URL to the authentication view UI. Returns a URL that allows you to embed the authentication view of the DocuSign UI in your applications.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="consoleViewRequest">TBD Description</param>
             <returns>6ApiResponse of ViewUrl</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.CreateConsoleViewAsync(System.String,DocuSign.eSign.Model.ConsoleViewRequest)">
             <summary>
             Returns a URL to the authentication view UI. Returns a URL that allows you to embed the authentication view of the DocuSign UI in your applications.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="consoleViewRequest">TBD Description</param>
             <returns>7Task of ViewUrl</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.EnvelopesApi.CreateConsoleViewAsyncWithHttpInfo(System.String,DocuSign.eSign.Model.ConsoleViewRequest)">
             <summary>
             Returns a URL to the authentication view UI. Returns a URL that allows you to embed the authentication view of the DocuSign UI in your applications.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="consoleViewRequest">TBD Description</param>
             <returns>8Task of ApiResponse (ViewUrl)</returns>
        </member>
        <member name="T:DocuSign.eSign.Api.IFoldersApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Api.IFoldersApi.List(System.String)">
            <summary>
            Gets a list of the folders for the account.
            </summary>
            <remarks>
            Retrieves a list of the folders for the account, including the folder hierarchy. You can specify whether to return just the template folder or template folder and normal folders by setting the `template` query string parameter.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param>
             <returns>1FoldersResponse</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IFoldersApi.ListWithHttpInfo(System.String)">
             <summary>
             Gets a list of the folders for the account.
             </summary>
             <remarks>
             Retrieves a list of the folders for the account, including the folder hierarchy. You can specify whether to return just the template folder or template folder and normal folders by setting the `template` query string parameter.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param>
             <returns>2ApiResponse of FoldersResponse</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IFoldersApi.ListAsync(System.String)">
             <summary>
             Gets a list of the folders for the account.
             </summary>
             <remarks>
             Retrieves a list of the folders for the account, including the folder hierarchy. You can specify whether to return just the template folder or template folder and normal folders by setting the `template` query string parameter.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param>
             <returns>3Task of FoldersResponse</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IFoldersApi.ListAsyncWithHttpInfo(System.String)">
             <summary>
             Gets a list of the folders for the account.
             </summary>
             <remarks>
             Retrieves a list of the folders for the account, including the folder hierarchy. You can specify whether to return just the template folder or template folder and normal folders by setting the `template` query string parameter.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param>
             <returns>4Task of ApiResponse (FoldersResponse)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IFoldersApi.ListItems(System.String,System.String)">
            <summary>
            Gets a list of the envelopes in the specified folder.
            </summary>
            <remarks>
            Retrieves a list of the envelopes in the specified folder. You can narrow the query by specifying search criteria in the query string parameters.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="folderId">The ID of the folder being accessed.</param>
             <returns>1FolderItemsResponse</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IFoldersApi.ListItemsWithHttpInfo(System.String,System.String)">
             <summary>
             Gets a list of the envelopes in the specified folder.
             </summary>
             <remarks>
             Retrieves a list of the envelopes in the specified folder. You can narrow the query by specifying search criteria in the query string parameters.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="folderId">The ID of the folder being accessed.</param>
             <returns>2ApiResponse of FolderItemsResponse</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IFoldersApi.ListItemsAsync(System.String,System.String)">
             <summary>
             Gets a list of the envelopes in the specified folder.
             </summary>
             <remarks>
             Retrieves a list of the envelopes in the specified folder. You can narrow the query by specifying search criteria in the query string parameters.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="folderId">The ID of the folder being accessed.</param>
             <returns>3Task of FolderItemsResponse</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IFoldersApi.ListItemsAsyncWithHttpInfo(System.String,System.String)">
             <summary>
             Gets a list of the envelopes in the specified folder.
             </summary>
             <remarks>
             Retrieves a list of the envelopes in the specified folder. You can narrow the query by specifying search criteria in the query string parameters.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="folderId">The ID of the folder being accessed.</param>
             <returns>4Task of ApiResponse (FolderItemsResponse)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IFoldersApi.MoveEnvelopes(System.String,System.String,DocuSign.eSign.Model.FoldersRequest)">
            <summary>
            Moves an envelope from its current folder to the specified folder.
            </summary>
            <remarks>
            Moves an envelope from its current folder to the specified folder.\n\n### Note: You can use this endpoint to delete envelopes by specifying `recyclebin&#39; in the `folderId` parameter of the endpoint. Placing an in process envelope (envelope status of `sent` or `delivered`) in the recycle bin voids the envelope. You can also use this endpoint to delete templates by specifying a template ID instead of an envelope ID in the &#39;envelopeIds&#39; property and specifying `recyclebin` in the `folderId` parameter.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="folderId">The ID of the folder being accessed.</param> <param name="foldersRequest">TBD Description</param>
             <returns>1FoldersResponse</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IFoldersApi.MoveEnvelopesWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.FoldersRequest)">
             <summary>
             Moves an envelope from its current folder to the specified folder.
             </summary>
             <remarks>
             Moves an envelope from its current folder to the specified folder.\n\n### Note: You can use this endpoint to delete envelopes by specifying `recyclebin&#39; in the `folderId` parameter of the endpoint. Placing an in process envelope (envelope status of `sent` or `delivered`) in the recycle bin voids the envelope. You can also use this endpoint to delete templates by specifying a template ID instead of an envelope ID in the &#39;envelopeIds&#39; property and specifying `recyclebin` in the `folderId` parameter.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="folderId">The ID of the folder being accessed.</param> <param name="foldersRequest">TBD Description</param>
             <returns>2ApiResponse of FoldersResponse</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IFoldersApi.MoveEnvelopesAsync(System.String,System.String,DocuSign.eSign.Model.FoldersRequest)">
             <summary>
             Moves an envelope from its current folder to the specified folder.
             </summary>
             <remarks>
             Moves an envelope from its current folder to the specified folder.\n\n### Note: You can use this endpoint to delete envelopes by specifying `recyclebin&#39; in the `folderId` parameter of the endpoint. Placing an in process envelope (envelope status of `sent` or `delivered`) in the recycle bin voids the envelope. You can also use this endpoint to delete templates by specifying a template ID instead of an envelope ID in the &#39;envelopeIds&#39; property and specifying `recyclebin` in the `folderId` parameter.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="folderId">The ID of the folder being accessed.</param> <param name="foldersRequest">TBD Description</param>
             <returns>3Task of FoldersResponse</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IFoldersApi.MoveEnvelopesAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.FoldersRequest)">
             <summary>
             Moves an envelope from its current folder to the specified folder.
             </summary>
             <remarks>
             Moves an envelope from its current folder to the specified folder.\n\n### Note: You can use this endpoint to delete envelopes by specifying `recyclebin&#39; in the `folderId` parameter of the endpoint. Placing an in process envelope (envelope status of `sent` or `delivered`) in the recycle bin voids the envelope. You can also use this endpoint to delete templates by specifying a template ID instead of an envelope ID in the &#39;envelopeIds&#39; property and specifying `recyclebin` in the `folderId` parameter.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="folderId">The ID of the folder being accessed.</param> <param name="foldersRequest">TBD Description</param>
             <returns>4Task of ApiResponse (FoldersResponse)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IFoldersApi.Search(System.String,System.String,DocuSign.eSign.Api.FoldersApi.SearchOptions)">
            <summary>
            Gets a list of envelopes in folders matching the specified criteria.
            </summary>
            <remarks>
            Retrieves a list of envelopes that match the criteria specified in the query.\n\nIf the user ID of the user making the call is the same as the user ID for any returned recipient, then the userId property is added to the returned information for those recipients.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="searchFolderId">Specifies the envelope group that is searched by the request. These are logical groupings, not actual folder names. Valid values are: drafts, awaiting_my_signature, completed, out_for_signature.</param> <param name="options">Options for modifying the behavior of the function.</param>
             <returns>1FolderItemResponse</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IFoldersApi.SearchWithHttpInfo(System.String,System.String,DocuSign.eSign.Api.FoldersApi.SearchOptions)">
             <summary>
             Gets a list of envelopes in folders matching the specified criteria.
             </summary>
             <remarks>
             Retrieves a list of envelopes that match the criteria specified in the query.\n\nIf the user ID of the user making the call is the same as the user ID for any returned recipient, then the userId property is added to the returned information for those recipients.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="searchFolderId">Specifies the envelope group that is searched by the request. These are logical groupings, not actual folder names. Valid values are: drafts, awaiting_my_signature, completed, out_for_signature.</param> <param name="options">Options for modifying the behavior of the function.</param>
             <returns>2ApiResponse of FolderItemResponse</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IFoldersApi.SearchAsync(System.String,System.String,DocuSign.eSign.Api.FoldersApi.SearchOptions)">
             <summary>
             Gets a list of envelopes in folders matching the specified criteria.
             </summary>
             <remarks>
             Retrieves a list of envelopes that match the criteria specified in the query.\n\nIf the user ID of the user making the call is the same as the user ID for any returned recipient, then the userId property is added to the returned information for those recipients.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="searchFolderId">Specifies the envelope group that is searched by the request. These are logical groupings, not actual folder names. Valid values are: drafts, awaiting_my_signature, completed, out_for_signature.</param> <param name="options">Options for modifying the behavior of the function.</param>
             <returns>3Task of FolderItemResponse</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IFoldersApi.SearchAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Api.FoldersApi.SearchOptions)">
             <summary>
             Gets a list of envelopes in folders matching the specified criteria.
             </summary>
             <remarks>
             Retrieves a list of envelopes that match the criteria specified in the query.\n\nIf the user ID of the user making the call is the same as the user ID for any returned recipient, then the userId property is added to the returned information for those recipients.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="searchFolderId">Specifies the envelope group that is searched by the request. These are logical groupings, not actual folder names. Valid values are: drafts, awaiting_my_signature, completed, out_for_signature.</param> <param name="options">Options for modifying the behavior of the function.</param>
             <returns>4Task of ApiResponse (FolderItemResponse)</returns>
        </member>
        <member name="T:DocuSign.eSign.Api.FoldersApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Api.FoldersApi.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.eSign.Api.FoldersApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DocuSign.eSign.Api.FoldersApi.#ctor(DocuSign.eSign.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.eSign.Api.FoldersApi"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.eSign.Api.FoldersApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:DocuSign.eSign.Api.FoldersApi.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:DocuSign.eSign.Api.FoldersApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="M:DocuSign.eSign.Api.FoldersApi.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.FoldersApi.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.eSign.Api.FoldersApi.List(System.String)">
             <summary>
             Gets a list of the folders for the account. Retrieves a list of the folders for the account, including the folder hierarchy. You can specify whether to return just the template folder or template folder and normal folders by setting the `template` query string parameter.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param>
             <returns>5FoldersResponse</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.FoldersApi.ListWithHttpInfo(System.String)">
             <summary>
             Gets a list of the folders for the account. Retrieves a list of the folders for the account, including the folder hierarchy. You can specify whether to return just the template folder or template folder and normal folders by setting the `template` query string parameter.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param>
             <returns>6ApiResponse of FoldersResponse</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.FoldersApi.ListAsync(System.String)">
             <summary>
             Gets a list of the folders for the account. Retrieves a list of the folders for the account, including the folder hierarchy. You can specify whether to return just the template folder or template folder and normal folders by setting the `template` query string parameter.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param>
             <returns>7Task of FoldersResponse</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.FoldersApi.ListAsyncWithHttpInfo(System.String)">
             <summary>
             Gets a list of the folders for the account. Retrieves a list of the folders for the account, including the folder hierarchy. You can specify whether to return just the template folder or template folder and normal folders by setting the `template` query string parameter.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param>
             <returns>8Task of ApiResponse (FoldersResponse)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.FoldersApi.ListItems(System.String,System.String)">
             <summary>
             Gets a list of the envelopes in the specified folder. Retrieves a list of the envelopes in the specified folder. You can narrow the query by specifying search criteria in the query string parameters.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="folderId">The ID of the folder being accessed.</param>
             <returns>5FolderItemsResponse</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.FoldersApi.ListItemsWithHttpInfo(System.String,System.String)">
             <summary>
             Gets a list of the envelopes in the specified folder. Retrieves a list of the envelopes in the specified folder. You can narrow the query by specifying search criteria in the query string parameters.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="folderId">The ID of the folder being accessed.</param>
             <returns>6ApiResponse of FolderItemsResponse</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.FoldersApi.ListItemsAsync(System.String,System.String)">
             <summary>
             Gets a list of the envelopes in the specified folder. Retrieves a list of the envelopes in the specified folder. You can narrow the query by specifying search criteria in the query string parameters.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="folderId">The ID of the folder being accessed.</param>
             <returns>7Task of FolderItemsResponse</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.FoldersApi.ListItemsAsyncWithHttpInfo(System.String,System.String)">
             <summary>
             Gets a list of the envelopes in the specified folder. Retrieves a list of the envelopes in the specified folder. You can narrow the query by specifying search criteria in the query string parameters.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="folderId">The ID of the folder being accessed.</param>
             <returns>8Task of ApiResponse (FolderItemsResponse)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.FoldersApi.MoveEnvelopes(System.String,System.String,DocuSign.eSign.Model.FoldersRequest)">
             <summary>
             Moves an envelope from its current folder to the specified folder. Moves an envelope from its current folder to the specified folder.\n\n### Note: You can use this endpoint to delete envelopes by specifying `recyclebin&#39; in the `folderId` parameter of the endpoint. Placing an in process envelope (envelope status of `sent` or `delivered`) in the recycle bin voids the envelope. You can also use this endpoint to delete templates by specifying a template ID instead of an envelope ID in the &#39;envelopeIds&#39; property and specifying `recyclebin` in the `folderId` parameter.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="folderId">The ID of the folder being accessed.</param> <param name="foldersRequest">TBD Description</param>
             <returns>5FoldersResponse</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.FoldersApi.MoveEnvelopesWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.FoldersRequest)">
             <summary>
             Moves an envelope from its current folder to the specified folder. Moves an envelope from its current folder to the specified folder.\n\n### Note: You can use this endpoint to delete envelopes by specifying `recyclebin&#39; in the `folderId` parameter of the endpoint. Placing an in process envelope (envelope status of `sent` or `delivered`) in the recycle bin voids the envelope. You can also use this endpoint to delete templates by specifying a template ID instead of an envelope ID in the &#39;envelopeIds&#39; property and specifying `recyclebin` in the `folderId` parameter.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="folderId">The ID of the folder being accessed.</param> <param name="foldersRequest">TBD Description</param>
             <returns>6ApiResponse of FoldersResponse</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.FoldersApi.MoveEnvelopesAsync(System.String,System.String,DocuSign.eSign.Model.FoldersRequest)">
             <summary>
             Moves an envelope from its current folder to the specified folder. Moves an envelope from its current folder to the specified folder.\n\n### Note: You can use this endpoint to delete envelopes by specifying `recyclebin&#39; in the `folderId` parameter of the endpoint. Placing an in process envelope (envelope status of `sent` or `delivered`) in the recycle bin voids the envelope. You can also use this endpoint to delete templates by specifying a template ID instead of an envelope ID in the &#39;envelopeIds&#39; property and specifying `recyclebin` in the `folderId` parameter.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="folderId">The ID of the folder being accessed.</param> <param name="foldersRequest">TBD Description</param>
             <returns>7Task of FoldersResponse</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.FoldersApi.MoveEnvelopesAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.FoldersRequest)">
             <summary>
             Moves an envelope from its current folder to the specified folder. Moves an envelope from its current folder to the specified folder.\n\n### Note: You can use this endpoint to delete envelopes by specifying `recyclebin&#39; in the `folderId` parameter of the endpoint. Placing an in process envelope (envelope status of `sent` or `delivered`) in the recycle bin voids the envelope. You can also use this endpoint to delete templates by specifying a template ID instead of an envelope ID in the &#39;envelopeIds&#39; property and specifying `recyclebin` in the `folderId` parameter.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="folderId">The ID of the folder being accessed.</param> <param name="foldersRequest">TBD Description</param>
             <returns>8Task of ApiResponse (FoldersResponse)</returns>
        </member>
        <member name="T:DocuSign.eSign.Api.FoldersApi.SearchOptions">
            <summary>
            Gets a list of envelopes in folders matching the specified criteria. Retrieves a list of envelopes that match the criteria specified in the query.\n\nIf the user ID of the user making the call is the same as the user ID for any returned recipient, then the userId property is added to the returned information for those recipients.
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Api.FoldersApi.SearchOptions.includeRecipients">
            When set to **true**, the recipient information is returned in the response. 
        </member>
        <member name="P:DocuSign.eSign.Api.FoldersApi.SearchOptions.all">
            Specifies that all envelopes that match the criteria are returned. 
        </member>
        <member name="P:DocuSign.eSign.Api.FoldersApi.SearchOptions.order">
            Specifies the order in which the list is returned. Valid values are: `asc` for ascending order, and `desc` for descending order. 
        </member>
        <member name="P:DocuSign.eSign.Api.FoldersApi.SearchOptions.count">
            Specifies the number of records returned in the cache. The number must be greater than 0 and less than or equal to 100. 
        </member>
        <member name="P:DocuSign.eSign.Api.FoldersApi.SearchOptions.startPosition">
            Specifies the the starting location in the result set of the items that are returned. 
        </member>
        <member name="P:DocuSign.eSign.Api.FoldersApi.SearchOptions.fromDate">
            Specifies the start of the date range to return. If no value is provided, the default search is the previous 30 days. 
        </member>
        <member name="P:DocuSign.eSign.Api.FoldersApi.SearchOptions.toDate">
            Specifies the end of the date range to return. 
        </member>
        <member name="P:DocuSign.eSign.Api.FoldersApi.SearchOptions.orderBy">
            Specifies the property used to sort the list. Valid values are: `action_required`, `created`, `completed`, `sent`, `signer_list`, `status`, or `subject`. 
        </member>
        <member name="M:DocuSign.eSign.Api.FoldersApi.Search(System.String,System.String,DocuSign.eSign.Api.FoldersApi.SearchOptions)">
             <summary>
             Gets a list of envelopes in folders matching the specified criteria. Retrieves a list of envelopes that match the criteria specified in the query.\n\nIf the user ID of the user making the call is the same as the user ID for any returned recipient, then the userId property is added to the returned information for those recipients.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="searchFolderId">Specifies the envelope group that is searched by the request. These are logical groupings, not actual folder names. Valid values are: drafts, awaiting_my_signature, completed, out_for_signature.</param> <param name="options">Options for modifying the behavior of the function.</param>
             <returns>5FolderItemResponse</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.FoldersApi.SearchWithHttpInfo(System.String,System.String,DocuSign.eSign.Api.FoldersApi.SearchOptions)">
             <summary>
             Gets a list of envelopes in folders matching the specified criteria. Retrieves a list of envelopes that match the criteria specified in the query.\n\nIf the user ID of the user making the call is the same as the user ID for any returned recipient, then the userId property is added to the returned information for those recipients.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="searchFolderId">Specifies the envelope group that is searched by the request. These are logical groupings, not actual folder names. Valid values are: drafts, awaiting_my_signature, completed, out_for_signature.</param> <param name="options">Options for modifying the behavior of the function.</param>
             <returns>6ApiResponse of FolderItemResponse</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.FoldersApi.SearchAsync(System.String,System.String,DocuSign.eSign.Api.FoldersApi.SearchOptions)">
             <summary>
             Gets a list of envelopes in folders matching the specified criteria. Retrieves a list of envelopes that match the criteria specified in the query.\n\nIf the user ID of the user making the call is the same as the user ID for any returned recipient, then the userId property is added to the returned information for those recipients.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="searchFolderId">Specifies the envelope group that is searched by the request. These are logical groupings, not actual folder names. Valid values are: drafts, awaiting_my_signature, completed, out_for_signature.</param> <param name="options">Options for modifying the behavior of the function.</param>
             <returns>7Task of FolderItemResponse</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.FoldersApi.SearchAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Api.FoldersApi.SearchOptions)">
             <summary>
             Gets a list of envelopes in folders matching the specified criteria. Retrieves a list of envelopes that match the criteria specified in the query.\n\nIf the user ID of the user making the call is the same as the user ID for any returned recipient, then the userId property is added to the returned information for those recipients.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="searchFolderId">Specifies the envelope group that is searched by the request. These are logical groupings, not actual folder names. Valid values are: drafts, awaiting_my_signature, completed, out_for_signature.</param> <param name="options">Options for modifying the behavior of the function.</param>
             <returns>8Task of ApiResponse (FolderItemResponse)</returns>
        </member>
        <member name="T:DocuSign.eSign.Api.ITemplatesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.ListTemplates(System.String,System.String)">
             <summary>
             Gets the definition of a template.
             </summary>
             <remarks>
             Retrieves the list of templates for the specified account. The request can be limited to a specific folder.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param>
            <param name="folderId">The optional folder Id</param>
            <returns>1EnvelopeTemplateResults</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.ListTemplatesWithHttpInfo(System.String,System.String)">
             <summary>
             Gets the definition of a template.
             </summary>
             <remarks>
             Retrieves the list of templates for the specified account. The request can be limited to a specific folder.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param>
             <param name="folderId">The optional folder Id</param>
             <returns>2ApiResponse of EnvelopeTemplateResults</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.ListTemplatesAsync(System.String,System.String)">
             <summary>
             Gets the definition of a template.
             </summary>
             <remarks>
             Retrieves the list of templates for the specified account. The request can be limited to a specific folder.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param>
             <param name="folderId">The optional folder Id</param>
             <returns>3Task of EnvelopeTemplateResults</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.ListTemplatesAsyncWithHttpInfo(System.String,System.String)">
             <summary>
             Gets the definition of a template.
             </summary>
             <remarks>
             Retrieves the list of templates for the specified account. The request can be limited to a specific folder.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param>
             <param name="folderId">The optional folder Id</param>
             <returns>4Task of ApiResponse (EnvelopeTemplateResults)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.CreateTemplate(System.String,DocuSign.eSign.Model.EnvelopeTemplate)">
            <summary>
            Creates an envelope from a template.
            </summary>
            <remarks>
            Creates a template definition using a multipart request.\n\n###Template Email Subject Merge Fields\n\nCall this endpoint to insert a recipient name and email address merge fields into the email subject line when creating or sending from a template.\n\nThe merge fields, based on the recipient’s role name, are added to the `emailSubject` property when the template is created or when the template is used to create an envelope. After a template sender adds the name and email information for the recipient and sends the envelope, the recipient information is automatically merged into the appropriate fields in the email subject line.\n\nBoth the sender and the recipients will see the information in the email subject line for any emails associated with the template. This provides an easy way for senders to organize their envelope emails without having to open an envelope to check the recipient.\n### Note: If merging the recipient information into the subject line causes the subject line to exceed 100 characters, then any characters over the 100 character limit are not included in the subject line. For cases where the recipient name or email is expected to be long, you should consider placing the merge field at the start of the email subject.\n\nTo add a recipient’s name in the subject line add the following text in the `emailSubject` property when creating the template or when sending an envelope from a template:\n\n[[&lt;roleName&gt;_UserName]]\n\nExample:\n\n`\&quot;emailSubject\&quot;:\&quot;[[Signer 1_UserName]], Please sign this NDA\&quot;,`\n\nTo add a recipient’s email address in the subject line add the following text in the `emailSubject` property when creating the template or when sending an envelope from a template:\n\n[[&lt;roleName&gt;_Email]]\n\nExample:\n\n`\&quot;emailSubject\&quot;:\&quot;[[Signer 1_Email]], Please sign this NDA\&quot;,`\n\n\nIn both cases the &lt;roleName&gt; is the recipient&#39;s contents of the `roleName` property in the template.\n\nFor cases where another recipient (such as an Agent, Editor, or Intermediary recipient) is entering the name and email information for the recipient included in the email subject, then [[&lt;roleName&gt;_UserName]] or [[&lt;roleName&gt;_Email]] is shown in the email subject.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="envelopeTemplate">TBD Description</param>
             <returns>1TemplateSummary</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.CreateTemplateWithHttpInfo(System.String,DocuSign.eSign.Model.EnvelopeTemplate)">
             <summary>
             Creates an envelope from a template.
             </summary>
             <remarks>
             Creates a template definition using a multipart request.\n\n###Template Email Subject Merge Fields\n\nCall this endpoint to insert a recipient name and email address merge fields into the email subject line when creating or sending from a template.\n\nThe merge fields, based on the recipient’s role name, are added to the `emailSubject` property when the template is created or when the template is used to create an envelope. After a template sender adds the name and email information for the recipient and sends the envelope, the recipient information is automatically merged into the appropriate fields in the email subject line.\n\nBoth the sender and the recipients will see the information in the email subject line for any emails associated with the template. This provides an easy way for senders to organize their envelope emails without having to open an envelope to check the recipient.\n### Note: If merging the recipient information into the subject line causes the subject line to exceed 100 characters, then any characters over the 100 character limit are not included in the subject line. For cases where the recipient name or email is expected to be long, you should consider placing the merge field at the start of the email subject.\n\nTo add a recipient’s name in the subject line add the following text in the `emailSubject` property when creating the template or when sending an envelope from a template:\n\n[[&lt;roleName&gt;_UserName]]\n\nExample:\n\n`\&quot;emailSubject\&quot;:\&quot;[[Signer 1_UserName]], Please sign this NDA\&quot;,`\n\nTo add a recipient’s email address in the subject line add the following text in the `emailSubject` property when creating the template or when sending an envelope from a template:\n\n[[&lt;roleName&gt;_Email]]\n\nExample:\n\n`\&quot;emailSubject\&quot;:\&quot;[[Signer 1_Email]], Please sign this NDA\&quot;,`\n\n\nIn both cases the &lt;roleName&gt; is the recipient&#39;s contents of the `roleName` property in the template.\n\nFor cases where another recipient (such as an Agent, Editor, or Intermediary recipient) is entering the name and email information for the recipient included in the email subject, then [[&lt;roleName&gt;_UserName]] or [[&lt;roleName&gt;_Email]] is shown in the email subject.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="envelopeTemplate">TBD Description</param>
             <returns>2ApiResponse of TemplateSummary</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.CreateTemplateAsync(System.String,DocuSign.eSign.Model.EnvelopeTemplate)">
             <summary>
             Creates an envelope from a template.
             </summary>
             <remarks>
             Creates a template definition using a multipart request.\n\n###Template Email Subject Merge Fields\n\nCall this endpoint to insert a recipient name and email address merge fields into the email subject line when creating or sending from a template.\n\nThe merge fields, based on the recipient’s role name, are added to the `emailSubject` property when the template is created or when the template is used to create an envelope. After a template sender adds the name and email information for the recipient and sends the envelope, the recipient information is automatically merged into the appropriate fields in the email subject line.\n\nBoth the sender and the recipients will see the information in the email subject line for any emails associated with the template. This provides an easy way for senders to organize their envelope emails without having to open an envelope to check the recipient.\n### Note: If merging the recipient information into the subject line causes the subject line to exceed 100 characters, then any characters over the 100 character limit are not included in the subject line. For cases where the recipient name or email is expected to be long, you should consider placing the merge field at the start of the email subject.\n\nTo add a recipient’s name in the subject line add the following text in the `emailSubject` property when creating the template or when sending an envelope from a template:\n\n[[&lt;roleName&gt;_UserName]]\n\nExample:\n\n`\&quot;emailSubject\&quot;:\&quot;[[Signer 1_UserName]], Please sign this NDA\&quot;,`\n\nTo add a recipient’s email address in the subject line add the following text in the `emailSubject` property when creating the template or when sending an envelope from a template:\n\n[[&lt;roleName&gt;_Email]]\n\nExample:\n\n`\&quot;emailSubject\&quot;:\&quot;[[Signer 1_Email]], Please sign this NDA\&quot;,`\n\n\nIn both cases the &lt;roleName&gt; is the recipient&#39;s contents of the `roleName` property in the template.\n\nFor cases where another recipient (such as an Agent, Editor, or Intermediary recipient) is entering the name and email information for the recipient included in the email subject, then [[&lt;roleName&gt;_UserName]] or [[&lt;roleName&gt;_Email]] is shown in the email subject.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="envelopeTemplate">TBD Description</param>
             <returns>3Task of TemplateSummary</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.CreateTemplateAsyncWithHttpInfo(System.String,DocuSign.eSign.Model.EnvelopeTemplate)">
             <summary>
             Creates an envelope from a template.
             </summary>
             <remarks>
             Creates a template definition using a multipart request.\n\n###Template Email Subject Merge Fields\n\nCall this endpoint to insert a recipient name and email address merge fields into the email subject line when creating or sending from a template.\n\nThe merge fields, based on the recipient’s role name, are added to the `emailSubject` property when the template is created or when the template is used to create an envelope. After a template sender adds the name and email information for the recipient and sends the envelope, the recipient information is automatically merged into the appropriate fields in the email subject line.\n\nBoth the sender and the recipients will see the information in the email subject line for any emails associated with the template. This provides an easy way for senders to organize their envelope emails without having to open an envelope to check the recipient.\n### Note: If merging the recipient information into the subject line causes the subject line to exceed 100 characters, then any characters over the 100 character limit are not included in the subject line. For cases where the recipient name or email is expected to be long, you should consider placing the merge field at the start of the email subject.\n\nTo add a recipient’s name in the subject line add the following text in the `emailSubject` property when creating the template or when sending an envelope from a template:\n\n[[&lt;roleName&gt;_UserName]]\n\nExample:\n\n`\&quot;emailSubject\&quot;:\&quot;[[Signer 1_UserName]], Please sign this NDA\&quot;,`\n\nTo add a recipient’s email address in the subject line add the following text in the `emailSubject` property when creating the template or when sending an envelope from a template:\n\n[[&lt;roleName&gt;_Email]]\n\nExample:\n\n`\&quot;emailSubject\&quot;:\&quot;[[Signer 1_Email]], Please sign this NDA\&quot;,`\n\n\nIn both cases the &lt;roleName&gt; is the recipient&#39;s contents of the `roleName` property in the template.\n\nFor cases where another recipient (such as an Agent, Editor, or Intermediary recipient) is entering the name and email information for the recipient included in the email subject, then [[&lt;roleName&gt;_UserName]] or [[&lt;roleName&gt;_Email]] is shown in the email subject.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="envelopeTemplate">TBD Description</param>
             <returns>4Task of ApiResponse (TemplateSummary)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.Get(System.String,System.String)">
            <summary>
            Gets a list of templates for a specified account.
            </summary>
            <remarks>
            Retrieves the definition of the specified template.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param>
             <returns>1EnvelopeTemplate</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.GetWithHttpInfo(System.String,System.String)">
             <summary>
             Gets a list of templates for a specified account.
             </summary>
             <remarks>
             Retrieves the definition of the specified template.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param>
             <returns>2ApiResponse of EnvelopeTemplate</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.GetAsync(System.String,System.String)">
             <summary>
             Gets a list of templates for a specified account.
             </summary>
             <remarks>
             Retrieves the definition of the specified template.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param>
             <returns>3Task of EnvelopeTemplate</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.GetAsyncWithHttpInfo(System.String,System.String)">
             <summary>
             Gets a list of templates for a specified account.
             </summary>
             <remarks>
             Retrieves the definition of the specified template.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param>
             <returns>4Task of ApiResponse (EnvelopeTemplate)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.Update(System.String,System.String,DocuSign.eSign.Model.EnvelopeTemplate)">
            <summary>
            Updates an existing template.
            </summary>
            <remarks>
            Updates an existing template.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="envelopeTemplate">TBD Description</param>
             <returns>1TemplateUpdateSummary</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.UpdateWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.EnvelopeTemplate)">
             <summary>
             Updates an existing template.
             </summary>
             <remarks>
             Updates an existing template.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="envelopeTemplate">TBD Description</param>
             <returns>2ApiResponse of TemplateUpdateSummary</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.UpdateAsync(System.String,System.String,DocuSign.eSign.Model.EnvelopeTemplate)">
             <summary>
             Updates an existing template.
             </summary>
             <remarks>
             Updates an existing template.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="envelopeTemplate">TBD Description</param>
             <returns>3Task of TemplateUpdateSummary</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.UpdateAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.EnvelopeTemplate)">
             <summary>
             Updates an existing template.
             </summary>
             <remarks>
             Updates an existing template.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="envelopeTemplate">TBD Description</param>
             <returns>4Task of ApiResponse (TemplateUpdateSummary)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.ListCustomFields(System.String,System.String)">
            <summary>
            Gets the custom document fields from a template.
            </summary>
            <remarks>
            Retrieves the custom document field information from an existing template.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param>
             <returns>1CustomFields</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.ListCustomFieldsWithHttpInfo(System.String,System.String)">
             <summary>
             Gets the custom document fields from a template.
             </summary>
             <remarks>
             Retrieves the custom document field information from an existing template.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param>
             <returns>2ApiResponse of CustomFields</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.ListCustomFieldsAsync(System.String,System.String)">
             <summary>
             Gets the custom document fields from a template.
             </summary>
             <remarks>
             Retrieves the custom document field information from an existing template.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param>
             <returns>3Task of CustomFields</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.ListCustomFieldsAsyncWithHttpInfo(System.String,System.String)">
             <summary>
             Gets the custom document fields from a template.
             </summary>
             <remarks>
             Retrieves the custom document field information from an existing template.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param>
             <returns>4Task of ApiResponse (CustomFields)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.UpdateCustomFields(System.String,System.String,DocuSign.eSign.Model.TemplateCustomFields)">
            <summary>
            Updates envelope custom fields in a template.
            </summary>
            <remarks>
            Updates the custom fields in a template.\n\nEach custom field used in a template must have a unique name.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="templateCustomFields">TBD Description</param>
             <returns>1CustomFields</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.UpdateCustomFieldsWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.TemplateCustomFields)">
             <summary>
             Updates envelope custom fields in a template.
             </summary>
             <remarks>
             Updates the custom fields in a template.\n\nEach custom field used in a template must have a unique name.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="templateCustomFields">TBD Description</param>
             <returns>2ApiResponse of CustomFields</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.UpdateCustomFieldsAsync(System.String,System.String,DocuSign.eSign.Model.TemplateCustomFields)">
             <summary>
             Updates envelope custom fields in a template.
             </summary>
             <remarks>
             Updates the custom fields in a template.\n\nEach custom field used in a template must have a unique name.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="templateCustomFields">TBD Description</param>
             <returns>3Task of CustomFields</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.UpdateCustomFieldsAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.TemplateCustomFields)">
             <summary>
             Updates envelope custom fields in a template.
             </summary>
             <remarks>
             Updates the custom fields in a template.\n\nEach custom field used in a template must have a unique name.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="templateCustomFields">TBD Description</param>
             <returns>4Task of ApiResponse (CustomFields)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.CreateCustomFields(System.String,System.String,DocuSign.eSign.Model.TemplateCustomFields)">
            <summary>
            Creates custom document fields in an existing template document.
            </summary>
            <remarks>
            Creates custom document fields in an existing template document.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="templateCustomFields">TBD Description</param>
             <returns>1CustomFields</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.CreateCustomFieldsWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.TemplateCustomFields)">
             <summary>
             Creates custom document fields in an existing template document.
             </summary>
             <remarks>
             Creates custom document fields in an existing template document.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="templateCustomFields">TBD Description</param>
             <returns>2ApiResponse of CustomFields</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.CreateCustomFieldsAsync(System.String,System.String,DocuSign.eSign.Model.TemplateCustomFields)">
             <summary>
             Creates custom document fields in an existing template document.
             </summary>
             <remarks>
             Creates custom document fields in an existing template document.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="templateCustomFields">TBD Description</param>
             <returns>3Task of CustomFields</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.CreateCustomFieldsAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.TemplateCustomFields)">
             <summary>
             Creates custom document fields in an existing template document.
             </summary>
             <remarks>
             Creates custom document fields in an existing template document.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="templateCustomFields">TBD Description</param>
             <returns>4Task of ApiResponse (CustomFields)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.DeleteCustomFields(System.String,System.String,DocuSign.eSign.Model.TemplateCustomFields)">
            <summary>
            Deletes envelope custom fields in a template.
            </summary>
            <remarks>
            Deletes envelope custom fields in a template.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="templateCustomFields">TBD Description</param>
             <returns>1CustomFields</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.DeleteCustomFieldsWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.TemplateCustomFields)">
             <summary>
             Deletes envelope custom fields in a template.
             </summary>
             <remarks>
             Deletes envelope custom fields in a template.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="templateCustomFields">TBD Description</param>
             <returns>2ApiResponse of CustomFields</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.DeleteCustomFieldsAsync(System.String,System.String,DocuSign.eSign.Model.TemplateCustomFields)">
             <summary>
             Deletes envelope custom fields in a template.
             </summary>
             <remarks>
             Deletes envelope custom fields in a template.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="templateCustomFields">TBD Description</param>
             <returns>3Task of CustomFields</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.DeleteCustomFieldsAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.TemplateCustomFields)">
             <summary>
             Deletes envelope custom fields in a template.
             </summary>
             <remarks>
             Deletes envelope custom fields in a template.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="templateCustomFields">TBD Description</param>
             <returns>4Task of ApiResponse (CustomFields)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.ListDocuments(System.String,System.String)">
            <summary>
            Gets a list of documents associated with a template.
            </summary>
            <remarks>
            Retrieves a list of documents associated with the specified template.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param>
             <returns>1TemplateDocumentsResult</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.ListDocumentsWithHttpInfo(System.String,System.String)">
             <summary>
             Gets a list of documents associated with a template.
             </summary>
             <remarks>
             Retrieves a list of documents associated with the specified template.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param>
             <returns>2ApiResponse of TemplateDocumentsResult</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.ListDocumentsAsync(System.String,System.String)">
             <summary>
             Gets a list of documents associated with a template.
             </summary>
             <remarks>
             Retrieves a list of documents associated with the specified template.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param>
             <returns>3Task of TemplateDocumentsResult</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.ListDocumentsAsyncWithHttpInfo(System.String,System.String)">
             <summary>
             Gets a list of documents associated with a template.
             </summary>
             <remarks>
             Retrieves a list of documents associated with the specified template.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param>
             <returns>4Task of ApiResponse (TemplateDocumentsResult)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.UpdateDocuments(System.String,System.String,DocuSign.eSign.Model.EnvelopeDefinition)">
            <summary>
            Adds documents to a template document.
            </summary>
            <remarks>
            Adds one or more documents to an existing template document.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="envelopeDefinition">TBD Description</param>
             <returns>1TemplateDocumentsResult</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.UpdateDocumentsWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.EnvelopeDefinition)">
             <summary>
             Adds documents to a template document.
             </summary>
             <remarks>
             Adds one or more documents to an existing template document.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="envelopeDefinition">TBD Description</param>
             <returns>2ApiResponse of TemplateDocumentsResult</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.UpdateDocumentsAsync(System.String,System.String,DocuSign.eSign.Model.EnvelopeDefinition)">
             <summary>
             Adds documents to a template document.
             </summary>
             <remarks>
             Adds one or more documents to an existing template document.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="envelopeDefinition">TBD Description</param>
             <returns>3Task of TemplateDocumentsResult</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.UpdateDocumentsAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.EnvelopeDefinition)">
             <summary>
             Adds documents to a template document.
             </summary>
             <remarks>
             Adds one or more documents to an existing template document.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="envelopeDefinition">TBD Description</param>
             <returns>4Task of ApiResponse (TemplateDocumentsResult)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.DeleteDocuments(System.String,System.String,DocuSign.eSign.Model.EnvelopeDefinition)">
            <summary>
            Deletes documents from a template.
            </summary>
            <remarks>
            Deletes one or more documents from an existing template.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="envelopeDefinition">TBD Description</param>
             <returns>1TemplateDocumentsResult</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.DeleteDocumentsWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.EnvelopeDefinition)">
             <summary>
             Deletes documents from a template.
             </summary>
             <remarks>
             Deletes one or more documents from an existing template.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="envelopeDefinition">TBD Description</param>
             <returns>2ApiResponse of TemplateDocumentsResult</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.DeleteDocumentsAsync(System.String,System.String,DocuSign.eSign.Model.EnvelopeDefinition)">
             <summary>
             Deletes documents from a template.
             </summary>
             <remarks>
             Deletes one or more documents from an existing template.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="envelopeDefinition">TBD Description</param>
             <returns>3Task of TemplateDocumentsResult</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.DeleteDocumentsAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.EnvelopeDefinition)">
             <summary>
             Deletes documents from a template.
             </summary>
             <remarks>
             Deletes one or more documents from an existing template.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="envelopeDefinition">TBD Description</param>
             <returns>4Task of ApiResponse (TemplateDocumentsResult)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.GetDocument(System.String,System.String,System.String)">
            <summary>
            Gets PDF documents from a template.
            </summary>
            <remarks>
            Retrieves one or more PDF documents from the specified template.\n\nYou can specify the ID of the document to retrieve or can specify `combined` to retrieve all documents in the template as one pdf.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="documentId">The ID of the document being accessed.</param>
             <returns>1Stream</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.GetDocumentWithHttpInfo(System.String,System.String,System.String)">
             <summary>
             Gets PDF documents from a template.
             </summary>
             <remarks>
             Retrieves one or more PDF documents from the specified template.\n\nYou can specify the ID of the document to retrieve or can specify `combined` to retrieve all documents in the template as one pdf.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="documentId">The ID of the document being accessed.</param>
             <returns>2ApiResponse of Stream</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.GetDocumentAsync(System.String,System.String,System.String)">
             <summary>
             Gets PDF documents from a template.
             </summary>
             <remarks>
             Retrieves one or more PDF documents from the specified template.\n\nYou can specify the ID of the document to retrieve or can specify `combined` to retrieve all documents in the template as one pdf.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="documentId">The ID of the document being accessed.</param>
             <returns>3Task of Stream</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.GetDocumentAsyncWithHttpInfo(System.String,System.String,System.String)">
             <summary>
             Gets PDF documents from a template.
             </summary>
             <remarks>
             Retrieves one or more PDF documents from the specified template.\n\nYou can specify the ID of the document to retrieve or can specify `combined` to retrieve all documents in the template as one pdf.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="documentId">The ID of the document being accessed.</param>
             <returns>4Task of ApiResponse (Stream)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.ListDocumentFields(System.String,System.String,System.String)">
            <summary>
            Gets the custom document fields for a an existing template document.
            </summary>
            <remarks>
            Retrieves the custom document fields for an existing template document.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="documentId">The ID of the document being accessed.</param>
             <returns>1DocumentFieldsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.ListDocumentFieldsWithHttpInfo(System.String,System.String,System.String)">
             <summary>
             Gets the custom document fields for a an existing template document.
             </summary>
             <remarks>
             Retrieves the custom document fields for an existing template document.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="documentId">The ID of the document being accessed.</param>
             <returns>2ApiResponse of DocumentFieldsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.ListDocumentFieldsAsync(System.String,System.String,System.String)">
             <summary>
             Gets the custom document fields for a an existing template document.
             </summary>
             <remarks>
             Retrieves the custom document fields for an existing template document.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="documentId">The ID of the document being accessed.</param>
             <returns>3Task of DocumentFieldsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.ListDocumentFieldsAsyncWithHttpInfo(System.String,System.String,System.String)">
             <summary>
             Gets the custom document fields for a an existing template document.
             </summary>
             <remarks>
             Retrieves the custom document fields for an existing template document.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="documentId">The ID of the document being accessed.</param>
             <returns>4Task of ApiResponse (DocumentFieldsInformation)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.UpdateDocumentFields(System.String,System.String,System.String,DocuSign.eSign.Model.DocumentFieldsInformation)">
            <summary>
            Updates existing custom document fields in an existing template document.
            </summary>
            <remarks>
            Updates existing custom document fields in an existing template document.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="documentId">The ID of the document being accessed.</param> <param name="documentFieldsInformation">TBD Description</param>
             <returns>1DocumentFieldsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.UpdateDocumentFieldsWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.DocumentFieldsInformation)">
             <summary>
             Updates existing custom document fields in an existing template document.
             </summary>
             <remarks>
             Updates existing custom document fields in an existing template document.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="documentId">The ID of the document being accessed.</param> <param name="documentFieldsInformation">TBD Description</param>
             <returns>2ApiResponse of DocumentFieldsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.UpdateDocumentFieldsAsync(System.String,System.String,System.String,DocuSign.eSign.Model.DocumentFieldsInformation)">
             <summary>
             Updates existing custom document fields in an existing template document.
             </summary>
             <remarks>
             Updates existing custom document fields in an existing template document.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="documentId">The ID of the document being accessed.</param> <param name="documentFieldsInformation">TBD Description</param>
             <returns>3Task of DocumentFieldsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.UpdateDocumentFieldsAsyncWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.DocumentFieldsInformation)">
             <summary>
             Updates existing custom document fields in an existing template document.
             </summary>
             <remarks>
             Updates existing custom document fields in an existing template document.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="documentId">The ID of the document being accessed.</param> <param name="documentFieldsInformation">TBD Description</param>
             <returns>4Task of ApiResponse (DocumentFieldsInformation)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.CreateDocumentFields(System.String,System.String,System.String,DocuSign.eSign.Model.DocumentFieldsInformation)">
            <summary>
            Creates custom document fields in an existing template document.
            </summary>
            <remarks>
            Creates custom document fields in an existing template document.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="documentId">The ID of the document being accessed.</param> <param name="documentFieldsInformation">TBD Description</param>
             <returns>1DocumentFieldsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.CreateDocumentFieldsWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.DocumentFieldsInformation)">
             <summary>
             Creates custom document fields in an existing template document.
             </summary>
             <remarks>
             Creates custom document fields in an existing template document.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="documentId">The ID of the document being accessed.</param> <param name="documentFieldsInformation">TBD Description</param>
             <returns>2ApiResponse of DocumentFieldsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.CreateDocumentFieldsAsync(System.String,System.String,System.String,DocuSign.eSign.Model.DocumentFieldsInformation)">
             <summary>
             Creates custom document fields in an existing template document.
             </summary>
             <remarks>
             Creates custom document fields in an existing template document.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="documentId">The ID of the document being accessed.</param> <param name="documentFieldsInformation">TBD Description</param>
             <returns>3Task of DocumentFieldsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.CreateDocumentFieldsAsyncWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.DocumentFieldsInformation)">
             <summary>
             Creates custom document fields in an existing template document.
             </summary>
             <remarks>
             Creates custom document fields in an existing template document.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="documentId">The ID of the document being accessed.</param> <param name="documentFieldsInformation">TBD Description</param>
             <returns>4Task of ApiResponse (DocumentFieldsInformation)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.DeleteDocumentFields(System.String,System.String,System.String,DocuSign.eSign.Model.DocumentFieldsInformation)">
            <summary>
            Deletes custom document fields from an existing template document.
            </summary>
            <remarks>
            Deletes custom document fields from an existing template document.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="documentId">The ID of the document being accessed.</param> <param name="documentFieldsInformation">TBD Description</param>
             <returns>1DocumentFieldsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.DeleteDocumentFieldsWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.DocumentFieldsInformation)">
             <summary>
             Deletes custom document fields from an existing template document.
             </summary>
             <remarks>
             Deletes custom document fields from an existing template document.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="documentId">The ID of the document being accessed.</param> <param name="documentFieldsInformation">TBD Description</param>
             <returns>2ApiResponse of DocumentFieldsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.DeleteDocumentFieldsAsync(System.String,System.String,System.String,DocuSign.eSign.Model.DocumentFieldsInformation)">
             <summary>
             Deletes custom document fields from an existing template document.
             </summary>
             <remarks>
             Deletes custom document fields from an existing template document.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="documentId">The ID of the document being accessed.</param> <param name="documentFieldsInformation">TBD Description</param>
             <returns>3Task of DocumentFieldsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.DeleteDocumentFieldsAsyncWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.DocumentFieldsInformation)">
             <summary>
             Deletes custom document fields from an existing template document.
             </summary>
             <remarks>
             Deletes custom document fields from an existing template document.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="documentId">The ID of the document being accessed.</param> <param name="documentFieldsInformation">TBD Description</param>
             <returns>4Task of ApiResponse (DocumentFieldsInformation)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.DeleteDocumentPage(System.String,System.String,System.String,System.String,DocuSign.eSign.Model.PageRequest)">
            <summary>
            Deletes a page from a document in an template.
            </summary>
            <remarks>
            Deletes a page from a document in a template based on the page number.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="documentId">The ID of the document being accessed.</param><param name="pageNumber">The page number being accessed.</param> <param name="pageRequest">TBD Description</param>
             <returns>1</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.DeleteDocumentPageWithHttpInfo(System.String,System.String,System.String,System.String,DocuSign.eSign.Model.PageRequest)">
             <summary>
             Deletes a page from a document in an template.
             </summary>
             <remarks>
             Deletes a page from a document in a template based on the page number.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="documentId">The ID of the document being accessed.</param><param name="pageNumber">The page number being accessed.</param> <param name="pageRequest">TBD Description</param>
             <returns>2ApiResponse of Object(void)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.DeleteDocumentPageAsync(System.String,System.String,System.String,System.String,DocuSign.eSign.Model.PageRequest)">
             <summary>
             Deletes a page from a document in an template.
             </summary>
             <remarks>
             Deletes a page from a document in a template based on the page number.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="documentId">The ID of the document being accessed.</param><param name="pageNumber">The page number being accessed.</param> <param name="pageRequest">TBD Description</param>
             <returns>3Task of void</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.DeleteDocumentPageAsyncWithHttpInfo(System.String,System.String,System.String,System.String,DocuSign.eSign.Model.PageRequest)">
             <summary>
             Deletes a page from a document in an template.
             </summary>
             <remarks>
             Deletes a page from a document in a template based on the page number.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="documentId">The ID of the document being accessed.</param><param name="pageNumber">The page number being accessed.</param> <param name="pageRequest">TBD Description</param>
             <returns>4Task of ApiResponse</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.GetLock(System.String,System.String)">
            <summary>
            Gets template lock information.
            </summary>
            <remarks>
            Retrieves general information about the template lock.\n\nIf the call is made by the locked by user and the request has the same integrator key as original, then the `X-DocuSign-Edit` header and additional lock information is included in the response. This allows users to recover a lost editing session token and the `X-DocuSign-Edit` header.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param>
             <returns>1LockInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.GetLockWithHttpInfo(System.String,System.String)">
             <summary>
             Gets template lock information.
             </summary>
             <remarks>
             Retrieves general information about the template lock.\n\nIf the call is made by the locked by user and the request has the same integrator key as original, then the `X-DocuSign-Edit` header and additional lock information is included in the response. This allows users to recover a lost editing session token and the `X-DocuSign-Edit` header.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param>
             <returns>2ApiResponse of LockInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.GetLockAsync(System.String,System.String)">
             <summary>
             Gets template lock information.
             </summary>
             <remarks>
             Retrieves general information about the template lock.\n\nIf the call is made by the locked by user and the request has the same integrator key as original, then the `X-DocuSign-Edit` header and additional lock information is included in the response. This allows users to recover a lost editing session token and the `X-DocuSign-Edit` header.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param>
             <returns>3Task of LockInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.GetLockAsyncWithHttpInfo(System.String,System.String)">
             <summary>
             Gets template lock information.
             </summary>
             <remarks>
             Retrieves general information about the template lock.\n\nIf the call is made by the locked by user and the request has the same integrator key as original, then the `X-DocuSign-Edit` header and additional lock information is included in the response. This allows users to recover a lost editing session token and the `X-DocuSign-Edit` header.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param>
             <returns>4Task of ApiResponse (LockInformation)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.GetNotificationSettings(System.String,System.String)">
            <summary>
            Gets template notification information.
            </summary>
            <remarks>
            Retrieves the envelope notification, reminders and expirations, information for an existing template.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param>
             <returns>1Notification</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.GetNotificationSettingsWithHttpInfo(System.String,System.String)">
             <summary>
             Gets template notification information.
             </summary>
             <remarks>
             Retrieves the envelope notification, reminders and expirations, information for an existing template.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param>
             <returns>2ApiResponse of Notification</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.GetNotificationSettingsAsync(System.String,System.String)">
             <summary>
             Gets template notification information.
             </summary>
             <remarks>
             Retrieves the envelope notification, reminders and expirations, information for an existing template.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param>
             <returns>3Task of Notification</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.GetNotificationSettingsAsyncWithHttpInfo(System.String,System.String)">
             <summary>
             Gets template notification information.
             </summary>
             <remarks>
             Retrieves the envelope notification, reminders and expirations, information for an existing template.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param>
             <returns>4Task of ApiResponse (Notification)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.UpdateNotificationSettings(System.String,System.String,DocuSign.eSign.Model.TemplateNotificationRequest)">
            <summary>
            Updates the notification  structure for an existing template.
            </summary>
            <remarks>
            Updates the notification structure for an existing template. Use this endpoint to set reminder and expiration notifications.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="templateNotificationRequest">TBD Description</param>
             <returns>1Notification</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.UpdateNotificationSettingsWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.TemplateNotificationRequest)">
             <summary>
             Updates the notification  structure for an existing template.
             </summary>
             <remarks>
             Updates the notification structure for an existing template. Use this endpoint to set reminder and expiration notifications.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="templateNotificationRequest">TBD Description</param>
             <returns>2ApiResponse of Notification</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.UpdateNotificationSettingsAsync(System.String,System.String,DocuSign.eSign.Model.TemplateNotificationRequest)">
             <summary>
             Updates the notification  structure for an existing template.
             </summary>
             <remarks>
             Updates the notification structure for an existing template. Use this endpoint to set reminder and expiration notifications.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="templateNotificationRequest">TBD Description</param>
             <returns>3Task of Notification</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.UpdateNotificationSettingsAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.TemplateNotificationRequest)">
             <summary>
             Updates the notification  structure for an existing template.
             </summary>
             <remarks>
             Updates the notification structure for an existing template. Use this endpoint to set reminder and expiration notifications.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="templateNotificationRequest">TBD Description</param>
             <returns>4Task of ApiResponse (Notification)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.ListRecipients(System.String,System.String)">
            <summary>
            Gets recipient information from a template.
            </summary>
            <remarks>
            Retrieves the information for all recipients in the specified template.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param>
             <returns>1Recipients</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.ListRecipientsWithHttpInfo(System.String,System.String)">
             <summary>
             Gets recipient information from a template.
             </summary>
             <remarks>
             Retrieves the information for all recipients in the specified template.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param>
             <returns>2ApiResponse of Recipients</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.ListRecipientsAsync(System.String,System.String)">
             <summary>
             Gets recipient information from a template.
             </summary>
             <remarks>
             Retrieves the information for all recipients in the specified template.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param>
             <returns>3Task of Recipients</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.ListRecipientsAsyncWithHttpInfo(System.String,System.String)">
             <summary>
             Gets recipient information from a template.
             </summary>
             <remarks>
             Retrieves the information for all recipients in the specified template.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param>
             <returns>4Task of ApiResponse (Recipients)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.UpdateRecipients(System.String,System.String,DocuSign.eSign.Model.TemplateRecipients)">
            <summary>
            Updates recipients in a template.
            </summary>
            <remarks>
            Updates recipients in a template. \n\nYou can edit the following properties: `email`, `userName`, `routingOrder`, `faxNumber`, `deliveryMethod`, `accessCode`, and `requireIdLookup`.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="templateRecipients">TBD Description</param>
             <returns>1RecipientsUpdateSummary</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.UpdateRecipientsWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.TemplateRecipients)">
             <summary>
             Updates recipients in a template.
             </summary>
             <remarks>
             Updates recipients in a template. \n\nYou can edit the following properties: `email`, `userName`, `routingOrder`, `faxNumber`, `deliveryMethod`, `accessCode`, and `requireIdLookup`.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="templateRecipients">TBD Description</param>
             <returns>2ApiResponse of RecipientsUpdateSummary</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.UpdateRecipientsAsync(System.String,System.String,DocuSign.eSign.Model.TemplateRecipients)">
             <summary>
             Updates recipients in a template.
             </summary>
             <remarks>
             Updates recipients in a template. \n\nYou can edit the following properties: `email`, `userName`, `routingOrder`, `faxNumber`, `deliveryMethod`, `accessCode`, and `requireIdLookup`.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="templateRecipients">TBD Description</param>
             <returns>3Task of RecipientsUpdateSummary</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.UpdateRecipientsAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.TemplateRecipients)">
             <summary>
             Updates recipients in a template.
             </summary>
             <remarks>
             Updates recipients in a template. \n\nYou can edit the following properties: `email`, `userName`, `routingOrder`, `faxNumber`, `deliveryMethod`, `accessCode`, and `requireIdLookup`.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="templateRecipients">TBD Description</param>
             <returns>4Task of ApiResponse (RecipientsUpdateSummary)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.CreateRecipients(System.String,System.String,DocuSign.eSign.Model.TemplateRecipients)">
            <summary>
            Adds tabs for a recipient.
            </summary>
            <remarks>
            Adds one or more recipients to a template.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="templateRecipients">TBD Description</param>
             <returns>1Recipients</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.CreateRecipientsWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.TemplateRecipients)">
             <summary>
             Adds tabs for a recipient.
             </summary>
             <remarks>
             Adds one or more recipients to a template.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="templateRecipients">TBD Description</param>
             <returns>2ApiResponse of Recipients</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.CreateRecipientsAsync(System.String,System.String,DocuSign.eSign.Model.TemplateRecipients)">
             <summary>
             Adds tabs for a recipient.
             </summary>
             <remarks>
             Adds one or more recipients to a template.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="templateRecipients">TBD Description</param>
             <returns>3Task of Recipients</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.CreateRecipientsAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.TemplateRecipients)">
             <summary>
             Adds tabs for a recipient.
             </summary>
             <remarks>
             Adds one or more recipients to a template.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="templateRecipients">TBD Description</param>
             <returns>4Task of ApiResponse (Recipients)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.DeleteRecipients(System.String,System.String,DocuSign.eSign.Model.TemplateRecipients)">
            <summary>
            Deletes recipients from a template.
            </summary>
            <remarks>
            Deletes one or more recipients from a template. Recipients to be deleted are listed in the request, with the `recipientId` being used as the key for deleting recipients.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="templateRecipients">TBD Description</param>
             <returns>1Recipients</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.DeleteRecipientsWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.TemplateRecipients)">
             <summary>
             Deletes recipients from a template.
             </summary>
             <remarks>
             Deletes one or more recipients from a template. Recipients to be deleted are listed in the request, with the `recipientId` being used as the key for deleting recipients.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="templateRecipients">TBD Description</param>
             <returns>2ApiResponse of Recipients</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.DeleteRecipientsAsync(System.String,System.String,DocuSign.eSign.Model.TemplateRecipients)">
             <summary>
             Deletes recipients from a template.
             </summary>
             <remarks>
             Deletes one or more recipients from a template. Recipients to be deleted are listed in the request, with the `recipientId` being used as the key for deleting recipients.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="templateRecipients">TBD Description</param>
             <returns>3Task of Recipients</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.DeleteRecipientsAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.TemplateRecipients)">
             <summary>
             Deletes recipients from a template.
             </summary>
             <remarks>
             Deletes one or more recipients from a template. Recipients to be deleted are listed in the request, with the `recipientId` being used as the key for deleting recipients.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="templateRecipients">TBD Description</param>
             <returns>4Task of ApiResponse (Recipients)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.DeleteRecipient(System.String,System.String,System.String,DocuSign.eSign.Model.TemplateRecipients)">
            <summary>
            Deletes the specified recipient file from a template.
            </summary>
            <remarks>
            Deletes the specified recipient file from the specified template.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="templateRecipients">TBD Description</param>
             <returns>1Recipients</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.DeleteRecipientWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.TemplateRecipients)">
             <summary>
             Deletes the specified recipient file from a template.
             </summary>
             <remarks>
             Deletes the specified recipient file from the specified template.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="templateRecipients">TBD Description</param>
             <returns>2ApiResponse of Recipients</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.DeleteRecipientAsync(System.String,System.String,System.String,DocuSign.eSign.Model.TemplateRecipients)">
             <summary>
             Deletes the specified recipient file from a template.
             </summary>
             <remarks>
             Deletes the specified recipient file from the specified template.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="templateRecipients">TBD Description</param>
             <returns>3Task of Recipients</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.DeleteRecipientAsyncWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.TemplateRecipients)">
             <summary>
             Deletes the specified recipient file from a template.
             </summary>
             <remarks>
             Deletes the specified recipient file from the specified template.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="templateRecipients">TBD Description</param>
             <returns>4Task of ApiResponse (Recipients)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.ListTabs(System.String,System.String,System.String,DocuSign.eSign.Model.Tabs)">
            <summary>
            Gets the tabs information for a signer or sign-in-person recipient in a template.
            </summary>
            <remarks>
            Gets the tabs information for a signer or sign-in-person recipient in a template.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="tabs">TBD Description</param>
             <returns>1Tabs</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.ListTabsWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.Tabs)">
             <summary>
             Gets the tabs information for a signer or sign-in-person recipient in a template.
             </summary>
             <remarks>
             Gets the tabs information for a signer or sign-in-person recipient in a template.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="tabs">TBD Description</param>
             <returns>2ApiResponse of Tabs</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.ListTabsAsync(System.String,System.String,System.String,DocuSign.eSign.Model.Tabs)">
             <summary>
             Gets the tabs information for a signer or sign-in-person recipient in a template.
             </summary>
             <remarks>
             Gets the tabs information for a signer or sign-in-person recipient in a template.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="tabs">TBD Description</param>
             <returns>3Task of Tabs</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.ListTabsAsyncWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.Tabs)">
             <summary>
             Gets the tabs information for a signer or sign-in-person recipient in a template.
             </summary>
             <remarks>
             Gets the tabs information for a signer or sign-in-person recipient in a template.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="tabs">TBD Description</param>
             <returns>4Task of ApiResponse (Tabs)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.UpdateTabs(System.String,System.String,System.String,DocuSign.eSign.Model.TemplateTabs)">
            <summary>
            Updates the tabs for a recipient.
            </summary>
            <remarks>
            Updates one or more tabs for a recipient in a template.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="templateTabs">TBD Description</param>
             <returns>1Tabs</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.UpdateTabsWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.TemplateTabs)">
             <summary>
             Updates the tabs for a recipient.
             </summary>
             <remarks>
             Updates one or more tabs for a recipient in a template.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="templateTabs">TBD Description</param>
             <returns>2ApiResponse of Tabs</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.UpdateTabsAsync(System.String,System.String,System.String,DocuSign.eSign.Model.TemplateTabs)">
             <summary>
             Updates the tabs for a recipient.
             </summary>
             <remarks>
             Updates one or more tabs for a recipient in a template.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="templateTabs">TBD Description</param>
             <returns>3Task of Tabs</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.UpdateTabsAsyncWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.TemplateTabs)">
             <summary>
             Updates the tabs for a recipient.
             </summary>
             <remarks>
             Updates one or more tabs for a recipient in a template.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="templateTabs">TBD Description</param>
             <returns>4Task of ApiResponse (Tabs)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.CreateTabs(System.String,System.String,System.String,DocuSign.eSign.Model.TemplateTabs)">
            <summary>
            Adds tabs for a recipient.
            </summary>
            <remarks>
            Adds one or more tabs for a recipient.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="templateTabs">TBD Description</param>
             <returns>1Tabs</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.CreateTabsWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.TemplateTabs)">
             <summary>
             Adds tabs for a recipient.
             </summary>
             <remarks>
             Adds one or more tabs for a recipient.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="templateTabs">TBD Description</param>
             <returns>2ApiResponse of Tabs</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.CreateTabsAsync(System.String,System.String,System.String,DocuSign.eSign.Model.TemplateTabs)">
             <summary>
             Adds tabs for a recipient.
             </summary>
             <remarks>
             Adds one or more tabs for a recipient.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="templateTabs">TBD Description</param>
             <returns>3Task of Tabs</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.CreateTabsAsyncWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.TemplateTabs)">
             <summary>
             Adds tabs for a recipient.
             </summary>
             <remarks>
             Adds one or more tabs for a recipient.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="templateTabs">TBD Description</param>
             <returns>4Task of ApiResponse (Tabs)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.DeleteTabs(System.String,System.String,System.String,DocuSign.eSign.Model.TemplateTabs)">
            <summary>
            Deletes the tabs associated with a recipient in a template.
            </summary>
            <remarks>
            Deletes one or more tabs associated with a recipient in a template.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="templateTabs">TBD Description</param>
             <returns>1Tabs</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.DeleteTabsWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.TemplateTabs)">
             <summary>
             Deletes the tabs associated with a recipient in a template.
             </summary>
             <remarks>
             Deletes one or more tabs associated with a recipient in a template.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="templateTabs">TBD Description</param>
             <returns>2ApiResponse of Tabs</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.DeleteTabsAsync(System.String,System.String,System.String,DocuSign.eSign.Model.TemplateTabs)">
             <summary>
             Deletes the tabs associated with a recipient in a template.
             </summary>
             <remarks>
             Deletes one or more tabs associated with a recipient in a template.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="templateTabs">TBD Description</param>
             <returns>3Task of Tabs</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.DeleteTabsAsyncWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.TemplateTabs)">
             <summary>
             Deletes the tabs associated with a recipient in a template.
             </summary>
             <remarks>
             Deletes one or more tabs associated with a recipient in a template.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="templateTabs">TBD Description</param>
             <returns>4Task of ApiResponse (Tabs)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.UpdateGroupShare(System.String,System.String,System.String,DocuSign.eSign.Model.GroupInformation)">
            <summary>
            Shares a template with a group
            </summary>
            <remarks>
            Shares a template with the specified members group.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="templatePart">Currently, the only defined part is **groups**.</param> <param name="groupInformation">TBD Description</param>
             <returns>1GroupInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.UpdateGroupShareWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.GroupInformation)">
             <summary>
             Shares a template with a group
             </summary>
             <remarks>
             Shares a template with the specified members group.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="templatePart">Currently, the only defined part is **groups**.</param> <param name="groupInformation">TBD Description</param>
             <returns>2ApiResponse of GroupInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.UpdateGroupShareAsync(System.String,System.String,System.String,DocuSign.eSign.Model.GroupInformation)">
             <summary>
             Shares a template with a group
             </summary>
             <remarks>
             Shares a template with the specified members group.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="templatePart">Currently, the only defined part is **groups**.</param> <param name="groupInformation">TBD Description</param>
             <returns>3Task of GroupInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.UpdateGroupShareAsyncWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.GroupInformation)">
             <summary>
             Shares a template with a group
             </summary>
             <remarks>
             Shares a template with the specified members group.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="templatePart">Currently, the only defined part is **groups**.</param> <param name="groupInformation">TBD Description</param>
             <returns>4Task of ApiResponse (GroupInformation)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.DeleteGroupShare(System.String,System.String,System.String,DocuSign.eSign.Model.GroupInformation)">
            <summary>
            Removes a member group&#39;s sharing permissions for a template.
            </summary>
            <remarks>
            Removes a member group&#39;s sharing permissions for a specified template.
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="templatePart">Currently, the only defined part is **groups**.</param> <param name="groupInformation">TBD Description</param>
             <returns>1GroupInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.DeleteGroupShareWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.GroupInformation)">
             <summary>
             Removes a member group&#39;s sharing permissions for a template.
             </summary>
             <remarks>
             Removes a member group&#39;s sharing permissions for a specified template.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="templatePart">Currently, the only defined part is **groups**.</param> <param name="groupInformation">TBD Description</param>
             <returns>2ApiResponse of GroupInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.DeleteGroupShareAsync(System.String,System.String,System.String,DocuSign.eSign.Model.GroupInformation)">
             <summary>
             Removes a member group&#39;s sharing permissions for a template.
             </summary>
             <remarks>
             Removes a member group&#39;s sharing permissions for a specified template.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="templatePart">Currently, the only defined part is **groups**.</param> <param name="groupInformation">TBD Description</param>
             <returns>3Task of GroupInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.ITemplatesApi.DeleteGroupShareAsyncWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.GroupInformation)">
             <summary>
             Removes a member group&#39;s sharing permissions for a template.
             </summary>
             <remarks>
             Removes a member group&#39;s sharing permissions for a specified template.
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="templatePart">Currently, the only defined part is **groups**.</param> <param name="groupInformation">TBD Description</param>
             <returns>4Task of ApiResponse (GroupInformation)</returns>
        </member>
        <member name="T:DocuSign.eSign.Api.TemplatesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.eSign.Api.TemplatesApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.#ctor(DocuSign.eSign.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.eSign.Api.TemplatesApi"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:DocuSign.eSign.Api.TemplatesApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.ListTemplates(System.String,System.String)">
             <summary>
             Gets the definition of a template. Retrieves the list of templates for the specified account. The request can be limited to a specific folder.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param>
             <param name="folderId">The optional folder Id</param>
             <returns>5EnvelopeTemplateResults</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.ListTemplatesWithHttpInfo(System.String,System.String)">
             <summary>
             Gets the definition of a template. Retrieves the list of templates for the specified account. The request can be limited to a specific folder.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param>
             <param name="folderId">The optional folder Id</param>
             <returns>6ApiResponse of EnvelopeTemplateResults</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.ListTemplatesAsync(System.String,System.String)">
             <summary>
             Gets the definition of a template. Retrieves the list of templates for the specified account. The request can be limited to a specific folder.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param>
             <param name="folderId">The optional folder Id</param>
             <returns>7Task of EnvelopeTemplateResults</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.ListTemplatesAsyncWithHttpInfo(System.String,System.String)">
             <summary>
             Gets the definition of a template. Retrieves the list of templates for the specified account. The request can be limited to a specific folder.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param>
             <param name="folderId">The optional folder Id</param>
             <returns>8Task of ApiResponse (EnvelopeTemplateResults)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.CreateTemplate(System.String,DocuSign.eSign.Model.EnvelopeTemplate)">
             <summary>
             Creates an envelope from a template. Creates a template definition using a multipart request.\n\n###Template Email Subject Merge Fields\n\nCall this endpoint to insert a recipient name and email address merge fields into the email subject line when creating or sending from a template.\n\nThe merge fields, based on the recipient’s role name, are added to the `emailSubject` property when the template is created or when the template is used to create an envelope. After a template sender adds the name and email information for the recipient and sends the envelope, the recipient information is automatically merged into the appropriate fields in the email subject line.\n\nBoth the sender and the recipients will see the information in the email subject line for any emails associated with the template. This provides an easy way for senders to organize their envelope emails without having to open an envelope to check the recipient.\n### Note: If merging the recipient information into the subject line causes the subject line to exceed 100 characters, then any characters over the 100 character limit are not included in the subject line. For cases where the recipient name or email is expected to be long, you should consider placing the merge field at the start of the email subject.\n\nTo add a recipient’s name in the subject line add the following text in the `emailSubject` property when creating the template or when sending an envelope from a template:\n\n[[&lt;roleName&gt;_UserName]]\n\nExample:\n\n`\&quot;emailSubject\&quot;:\&quot;[[Signer 1_UserName]], Please sign this NDA\&quot;,`\n\nTo add a recipient’s email address in the subject line add the following text in the `emailSubject` property when creating the template or when sending an envelope from a template:\n\n[[&lt;roleName&gt;_Email]]\n\nExample:\n\n`\&quot;emailSubject\&quot;:\&quot;[[Signer 1_Email]], Please sign this NDA\&quot;,`\n\n\nIn both cases the &lt;roleName&gt; is the recipient&#39;s contents of the `roleName` property in the template.\n\nFor cases where another recipient (such as an Agent, Editor, or Intermediary recipient) is entering the name and email information for the recipient included in the email subject, then [[&lt;roleName&gt;_UserName]] or [[&lt;roleName&gt;_Email]] is shown in the email subject.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="envelopeTemplate">TBD Description</param>
             <returns>5TemplateSummary</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.CreateTemplateWithHttpInfo(System.String,DocuSign.eSign.Model.EnvelopeTemplate)">
             <summary>
             Creates an envelope from a template. Creates a template definition using a multipart request.\n\n###Template Email Subject Merge Fields\n\nCall this endpoint to insert a recipient name and email address merge fields into the email subject line when creating or sending from a template.\n\nThe merge fields, based on the recipient’s role name, are added to the `emailSubject` property when the template is created or when the template is used to create an envelope. After a template sender adds the name and email information for the recipient and sends the envelope, the recipient information is automatically merged into the appropriate fields in the email subject line.\n\nBoth the sender and the recipients will see the information in the email subject line for any emails associated with the template. This provides an easy way for senders to organize their envelope emails without having to open an envelope to check the recipient.\n### Note: If merging the recipient information into the subject line causes the subject line to exceed 100 characters, then any characters over the 100 character limit are not included in the subject line. For cases where the recipient name or email is expected to be long, you should consider placing the merge field at the start of the email subject.\n\nTo add a recipient’s name in the subject line add the following text in the `emailSubject` property when creating the template or when sending an envelope from a template:\n\n[[&lt;roleName&gt;_UserName]]\n\nExample:\n\n`\&quot;emailSubject\&quot;:\&quot;[[Signer 1_UserName]], Please sign this NDA\&quot;,`\n\nTo add a recipient’s email address in the subject line add the following text in the `emailSubject` property when creating the template or when sending an envelope from a template:\n\n[[&lt;roleName&gt;_Email]]\n\nExample:\n\n`\&quot;emailSubject\&quot;:\&quot;[[Signer 1_Email]], Please sign this NDA\&quot;,`\n\n\nIn both cases the &lt;roleName&gt; is the recipient&#39;s contents of the `roleName` property in the template.\n\nFor cases where another recipient (such as an Agent, Editor, or Intermediary recipient) is entering the name and email information for the recipient included in the email subject, then [[&lt;roleName&gt;_UserName]] or [[&lt;roleName&gt;_Email]] is shown in the email subject.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="envelopeTemplate">TBD Description</param>
             <returns>6ApiResponse of TemplateSummary</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.CreateTemplateAsync(System.String,DocuSign.eSign.Model.EnvelopeTemplate)">
             <summary>
             Creates an envelope from a template. Creates a template definition using a multipart request.\n\n###Template Email Subject Merge Fields\n\nCall this endpoint to insert a recipient name and email address merge fields into the email subject line when creating or sending from a template.\n\nThe merge fields, based on the recipient’s role name, are added to the `emailSubject` property when the template is created or when the template is used to create an envelope. After a template sender adds the name and email information for the recipient and sends the envelope, the recipient information is automatically merged into the appropriate fields in the email subject line.\n\nBoth the sender and the recipients will see the information in the email subject line for any emails associated with the template. This provides an easy way for senders to organize their envelope emails without having to open an envelope to check the recipient.\n### Note: If merging the recipient information into the subject line causes the subject line to exceed 100 characters, then any characters over the 100 character limit are not included in the subject line. For cases where the recipient name or email is expected to be long, you should consider placing the merge field at the start of the email subject.\n\nTo add a recipient’s name in the subject line add the following text in the `emailSubject` property when creating the template or when sending an envelope from a template:\n\n[[&lt;roleName&gt;_UserName]]\n\nExample:\n\n`\&quot;emailSubject\&quot;:\&quot;[[Signer 1_UserName]], Please sign this NDA\&quot;,`\n\nTo add a recipient’s email address in the subject line add the following text in the `emailSubject` property when creating the template or when sending an envelope from a template:\n\n[[&lt;roleName&gt;_Email]]\n\nExample:\n\n`\&quot;emailSubject\&quot;:\&quot;[[Signer 1_Email]], Please sign this NDA\&quot;,`\n\n\nIn both cases the &lt;roleName&gt; is the recipient&#39;s contents of the `roleName` property in the template.\n\nFor cases where another recipient (such as an Agent, Editor, or Intermediary recipient) is entering the name and email information for the recipient included in the email subject, then [[&lt;roleName&gt;_UserName]] or [[&lt;roleName&gt;_Email]] is shown in the email subject.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="envelopeTemplate">TBD Description</param>
             <returns>7Task of TemplateSummary</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.CreateTemplateAsyncWithHttpInfo(System.String,DocuSign.eSign.Model.EnvelopeTemplate)">
             <summary>
             Creates an envelope from a template. Creates a template definition using a multipart request.\n\n###Template Email Subject Merge Fields\n\nCall this endpoint to insert a recipient name and email address merge fields into the email subject line when creating or sending from a template.\n\nThe merge fields, based on the recipient’s role name, are added to the `emailSubject` property when the template is created or when the template is used to create an envelope. After a template sender adds the name and email information for the recipient and sends the envelope, the recipient information is automatically merged into the appropriate fields in the email subject line.\n\nBoth the sender and the recipients will see the information in the email subject line for any emails associated with the template. This provides an easy way for senders to organize their envelope emails without having to open an envelope to check the recipient.\n### Note: If merging the recipient information into the subject line causes the subject line to exceed 100 characters, then any characters over the 100 character limit are not included in the subject line. For cases where the recipient name or email is expected to be long, you should consider placing the merge field at the start of the email subject.\n\nTo add a recipient’s name in the subject line add the following text in the `emailSubject` property when creating the template or when sending an envelope from a template:\n\n[[&lt;roleName&gt;_UserName]]\n\nExample:\n\n`\&quot;emailSubject\&quot;:\&quot;[[Signer 1_UserName]], Please sign this NDA\&quot;,`\n\nTo add a recipient’s email address in the subject line add the following text in the `emailSubject` property when creating the template or when sending an envelope from a template:\n\n[[&lt;roleName&gt;_Email]]\n\nExample:\n\n`\&quot;emailSubject\&quot;:\&quot;[[Signer 1_Email]], Please sign this NDA\&quot;,`\n\n\nIn both cases the &lt;roleName&gt; is the recipient&#39;s contents of the `roleName` property in the template.\n\nFor cases where another recipient (such as an Agent, Editor, or Intermediary recipient) is entering the name and email information for the recipient included in the email subject, then [[&lt;roleName&gt;_UserName]] or [[&lt;roleName&gt;_Email]] is shown in the email subject.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param> <param name="envelopeTemplate">TBD Description</param>
             <returns>8Task of ApiResponse (TemplateSummary)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.Get(System.String,System.String)">
             <summary>
             Gets a list of templates for a specified account. Retrieves the definition of the specified template.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param>
             <returns>5EnvelopeTemplate</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.GetWithHttpInfo(System.String,System.String)">
             <summary>
             Gets a list of templates for a specified account. Retrieves the definition of the specified template.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param>
             <returns>6ApiResponse of EnvelopeTemplate</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.GetAsync(System.String,System.String)">
             <summary>
             Gets a list of templates for a specified account. Retrieves the definition of the specified template.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param>
             <returns>7Task of EnvelopeTemplate</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.GetAsyncWithHttpInfo(System.String,System.String)">
             <summary>
             Gets a list of templates for a specified account. Retrieves the definition of the specified template.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param>
             <returns>8Task of ApiResponse (EnvelopeTemplate)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.Update(System.String,System.String,DocuSign.eSign.Model.EnvelopeTemplate)">
             <summary>
             Updates an existing template. Updates an existing template.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="envelopeTemplate">TBD Description</param>
             <returns>5TemplateUpdateSummary</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.UpdateWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.EnvelopeTemplate)">
             <summary>
             Updates an existing template. Updates an existing template.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="envelopeTemplate">TBD Description</param>
             <returns>6ApiResponse of TemplateUpdateSummary</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.UpdateAsync(System.String,System.String,DocuSign.eSign.Model.EnvelopeTemplate)">
             <summary>
             Updates an existing template. Updates an existing template.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="envelopeTemplate">TBD Description</param>
             <returns>7Task of TemplateUpdateSummary</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.UpdateAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.EnvelopeTemplate)">
             <summary>
             Updates an existing template. Updates an existing template.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="envelopeTemplate">TBD Description</param>
             <returns>8Task of ApiResponse (TemplateUpdateSummary)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.ListCustomFields(System.String,System.String)">
             <summary>
             Gets the custom document fields from a template. Retrieves the custom document field information from an existing template.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param>
             <returns>5CustomFields</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.ListCustomFieldsWithHttpInfo(System.String,System.String)">
             <summary>
             Gets the custom document fields from a template. Retrieves the custom document field information from an existing template.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param>
             <returns>6ApiResponse of CustomFields</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.ListCustomFieldsAsync(System.String,System.String)">
             <summary>
             Gets the custom document fields from a template. Retrieves the custom document field information from an existing template.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param>
             <returns>7Task of CustomFields</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.ListCustomFieldsAsyncWithHttpInfo(System.String,System.String)">
             <summary>
             Gets the custom document fields from a template. Retrieves the custom document field information from an existing template.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param>
             <returns>8Task of ApiResponse (CustomFields)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.UpdateCustomFields(System.String,System.String,DocuSign.eSign.Model.TemplateCustomFields)">
             <summary>
             Updates envelope custom fields in a template. Updates the custom fields in a template.\n\nEach custom field used in a template must have a unique name.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="templateCustomFields">TBD Description</param>
             <returns>5CustomFields</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.UpdateCustomFieldsWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.TemplateCustomFields)">
             <summary>
             Updates envelope custom fields in a template. Updates the custom fields in a template.\n\nEach custom field used in a template must have a unique name.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="templateCustomFields">TBD Description</param>
             <returns>6ApiResponse of CustomFields</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.UpdateCustomFieldsAsync(System.String,System.String,DocuSign.eSign.Model.TemplateCustomFields)">
             <summary>
             Updates envelope custom fields in a template. Updates the custom fields in a template.\n\nEach custom field used in a template must have a unique name.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="templateCustomFields">TBD Description</param>
             <returns>7Task of CustomFields</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.UpdateCustomFieldsAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.TemplateCustomFields)">
             <summary>
             Updates envelope custom fields in a template. Updates the custom fields in a template.\n\nEach custom field used in a template must have a unique name.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="templateCustomFields">TBD Description</param>
             <returns>8Task of ApiResponse (CustomFields)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.CreateCustomFields(System.String,System.String,DocuSign.eSign.Model.TemplateCustomFields)">
             <summary>
             Creates custom document fields in an existing template document. Creates custom document fields in an existing template document.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="templateCustomFields">TBD Description</param>
             <returns>5CustomFields</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.CreateCustomFieldsWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.TemplateCustomFields)">
             <summary>
             Creates custom document fields in an existing template document. Creates custom document fields in an existing template document.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="templateCustomFields">TBD Description</param>
             <returns>6ApiResponse of CustomFields</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.CreateCustomFieldsAsync(System.String,System.String,DocuSign.eSign.Model.TemplateCustomFields)">
             <summary>
             Creates custom document fields in an existing template document. Creates custom document fields in an existing template document.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="templateCustomFields">TBD Description</param>
             <returns>7Task of CustomFields</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.CreateCustomFieldsAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.TemplateCustomFields)">
             <summary>
             Creates custom document fields in an existing template document. Creates custom document fields in an existing template document.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="templateCustomFields">TBD Description</param>
             <returns>8Task of ApiResponse (CustomFields)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.DeleteCustomFields(System.String,System.String,DocuSign.eSign.Model.TemplateCustomFields)">
             <summary>
             Deletes envelope custom fields in a template. Deletes envelope custom fields in a template.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="templateCustomFields">TBD Description</param>
             <returns>5CustomFields</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.DeleteCustomFieldsWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.TemplateCustomFields)">
             <summary>
             Deletes envelope custom fields in a template. Deletes envelope custom fields in a template.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="templateCustomFields">TBD Description</param>
             <returns>6ApiResponse of CustomFields</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.DeleteCustomFieldsAsync(System.String,System.String,DocuSign.eSign.Model.TemplateCustomFields)">
             <summary>
             Deletes envelope custom fields in a template. Deletes envelope custom fields in a template.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="templateCustomFields">TBD Description</param>
             <returns>7Task of CustomFields</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.DeleteCustomFieldsAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.TemplateCustomFields)">
             <summary>
             Deletes envelope custom fields in a template. Deletes envelope custom fields in a template.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="templateCustomFields">TBD Description</param>
             <returns>8Task of ApiResponse (CustomFields)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.ListDocuments(System.String,System.String)">
             <summary>
             Gets a list of documents associated with a template. Retrieves a list of documents associated with the specified template.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param>
             <returns>5TemplateDocumentsResult</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.ListDocumentsWithHttpInfo(System.String,System.String)">
             <summary>
             Gets a list of documents associated with a template. Retrieves a list of documents associated with the specified template.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param>
             <returns>6ApiResponse of TemplateDocumentsResult</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.ListDocumentsAsync(System.String,System.String)">
             <summary>
             Gets a list of documents associated with a template. Retrieves a list of documents associated with the specified template.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param>
             <returns>7Task of TemplateDocumentsResult</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.ListDocumentsAsyncWithHttpInfo(System.String,System.String)">
             <summary>
             Gets a list of documents associated with a template. Retrieves a list of documents associated with the specified template.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param>
             <returns>8Task of ApiResponse (TemplateDocumentsResult)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.UpdateDocuments(System.String,System.String,DocuSign.eSign.Model.EnvelopeDefinition)">
             <summary>
             Adds documents to a template document. Adds one or more documents to an existing template document.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="envelopeDefinition">TBD Description</param>
             <returns>5TemplateDocumentsResult</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.UpdateDocumentsWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.EnvelopeDefinition)">
             <summary>
             Adds documents to a template document. Adds one or more documents to an existing template document.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="envelopeDefinition">TBD Description</param>
             <returns>6ApiResponse of TemplateDocumentsResult</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.UpdateDocumentsAsync(System.String,System.String,DocuSign.eSign.Model.EnvelopeDefinition)">
             <summary>
             Adds documents to a template document. Adds one or more documents to an existing template document.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="envelopeDefinition">TBD Description</param>
             <returns>7Task of TemplateDocumentsResult</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.UpdateDocumentsAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.EnvelopeDefinition)">
             <summary>
             Adds documents to a template document. Adds one or more documents to an existing template document.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="envelopeDefinition">TBD Description</param>
             <returns>8Task of ApiResponse (TemplateDocumentsResult)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.DeleteDocuments(System.String,System.String,DocuSign.eSign.Model.EnvelopeDefinition)">
             <summary>
             Deletes documents from a template. Deletes one or more documents from an existing template.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="envelopeDefinition">TBD Description</param>
             <returns>5TemplateDocumentsResult</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.DeleteDocumentsWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.EnvelopeDefinition)">
             <summary>
             Deletes documents from a template. Deletes one or more documents from an existing template.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="envelopeDefinition">TBD Description</param>
             <returns>6ApiResponse of TemplateDocumentsResult</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.DeleteDocumentsAsync(System.String,System.String,DocuSign.eSign.Model.EnvelopeDefinition)">
             <summary>
             Deletes documents from a template. Deletes one or more documents from an existing template.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="envelopeDefinition">TBD Description</param>
             <returns>7Task of TemplateDocumentsResult</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.DeleteDocumentsAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.EnvelopeDefinition)">
             <summary>
             Deletes documents from a template. Deletes one or more documents from an existing template.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="envelopeDefinition">TBD Description</param>
             <returns>8Task of ApiResponse (TemplateDocumentsResult)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.GetDocument(System.String,System.String,System.String)">
             <summary>
             Gets PDF documents from a template. Retrieves one or more PDF documents from the specified template.\n\nYou can specify the ID of the document to retrieve or can specify `combined` to retrieve all documents in the template as one pdf.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="documentId">The ID of the document being accessed.</param>
             <returns>5Stream</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.GetDocumentWithHttpInfo(System.String,System.String,System.String)">
             <summary>
             Gets PDF documents from a template. Retrieves one or more PDF documents from the specified template.\n\nYou can specify the ID of the document to retrieve or can specify `combined` to retrieve all documents in the template as one pdf.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="documentId">The ID of the document being accessed.</param>
             <returns>6ApiResponse of Stream</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.GetDocumentAsync(System.String,System.String,System.String)">
             <summary>
             Gets PDF documents from a template. Retrieves one or more PDF documents from the specified template.\n\nYou can specify the ID of the document to retrieve or can specify `combined` to retrieve all documents in the template as one pdf.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="documentId">The ID of the document being accessed.</param>
             <returns>7Task of Stream</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.GetDocumentAsyncWithHttpInfo(System.String,System.String,System.String)">
             <summary>
             Gets PDF documents from a template. Retrieves one or more PDF documents from the specified template.\n\nYou can specify the ID of the document to retrieve or can specify `combined` to retrieve all documents in the template as one pdf.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="documentId">The ID of the document being accessed.</param>
             <returns>8Task of ApiResponse (Stream)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.ListDocumentFields(System.String,System.String,System.String)">
             <summary>
             Gets the custom document fields for a an existing template document. Retrieves the custom document fields for an existing template document.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="documentId">The ID of the document being accessed.</param>
             <returns>5DocumentFieldsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.ListDocumentFieldsWithHttpInfo(System.String,System.String,System.String)">
             <summary>
             Gets the custom document fields for a an existing template document. Retrieves the custom document fields for an existing template document.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="documentId">The ID of the document being accessed.</param>
             <returns>6ApiResponse of DocumentFieldsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.ListDocumentFieldsAsync(System.String,System.String,System.String)">
             <summary>
             Gets the custom document fields for a an existing template document. Retrieves the custom document fields for an existing template document.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="documentId">The ID of the document being accessed.</param>
             <returns>7Task of DocumentFieldsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.ListDocumentFieldsAsyncWithHttpInfo(System.String,System.String,System.String)">
             <summary>
             Gets the custom document fields for a an existing template document. Retrieves the custom document fields for an existing template document.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="documentId">The ID of the document being accessed.</param>
             <returns>8Task of ApiResponse (DocumentFieldsInformation)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.UpdateDocumentFields(System.String,System.String,System.String,DocuSign.eSign.Model.DocumentFieldsInformation)">
             <summary>
             Updates existing custom document fields in an existing template document. Updates existing custom document fields in an existing template document.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="documentId">The ID of the document being accessed.</param> <param name="documentFieldsInformation">TBD Description</param>
             <returns>5DocumentFieldsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.UpdateDocumentFieldsWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.DocumentFieldsInformation)">
             <summary>
             Updates existing custom document fields in an existing template document. Updates existing custom document fields in an existing template document.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="documentId">The ID of the document being accessed.</param> <param name="documentFieldsInformation">TBD Description</param>
             <returns>6ApiResponse of DocumentFieldsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.UpdateDocumentFieldsAsync(System.String,System.String,System.String,DocuSign.eSign.Model.DocumentFieldsInformation)">
             <summary>
             Updates existing custom document fields in an existing template document. Updates existing custom document fields in an existing template document.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="documentId">The ID of the document being accessed.</param> <param name="documentFieldsInformation">TBD Description</param>
             <returns>7Task of DocumentFieldsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.UpdateDocumentFieldsAsyncWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.DocumentFieldsInformation)">
             <summary>
             Updates existing custom document fields in an existing template document. Updates existing custom document fields in an existing template document.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="documentId">The ID of the document being accessed.</param> <param name="documentFieldsInformation">TBD Description</param>
             <returns>8Task of ApiResponse (DocumentFieldsInformation)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.CreateDocumentFields(System.String,System.String,System.String,DocuSign.eSign.Model.DocumentFieldsInformation)">
             <summary>
             Creates custom document fields in an existing template document. Creates custom document fields in an existing template document.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="documentId">The ID of the document being accessed.</param> <param name="documentFieldsInformation">TBD Description</param>
             <returns>5DocumentFieldsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.CreateDocumentFieldsWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.DocumentFieldsInformation)">
             <summary>
             Creates custom document fields in an existing template document. Creates custom document fields in an existing template document.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="documentId">The ID of the document being accessed.</param> <param name="documentFieldsInformation">TBD Description</param>
             <returns>6ApiResponse of DocumentFieldsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.CreateDocumentFieldsAsync(System.String,System.String,System.String,DocuSign.eSign.Model.DocumentFieldsInformation)">
             <summary>
             Creates custom document fields in an existing template document. Creates custom document fields in an existing template document.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="documentId">The ID of the document being accessed.</param> <param name="documentFieldsInformation">TBD Description</param>
             <returns>7Task of DocumentFieldsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.CreateDocumentFieldsAsyncWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.DocumentFieldsInformation)">
             <summary>
             Creates custom document fields in an existing template document. Creates custom document fields in an existing template document.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="documentId">The ID of the document being accessed.</param> <param name="documentFieldsInformation">TBD Description</param>
             <returns>8Task of ApiResponse (DocumentFieldsInformation)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.DeleteDocumentFields(System.String,System.String,System.String,DocuSign.eSign.Model.DocumentFieldsInformation)">
             <summary>
             Deletes custom document fields from an existing template document. Deletes custom document fields from an existing template document.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="documentId">The ID of the document being accessed.</param> <param name="documentFieldsInformation">TBD Description</param>
             <returns>5DocumentFieldsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.DeleteDocumentFieldsWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.DocumentFieldsInformation)">
             <summary>
             Deletes custom document fields from an existing template document. Deletes custom document fields from an existing template document.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="documentId">The ID of the document being accessed.</param> <param name="documentFieldsInformation">TBD Description</param>
             <returns>6ApiResponse of DocumentFieldsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.DeleteDocumentFieldsAsync(System.String,System.String,System.String,DocuSign.eSign.Model.DocumentFieldsInformation)">
             <summary>
             Deletes custom document fields from an existing template document. Deletes custom document fields from an existing template document.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="documentId">The ID of the document being accessed.</param> <param name="documentFieldsInformation">TBD Description</param>
             <returns>7Task of DocumentFieldsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.DeleteDocumentFieldsAsyncWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.DocumentFieldsInformation)">
             <summary>
             Deletes custom document fields from an existing template document. Deletes custom document fields from an existing template document.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="documentId">The ID of the document being accessed.</param> <param name="documentFieldsInformation">TBD Description</param>
             <returns>8Task of ApiResponse (DocumentFieldsInformation)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.DeleteDocumentPage(System.String,System.String,System.String,System.String,DocuSign.eSign.Model.PageRequest)">
             <summary>
             Deletes a page from a document in an template. Deletes a page from a document in a template based on the page number.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="documentId">The ID of the document being accessed.</param><param name="pageNumber">The page number being accessed.</param> <param name="pageRequest">TBD Description</param>
             <returns>5</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.DeleteDocumentPageWithHttpInfo(System.String,System.String,System.String,System.String,DocuSign.eSign.Model.PageRequest)">
             <summary>
             Deletes a page from a document in an template. Deletes a page from a document in a template based on the page number.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="documentId">The ID of the document being accessed.</param><param name="pageNumber">The page number being accessed.</param> <param name="pageRequest">TBD Description</param>
             <returns>6ApiResponse of Object(void)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.DeleteDocumentPageAsync(System.String,System.String,System.String,System.String,DocuSign.eSign.Model.PageRequest)">
             <summary>
             Deletes a page from a document in an template. Deletes a page from a document in a template based on the page number.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="documentId">The ID of the document being accessed.</param><param name="pageNumber">The page number being accessed.</param> <param name="pageRequest">TBD Description</param>
             <returns>7Task of void</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.DeleteDocumentPageAsyncWithHttpInfo(System.String,System.String,System.String,System.String,DocuSign.eSign.Model.PageRequest)">
             <summary>
             Deletes a page from a document in an template. Deletes a page from a document in a template based on the page number.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="documentId">The ID of the document being accessed.</param><param name="pageNumber">The page number being accessed.</param> <param name="pageRequest">TBD Description</param>
             <returns>8Task of ApiResponse</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.GetLock(System.String,System.String)">
             <summary>
             Gets template lock information. Retrieves general information about the template lock.\n\nIf the call is made by the locked by user and the request has the same integrator key as original, then the `X-DocuSign-Edit` header and additional lock information is included in the response. This allows users to recover a lost editing session token and the `X-DocuSign-Edit` header.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param>
             <returns>5LockInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.GetLockWithHttpInfo(System.String,System.String)">
             <summary>
             Gets template lock information. Retrieves general information about the template lock.\n\nIf the call is made by the locked by user and the request has the same integrator key as original, then the `X-DocuSign-Edit` header and additional lock information is included in the response. This allows users to recover a lost editing session token and the `X-DocuSign-Edit` header.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param>
             <returns>6ApiResponse of LockInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.GetLockAsync(System.String,System.String)">
             <summary>
             Gets template lock information. Retrieves general information about the template lock.\n\nIf the call is made by the locked by user and the request has the same integrator key as original, then the `X-DocuSign-Edit` header and additional lock information is included in the response. This allows users to recover a lost editing session token and the `X-DocuSign-Edit` header.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param>
             <returns>7Task of LockInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.GetLockAsyncWithHttpInfo(System.String,System.String)">
             <summary>
             Gets template lock information. Retrieves general information about the template lock.\n\nIf the call is made by the locked by user and the request has the same integrator key as original, then the `X-DocuSign-Edit` header and additional lock information is included in the response. This allows users to recover a lost editing session token and the `X-DocuSign-Edit` header.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param>
             <returns>8Task of ApiResponse (LockInformation)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.GetNotificationSettings(System.String,System.String)">
             <summary>
             Gets template notification information. Retrieves the envelope notification, reminders and expirations, information for an existing template.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param>
             <returns>5Notification</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.GetNotificationSettingsWithHttpInfo(System.String,System.String)">
             <summary>
             Gets template notification information. Retrieves the envelope notification, reminders and expirations, information for an existing template.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param>
             <returns>6ApiResponse of Notification</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.GetNotificationSettingsAsync(System.String,System.String)">
             <summary>
             Gets template notification information. Retrieves the envelope notification, reminders and expirations, information for an existing template.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param>
             <returns>7Task of Notification</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.GetNotificationSettingsAsyncWithHttpInfo(System.String,System.String)">
             <summary>
             Gets template notification information. Retrieves the envelope notification, reminders and expirations, information for an existing template.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param>
             <returns>8Task of ApiResponse (Notification)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.UpdateNotificationSettings(System.String,System.String,DocuSign.eSign.Model.TemplateNotificationRequest)">
             <summary>
             Updates the notification  structure for an existing template. Updates the notification structure for an existing template. Use this endpoint to set reminder and expiration notifications.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="templateNotificationRequest">TBD Description</param>
             <returns>5Notification</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.UpdateNotificationSettingsWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.TemplateNotificationRequest)">
             <summary>
             Updates the notification  structure for an existing template. Updates the notification structure for an existing template. Use this endpoint to set reminder and expiration notifications.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="templateNotificationRequest">TBD Description</param>
             <returns>6ApiResponse of Notification</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.UpdateNotificationSettingsAsync(System.String,System.String,DocuSign.eSign.Model.TemplateNotificationRequest)">
             <summary>
             Updates the notification  structure for an existing template. Updates the notification structure for an existing template. Use this endpoint to set reminder and expiration notifications.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="templateNotificationRequest">TBD Description</param>
             <returns>7Task of Notification</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.UpdateNotificationSettingsAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.TemplateNotificationRequest)">
             <summary>
             Updates the notification  structure for an existing template. Updates the notification structure for an existing template. Use this endpoint to set reminder and expiration notifications.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="templateNotificationRequest">TBD Description</param>
             <returns>8Task of ApiResponse (Notification)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.ListRecipients(System.String,System.String)">
             <summary>
             Gets recipient information from a template. Retrieves the information for all recipients in the specified template.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param>
             <returns>5Recipients</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.ListRecipientsWithHttpInfo(System.String,System.String)">
             <summary>
             Gets recipient information from a template. Retrieves the information for all recipients in the specified template.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param>
             <returns>6ApiResponse of Recipients</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.ListRecipientsAsync(System.String,System.String)">
             <summary>
             Gets recipient information from a template. Retrieves the information for all recipients in the specified template.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param>
             <returns>7Task of Recipients</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.ListRecipientsAsyncWithHttpInfo(System.String,System.String)">
             <summary>
             Gets recipient information from a template. Retrieves the information for all recipients in the specified template.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param>
             <returns>8Task of ApiResponse (Recipients)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.UpdateRecipients(System.String,System.String,DocuSign.eSign.Model.TemplateRecipients)">
             <summary>
             Updates recipients in a template. Updates recipients in a template. \n\nYou can edit the following properties: `email`, `userName`, `routingOrder`, `faxNumber`, `deliveryMethod`, `accessCode`, and `requireIdLookup`.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="templateRecipients">TBD Description</param>
             <returns>5RecipientsUpdateSummary</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.UpdateRecipientsWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.TemplateRecipients)">
             <summary>
             Updates recipients in a template. Updates recipients in a template. \n\nYou can edit the following properties: `email`, `userName`, `routingOrder`, `faxNumber`, `deliveryMethod`, `accessCode`, and `requireIdLookup`.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="templateRecipients">TBD Description</param>
             <returns>6ApiResponse of RecipientsUpdateSummary</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.UpdateRecipientsAsync(System.String,System.String,DocuSign.eSign.Model.TemplateRecipients)">
             <summary>
             Updates recipients in a template. Updates recipients in a template. \n\nYou can edit the following properties: `email`, `userName`, `routingOrder`, `faxNumber`, `deliveryMethod`, `accessCode`, and `requireIdLookup`.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="templateRecipients">TBD Description</param>
             <returns>7Task of RecipientsUpdateSummary</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.UpdateRecipientsAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.TemplateRecipients)">
             <summary>
             Updates recipients in a template. Updates recipients in a template. \n\nYou can edit the following properties: `email`, `userName`, `routingOrder`, `faxNumber`, `deliveryMethod`, `accessCode`, and `requireIdLookup`.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="templateRecipients">TBD Description</param>
             <returns>8Task of ApiResponse (RecipientsUpdateSummary)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.CreateRecipients(System.String,System.String,DocuSign.eSign.Model.TemplateRecipients)">
             <summary>
             Adds tabs for a recipient. Adds one or more recipients to a template.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="templateRecipients">TBD Description</param>
             <returns>5Recipients</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.CreateRecipientsWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.TemplateRecipients)">
             <summary>
             Adds tabs for a recipient. Adds one or more recipients to a template.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="templateRecipients">TBD Description</param>
             <returns>6ApiResponse of Recipients</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.CreateRecipientsAsync(System.String,System.String,DocuSign.eSign.Model.TemplateRecipients)">
             <summary>
             Adds tabs for a recipient. Adds one or more recipients to a template.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="templateRecipients">TBD Description</param>
             <returns>7Task of Recipients</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.CreateRecipientsAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.TemplateRecipients)">
             <summary>
             Adds tabs for a recipient. Adds one or more recipients to a template.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="templateRecipients">TBD Description</param>
             <returns>8Task of ApiResponse (Recipients)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.DeleteRecipients(System.String,System.String,DocuSign.eSign.Model.TemplateRecipients)">
             <summary>
             Deletes recipients from a template. Deletes one or more recipients from a template. Recipients to be deleted are listed in the request, with the `recipientId` being used as the key for deleting recipients.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="templateRecipients">TBD Description</param>
             <returns>5Recipients</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.DeleteRecipientsWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.TemplateRecipients)">
             <summary>
             Deletes recipients from a template. Deletes one or more recipients from a template. Recipients to be deleted are listed in the request, with the `recipientId` being used as the key for deleting recipients.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="templateRecipients">TBD Description</param>
             <returns>6ApiResponse of Recipients</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.DeleteRecipientsAsync(System.String,System.String,DocuSign.eSign.Model.TemplateRecipients)">
             <summary>
             Deletes recipients from a template. Deletes one or more recipients from a template. Recipients to be deleted are listed in the request, with the `recipientId` being used as the key for deleting recipients.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="templateRecipients">TBD Description</param>
             <returns>7Task of Recipients</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.DeleteRecipientsAsyncWithHttpInfo(System.String,System.String,DocuSign.eSign.Model.TemplateRecipients)">
             <summary>
             Deletes recipients from a template. Deletes one or more recipients from a template. Recipients to be deleted are listed in the request, with the `recipientId` being used as the key for deleting recipients.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param> <param name="templateRecipients">TBD Description</param>
             <returns>8Task of ApiResponse (Recipients)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.DeleteRecipient(System.String,System.String,System.String,DocuSign.eSign.Model.TemplateRecipients)">
             <summary>
             Deletes the specified recipient file from a template. Deletes the specified recipient file from the specified template.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="templateRecipients">TBD Description</param>
             <returns>5Recipients</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.DeleteRecipientWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.TemplateRecipients)">
             <summary>
             Deletes the specified recipient file from a template. Deletes the specified recipient file from the specified template.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="templateRecipients">TBD Description</param>
             <returns>6ApiResponse of Recipients</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.DeleteRecipientAsync(System.String,System.String,System.String,DocuSign.eSign.Model.TemplateRecipients)">
             <summary>
             Deletes the specified recipient file from a template. Deletes the specified recipient file from the specified template.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="templateRecipients">TBD Description</param>
             <returns>7Task of Recipients</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.DeleteRecipientAsyncWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.TemplateRecipients)">
             <summary>
             Deletes the specified recipient file from a template. Deletes the specified recipient file from the specified template.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="templateRecipients">TBD Description</param>
             <returns>8Task of ApiResponse (Recipients)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.ListTabs(System.String,System.String,System.String,DocuSign.eSign.Model.Tabs)">
             <summary>
             Gets the tabs information for a signer or sign-in-person recipient in a template. Gets the tabs information for a signer or sign-in-person recipient in a template.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="tabs">TBD Description</param>
             <returns>5Tabs</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.ListTabsWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.Tabs)">
             <summary>
             Gets the tabs information for a signer or sign-in-person recipient in a template. Gets the tabs information for a signer or sign-in-person recipient in a template.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="tabs">TBD Description</param>
             <returns>6ApiResponse of Tabs</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.ListTabsAsync(System.String,System.String,System.String,DocuSign.eSign.Model.Tabs)">
             <summary>
             Gets the tabs information for a signer or sign-in-person recipient in a template. Gets the tabs information for a signer or sign-in-person recipient in a template.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="tabs">TBD Description</param>
             <returns>7Task of Tabs</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.ListTabsAsyncWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.Tabs)">
             <summary>
             Gets the tabs information for a signer or sign-in-person recipient in a template. Gets the tabs information for a signer or sign-in-person recipient in a template.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="tabs">TBD Description</param>
             <returns>8Task of ApiResponse (Tabs)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.UpdateTabs(System.String,System.String,System.String,DocuSign.eSign.Model.TemplateTabs)">
             <summary>
             Updates the tabs for a recipient. Updates one or more tabs for a recipient in a template.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="templateTabs">TBD Description</param>
             <returns>5Tabs</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.UpdateTabsWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.TemplateTabs)">
             <summary>
             Updates the tabs for a recipient. Updates one or more tabs for a recipient in a template.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="templateTabs">TBD Description</param>
             <returns>6ApiResponse of Tabs</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.UpdateTabsAsync(System.String,System.String,System.String,DocuSign.eSign.Model.TemplateTabs)">
             <summary>
             Updates the tabs for a recipient. Updates one or more tabs for a recipient in a template.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="templateTabs">TBD Description</param>
             <returns>7Task of Tabs</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.UpdateTabsAsyncWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.TemplateTabs)">
             <summary>
             Updates the tabs for a recipient. Updates one or more tabs for a recipient in a template.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="templateTabs">TBD Description</param>
             <returns>8Task of ApiResponse (Tabs)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.CreateTabs(System.String,System.String,System.String,DocuSign.eSign.Model.TemplateTabs)">
             <summary>
             Adds tabs for a recipient. Adds one or more tabs for a recipient.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="templateTabs">TBD Description</param>
             <returns>5Tabs</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.CreateTabsWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.TemplateTabs)">
             <summary>
             Adds tabs for a recipient. Adds one or more tabs for a recipient.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="templateTabs">TBD Description</param>
             <returns>6ApiResponse of Tabs</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.CreateTabsAsync(System.String,System.String,System.String,DocuSign.eSign.Model.TemplateTabs)">
             <summary>
             Adds tabs for a recipient. Adds one or more tabs for a recipient.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="templateTabs">TBD Description</param>
             <returns>7Task of Tabs</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.CreateTabsAsyncWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.TemplateTabs)">
             <summary>
             Adds tabs for a recipient. Adds one or more tabs for a recipient.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="templateTabs">TBD Description</param>
             <returns>8Task of ApiResponse (Tabs)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.DeleteTabs(System.String,System.String,System.String,DocuSign.eSign.Model.TemplateTabs)">
             <summary>
             Deletes the tabs associated with a recipient in a template. Deletes one or more tabs associated with a recipient in a template.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="templateTabs">TBD Description</param>
             <returns>5Tabs</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.DeleteTabsWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.TemplateTabs)">
             <summary>
             Deletes the tabs associated with a recipient in a template. Deletes one or more tabs associated with a recipient in a template.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="templateTabs">TBD Description</param>
             <returns>6ApiResponse of Tabs</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.DeleteTabsAsync(System.String,System.String,System.String,DocuSign.eSign.Model.TemplateTabs)">
             <summary>
             Deletes the tabs associated with a recipient in a template. Deletes one or more tabs associated with a recipient in a template.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="templateTabs">TBD Description</param>
             <returns>7Task of Tabs</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.DeleteTabsAsyncWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.TemplateTabs)">
             <summary>
             Deletes the tabs associated with a recipient in a template. Deletes one or more tabs associated with a recipient in a template.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="recipientId">The ID of the recipient being accessed.</param> <param name="templateTabs">TBD Description</param>
             <returns>8Task of ApiResponse (Tabs)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.UpdateGroupShare(System.String,System.String,System.String,DocuSign.eSign.Model.GroupInformation)">
             <summary>
             Shares a template with a group Shares a template with the specified members group.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="templatePart">Currently, the only defined part is **groups**.</param> <param name="groupInformation">TBD Description</param>
             <returns>5GroupInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.UpdateGroupShareWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.GroupInformation)">
             <summary>
             Shares a template with a group Shares a template with the specified members group.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="templatePart">Currently, the only defined part is **groups**.</param> <param name="groupInformation">TBD Description</param>
             <returns>6ApiResponse of GroupInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.UpdateGroupShareAsync(System.String,System.String,System.String,DocuSign.eSign.Model.GroupInformation)">
             <summary>
             Shares a template with a group Shares a template with the specified members group.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="templatePart">Currently, the only defined part is **groups**.</param> <param name="groupInformation">TBD Description</param>
             <returns>7Task of GroupInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.UpdateGroupShareAsyncWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.GroupInformation)">
             <summary>
             Shares a template with a group Shares a template with the specified members group.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="templatePart">Currently, the only defined part is **groups**.</param> <param name="groupInformation">TBD Description</param>
             <returns>8Task of ApiResponse (GroupInformation)</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.DeleteGroupShare(System.String,System.String,System.String,DocuSign.eSign.Model.GroupInformation)">
             <summary>
             Removes a member group&#39;s sharing permissions for a template. Removes a member group&#39;s sharing permissions for a specified template.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="templatePart">Currently, the only defined part is **groups**.</param> <param name="groupInformation">TBD Description</param>
             <returns>5GroupInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.DeleteGroupShareWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.GroupInformation)">
             <summary>
             Removes a member group&#39;s sharing permissions for a template. Removes a member group&#39;s sharing permissions for a specified template.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="templatePart">Currently, the only defined part is **groups**.</param> <param name="groupInformation">TBD Description</param>
             <returns>6ApiResponse of GroupInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.DeleteGroupShareAsync(System.String,System.String,System.String,DocuSign.eSign.Model.GroupInformation)">
             <summary>
             Removes a member group&#39;s sharing permissions for a template. Removes a member group&#39;s sharing permissions for a specified template.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="templatePart">Currently, the only defined part is **groups**.</param> <param name="groupInformation">TBD Description</param>
             <returns>7Task of GroupInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.TemplatesApi.DeleteGroupShareAsyncWithHttpInfo(System.String,System.String,System.String,DocuSign.eSign.Model.GroupInformation)">
             <summary>
             Removes a member group&#39;s sharing permissions for a template. Removes a member group&#39;s sharing permissions for a specified template.
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="templateId">The ID of the template being accessed.</param><param name="templatePart">Currently, the only defined part is **groups**.</param> <param name="groupInformation">TBD Description</param>
             <returns>8Task of ApiResponse (GroupInformation)</returns>
        </member>
        <member name="T:DocuSign.eSign.Api.IUsersApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Api.IUsersApi.GetSettings(System.String,System.String)">
            <summary>
            Gets the user account settings for a specified user.
            </summary>
            <remarks>
            Retrieves a list of the account settings and email notification information for the specified user.\n\nThe response returns the account setting name/value information and the email notification settings for the specified user. For more information about the different user settings, see the [ML:userSettings list].
            </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="userId">The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.</param>
             <returns>1UserSettingsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IUsersApi.GetSettingsWithHttpInfo(System.String,System.String)">
             <summary>
             Gets the user account settings for a specified user.
             </summary>
             <remarks>
             Retrieves a list of the account settings and email notification information for the specified user.\n\nThe response returns the account setting name/value information and the email notification settings for the specified user. For more information about the different user settings, see the [ML:userSettings list].
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="userId">The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.</param>
             <returns>2ApiResponse of UserSettingsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IUsersApi.GetSettingsAsync(System.String,System.String)">
             <summary>
             Gets the user account settings for a specified user.
             </summary>
             <remarks>
             Retrieves a list of the account settings and email notification information for the specified user.\n\nThe response returns the account setting name/value information and the email notification settings for the specified user. For more information about the different user settings, see the [ML:userSettings list].
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="userId">The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.</param>
             <returns>3Task of UserSettingsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.IUsersApi.GetSettingsAsyncWithHttpInfo(System.String,System.String)">
             <summary>
             Gets the user account settings for a specified user.
             </summary>
             <remarks>
             Retrieves a list of the account settings and email notification information for the specified user.\n\nThe response returns the account setting name/value information and the email notification settings for the specified user. For more information about the different user settings, see the [ML:userSettings list].
             </remarks>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="userId">The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.</param>
             <returns>4Task of ApiResponse (UserSettingsInformation)</returns>
        </member>
        <member name="T:DocuSign.eSign.Api.UsersApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Api.UsersApi.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.eSign.Api.UsersApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DocuSign.eSign.Api.UsersApi.#ctor(DocuSign.eSign.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.eSign.Api.UsersApi"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.eSign.Api.UsersApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:DocuSign.eSign.Api.UsersApi.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:DocuSign.eSign.Api.UsersApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="M:DocuSign.eSign.Api.UsersApi.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.UsersApi.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.eSign.Api.UsersApi.GetSettings(System.String,System.String)">
             <summary>
             Gets the user account settings for a specified user. Retrieves a list of the account settings and email notification information for the specified user.\n\nThe response returns the account setting name/value information and the email notification settings for the specified user. For more information about the different user settings, see the [ML:userSettings list].
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="userId">The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.</param>
             <returns>5UserSettingsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.UsersApi.GetSettingsWithHttpInfo(System.String,System.String)">
             <summary>
             Gets the user account settings for a specified user. Retrieves a list of the account settings and email notification information for the specified user.\n\nThe response returns the account setting name/value information and the email notification settings for the specified user. For more information about the different user settings, see the [ML:userSettings list].
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="userId">The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.</param>
             <returns>6ApiResponse of UserSettingsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.UsersApi.GetSettingsAsync(System.String,System.String)">
             <summary>
             Gets the user account settings for a specified user. Retrieves a list of the account settings and email notification information for the specified user.\n\nThe response returns the account setting name/value information and the email notification settings for the specified user. For more information about the different user settings, see the [ML:userSettings list].
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="userId">The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.</param>
             <returns>7Task of UserSettingsInformation</returns>
        </member>
        <member name="M:DocuSign.eSign.Api.UsersApi.GetSettingsAsyncWithHttpInfo(System.String,System.String)">
             <summary>
             Gets the user account settings for a specified user. Retrieves a list of the account settings and email notification information for the specified user.\n\nThe response returns the account setting name/value information and the email notification settings for the specified user. For more information about the different user settings, see the [ML:userSettings list].
             </summary>
            <param name="accountId">The external account number (int) or account ID Guid.</param><param name="userId">The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.</param>
             <returns>8Task of ApiResponse (UserSettingsInformation)</returns>
        </member>
        <member name="T:DocuSign.eSign.Client.ApiClient">
            <summary>
            API client is mainly responible for making the HTTP call to the API backend.
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Client.ApiClient.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.eSign.Client.ApiClient" /> class.
            </summary>
            <param name="basePath">The base path.</param>
        </member>
        <member name="F:DocuSign.eSign.Client.ApiClient.Default">
            <summary>
            Gets or sets the default API client for making HTTP calls.
            </summary>
            <value>The default API client.</value>
        </member>
        <member name="P:DocuSign.eSign.Client.ApiClient.RestClient">
            <summary>
            Gets or sets the RestClient.
            </summary>
            <value>An instance of the RestClient</value>
        </member>
        <member name="M:DocuSign.eSign.Client.ApiClient.CallApi(System.String,RestSharp.Method,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,RestSharp.FileParameter},System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Makes the HTTP request (Sync).
            </summary>
            <param name="path">URL path.</param>
            <param name="method">HTTP method.</param>
            <param name="queryParams">Query parameters.</param>
            <param name="postBody">HTTP body (POST request).</param>
            <param name="headerParams">Header parameters.</param>
            <param name="formParams">Form parameters.</param>
            <param name="fileParams">File parameters.</param>
            <param name="pathParams">Path parameters.</param>
            <returns>Object</returns>
        </member>
        <member name="M:DocuSign.eSign.Client.ApiClient.CallApiAsync(System.String,RestSharp.Method,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,RestSharp.FileParameter},System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Makes the asynchronous HTTP request.
            </summary>
            <param name="path">URL path.</param>
            <param name="method">HTTP method.</param>
            <param name="queryParams">Query parameters.</param>
            <param name="postBody">HTTP body (POST request).</param>
            <param name="headerParams">Header parameters.</param>
            <param name="formParams">Form parameters.</param>
            <param name="fileParams">File parameters.</param>
            <param name="pathParams">Path parameters.</param>
            <returns>The Task instance.</returns>
        </member>
        <member name="M:DocuSign.eSign.Client.ApiClient.EscapeString(System.String)">
            <summary>
            Escape string (url-encoded).
            </summary>
            <param name="str">String to be escaped.</param>
            <returns>Escaped string.</returns>
        </member>
        <member name="M:DocuSign.eSign.Client.ApiClient.ParameterToFile(System.String,System.IO.Stream)">
            <summary>
            Create FileParameter based on Stream.
            </summary>
            <param name="name">Parameter name.</param>
            <param name="stream">Input stream.</param>
            <returns>FileParameter.</returns>
        </member>
        <member name="M:DocuSign.eSign.Client.ApiClient.ParameterToString(System.Object)">
            <summary>
            If parameter is DateTime, output in ISO8601 format.
            If parameter is a list, join the list with ",".
            Otherwise just return the string.
            </summary>
            <param name="obj">The parameter (header, path, query, form).</param>
            <returns>Formatted string.</returns>
        </member>
        <member name="M:DocuSign.eSign.Client.ApiClient.Deserialize(RestSharp.IRestResponse,System.Type)">
            <summary>
            Deserialize the JSON string into a proper object.
            </summary>
            <param name="response">The HTTP response.</param>
            <param name="type">Object type.</param>
            <returns>Object representation of the JSON string.</returns>
        </member>
        <member name="M:DocuSign.eSign.Client.ApiClient.Deserialize(System.Byte[],System.Type,System.Collections.Generic.IList{RestSharp.Parameter})">
            <summary>
            Deserialize the JSON string into a proper object.
            </summary>
            <param name="content">HTTP body (e.g. string, JSON).</param>
            <param name="type">Object type.</param>
            <param name="headers"></param>
            <returns>Object representation of the JSON string.</returns>
        </member>
        <member name="M:DocuSign.eSign.Client.ApiClient.Serialize(System.Object)">
            <summary>
            Serialize an object into JSON string.
            </summary>
            <param name="obj">Object.</param>
            <returns>JSON string.</returns>
        </member>
        <member name="M:DocuSign.eSign.Client.ApiClient.SelectHeaderAccept(System.String[])">
            <summary>
            Select the Accept header's value from the given accepts array:
            if JSON exists in the given array, use it;
            otherwise use all of them (joining into a string)
            </summary>
            <param name="accepts">The accepts array to select from.</param>
            <returns>The Accept header to use.</returns>
        </member>
        <member name="M:DocuSign.eSign.Client.ApiClient.Base64Encode(System.String)">
            <summary>
            Encode string in base64 format.
            </summary>
            <param name="text">String to be encoded.</param>
            <returns>Encoded string.</returns>
        </member>
        <member name="M:DocuSign.eSign.Client.ApiClient.ConvertType(System.Object,System.Type)">
            <summary>
            Dynamically cast the object into target type.
            Ref: http://stackoverflow.com/questions/4925718/c-dynamic-runtime-cast
            </summary>
            <param name="source">Object to be casted</param>
            <param name="dest">Target type</param>
            <returns>Casted object</returns>
        </member>
        <member name="M:DocuSign.eSign.Client.ApiClient.ReadAsBytes(System.IO.Stream)">
            <summary>
            Convert stream to byte array
            Credit/Ref: http://stackoverflow.com/a/221941/677735
            </summary>
            <param name="input">Input stream to be converted</param>
            <returns>Byte array</returns>
        </member>
        <member name="M:DocuSign.eSign.Client.ApiClient.UrlEncode(System.String)">
            <summary>
            URL encode a string
            Credit/Ref: https://github.com/restsharp/RestSharp/blob/master/RestSharp/Extensions/StringExtensions.cs#L50
            </summary>
            <param name="input">String to be URL encoded</param>
            <returns>Byte array</returns>
        </member>
        <member name="T:DocuSign.eSign.Client.ApiException">
            <summary>
            API Exception
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Client.ApiException.ErrorCode">
            <summary>
            Gets or sets the error code (HTTP status code)
            </summary>
            <value>The error code (HTTP status code).</value>
        </member>
        <member name="P:DocuSign.eSign.Client.ApiException.ErrorContent">
            <summary>
            Gets or sets the error content (body json object)
            </summary>
            <value>The error content (Http response body).</value>
        </member>
        <member name="M:DocuSign.eSign.Client.ApiException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.eSign.Client.ApiException"/> class.
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Client.ApiException.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.eSign.Client.ApiException"/> class.
            </summary>
            <param name="errorCode">HTTP status code.</param>
            <param name="message">Error message.</param>
        </member>
        <member name="M:DocuSign.eSign.Client.ApiException.#ctor(System.Int32,System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.eSign.Client.ApiException"/> class.
            </summary>
            <param name="errorCode">HTTP status code.</param>
            <param name="message">Error message.</param>
            <param name="errorContent">Error content.</param>
        </member>
        <member name="T:DocuSign.eSign.Client.ApiResponse`1">
            <summary>
            API Response
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Client.ApiResponse`1.StatusCode">
            <summary>
            Gets or sets the status code (HTTP status code)
            </summary>
            <value>The status code.</value>
        </member>
        <member name="P:DocuSign.eSign.Client.ApiResponse`1.Headers">
            <summary>
            Gets or sets the HTTP headers
            </summary>
            <value>HTTP headers</value>
        </member>
        <member name="P:DocuSign.eSign.Client.ApiResponse`1.Data">
            <summary>
            Gets or sets the data (parsed HTTP body)
            </summary>
            <value>The data.</value>
        </member>
        <member name="M:DocuSign.eSign.Client.ApiResponse`1.#ctor(System.Int32,System.Collections.Generic.IDictionary{System.String,System.String},`0)">
            <summary>
            Initializes a new instance of the <see cref="!:ApiResponse"/> class.
            </summary>
            <param name="statusCode">HTTP status code.</param>
            <param name="message">Error message.</param>
            <param name="data">Data (parsed HTTP body)</param>
        </member>
        <member name="T:DocuSign.eSign.Client.Configuration">
            <summary>
            Represents a set of configuration settings
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Client.Configuration.#ctor(DocuSign.eSign.Client.ApiClient)">
            <summary>
            Initializes a new instance of the Configuration class.
            </summary>
            <param name="apiClient">Api client.</param>
        </member>
        <member name="F:DocuSign.eSign.Client.Configuration.Version">
            <summary>
            Version of the package.
            </summary>
            <value>Version of the package.</value>
        </member>
        <member name="F:DocuSign.eSign.Client.Configuration.Default">
            <summary>
            Gets or sets the default Configuration.
            </summary>
            <value>Configuration.</value>
        </member>
        <member name="F:DocuSign.eSign.Client.Configuration.ApiClient">
            <summary>
            Gets or sets the default API client for making HTTP calls.
            </summary>
            <value>The API client.</value>
        </member>
        <member name="P:DocuSign.eSign.Client.Configuration.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Client.Configuration.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="P:DocuSign.eSign.Client.Configuration.Username">
            <summary>
            Gets or sets the username (HTTP basic authentication).
            </summary>
            <value>The username.</value>
        </member>
        <member name="P:DocuSign.eSign.Client.Configuration.Password">
            <summary>
            Gets or sets the password (HTTP basic authentication).
            </summary>
            <value>The password.</value>
        </member>
        <member name="P:DocuSign.eSign.Client.Configuration.AccessToken">
            <summary>
            Gets or sets the access token for OAuth2 authentication.
            </summary>
            <value>The access token.</value>
        </member>
        <member name="F:DocuSign.eSign.Client.Configuration.ApiKey">
            <summary>
            Gets or sets the API key based on the authentication name.
            </summary>
            <value>The API key.</value>
        </member>
        <member name="F:DocuSign.eSign.Client.Configuration.ApiKeyPrefix">
            <summary>
            Gets or sets the prefix (e.g. Token) of the API key based on the authentication name.
            </summary>
            <value>The prefix of the API key.</value>
        </member>
        <member name="M:DocuSign.eSign.Client.Configuration.GetApiKeyWithPrefix(System.String)">
            <summary>
            Get the API key with prefix.
            </summary>
            <param name="apiKeyIdentifier">API key identifier (authentication scheme).</param>
            <returns>API key with prefix.</returns>
        </member>
        <member name="P:DocuSign.eSign.Client.Configuration.TempFolderPath">
            <summary>
            Gets or sets the temporary folder path to store the files downloaded from the server.
            </summary>
            <value>Folder path.</value>
        </member>
        <member name="M:DocuSign.eSign.Client.Configuration.ToDebugReport">
            <summary>
            Returns a string with essential information for debugging.
            </summary>
        </member>
        <member name="T:DocuSign.eSign.Model.AccountInformation">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.AccountInformation.CurrentPlanId">
            <summary>
            Identifies the plan that was used create this account.
            </summary>
            <value>Identifies the plan that was used create this account.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.AccountInformation.PlanName">
            <summary>
            The name of the Billing Plan.
            </summary>
            <value>The name of the Billing Plan.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.AccountInformation.PlanClassification">
            <summary>
            Identifies the type of plan. Examples include Business, Corporate, Enterprise, Free.
            </summary>
            <value>Identifies the type of plan. Examples include Business, Corporate, Enterprise, Free.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.AccountInformation.PlanStartDate">
            <summary>
            The date that the Account started using the current plan.
            </summary>
            <value>The date that the Account started using the current plan.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.AccountInformation.PlanEndDate">
            <summary>
            The date that the current plan will end.
            </summary>
            <value>The date that the current plan will end.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.AccountInformation.BillingPeriodStartDate">
            <summary>
            Reserved: TBD
            </summary>
            <value>Reserved: TBD</value>
        </member>
        <member name="P:DocuSign.eSign.Model.AccountInformation.BillingPeriodEndDate">
            <summary>
            Reserved: TBD
            </summary>
            <value>Reserved: TBD</value>
        </member>
        <member name="P:DocuSign.eSign.Model.AccountInformation.BillingPeriodEnvelopesSent">
            <summary>
            Reserved: TBD
            </summary>
            <value>Reserved: TBD</value>
        </member>
        <member name="P:DocuSign.eSign.Model.AccountInformation.BillingPeriodEnvelopesAllowed">
            <summary>
            Reserved: TBD
            </summary>
            <value>Reserved: TBD</value>
        </member>
        <member name="P:DocuSign.eSign.Model.AccountInformation.BillingPeriodDaysRemaining">
            <summary>
            Reserved: TBD
            </summary>
            <value>Reserved: TBD</value>
        </member>
        <member name="P:DocuSign.eSign.Model.AccountInformation.CanUpgrade">
            <summary>
            When set to **true**, specifies that you can upgrade the account through the API.
            </summary>
            <value>When set to **true**, specifies that you can upgrade the account through the API.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.AccountInformation.CanCancelRenewal">
            <summary>
            Reserved: TBD
            </summary>
            <value>Reserved: TBD</value>
        </member>
        <member name="P:DocuSign.eSign.Model.AccountInformation.EnvelopeSendingBlocked">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.AccountInformation.EnvelopeUnitPrice">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.AccountInformation.SuspensionStatus">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.AccountInformation.SuspensionDate">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.AccountInformation.AccountName">
            <summary>
            The name of the current account.
            </summary>
            <value>The name of the current account.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.AccountInformation.ConnectPermission">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.AccountInformation.DocuSignLandingUrl">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.AccountInformation.DistributorCode">
            <summary>
            The code that identifies the billing plan groups and plans for the new account.
            </summary>
            <value>The code that identifies the billing plan groups and plans for the new account.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.AccountInformation.AccountIdGuid">
            <summary>
            The GUID associated with the account ID.
            </summary>
            <value>The GUID associated with the account ID.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.AccountInformation.CurrencyCode">
            <summary>
            Specifies the ISO currency code for the account.
            </summary>
            <value>Specifies the ISO currency code for the account.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.AccountInformation.ForgottenPasswordQuestionsCount">
            <summary>
            A complex element that contains up to four Question/Answer pairs for forgotten password information for a user.
            </summary>
            <value>A complex element that contains up to four Question/Answer pairs for forgotten password information for a user.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.AccountInformation.PaymentMethod">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.AccountInformation.SeatsAllowed">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.AccountInformation.SeatsInUse">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.AccountInformation.CreatedDate">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.AccountInformation.IsDowngrade">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.AccountInformation.BillingProfile">
            <summary>
            Reserved: TBD
            </summary>
            <value>Reserved: TBD</value>
        </member>
        <member name="P:DocuSign.eSign.Model.AccountInformation.Status21CFRPart11">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="M:DocuSign.eSign.Model.AccountInformation.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.AccountInformation.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.AccountInformation.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.AccountInformation.Equals(DocuSign.eSign.Model.AccountInformation)">
            <summary>
            Returns true if AccountInformation instances are equal
            </summary>
            <param name="other">Instance of AccountInformation to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.AccountInformation.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.AccountSettingsInformation">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.AccountSettingsInformation.AccountSettings">
            <summary>
            The list of account settings. These determine the features available for the account. Note that some features are determined by the plan used to create the account, and cannot be overridden.
            </summary>
            <value>The list of account settings. These determine the features available for the account. Note that some features are determined by the plan used to create the account, and cannot be overridden.</value>
        </member>
        <member name="M:DocuSign.eSign.Model.AccountSettingsInformation.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.AccountSettingsInformation.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.AccountSettingsInformation.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.AccountSettingsInformation.Equals(DocuSign.eSign.Model.AccountSettingsInformation)">
            <summary>
            Returns true if AccountSettingsInformation instances are equal
            </summary>
            <param name="other">Instance of AccountSettingsInformation to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.AccountSettingsInformation.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.AccountSharedAccess">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.AccountSharedAccess.ResultSetSize">
            <summary>
            The number of results returned in this response.
            </summary>
            <value>The number of results returned in this response.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.AccountSharedAccess.TotalSetSize">
            <summary>
            The total number of items available in the result set. This will always be greater than or equal to the value of the `resultSetSize` property.
            </summary>
            <value>The total number of items available in the result set. This will always be greater than or equal to the value of the `resultSetSize` property.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.AccountSharedAccess.StartPosition">
            <summary>
            Starting position of the current result set.
            </summary>
            <value>Starting position of the current result set.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.AccountSharedAccess.EndPosition">
            <summary>
            The last position in the result set.
            </summary>
            <value>The last position in the result set.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.AccountSharedAccess.NextUri">
            <summary>
            The URI to the next chunk of records based on the search request. If the endPosition is the entire results of the search, this is null.
            </summary>
            <value>The URI to the next chunk of records based on the search request. If the endPosition is the entire results of the search, this is null.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.AccountSharedAccess.PreviousUri">
            <summary>
            The postal code for the billing address.
            </summary>
            <value>The postal code for the billing address.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.AccountSharedAccess.AccountId">
            <summary>
            The account ID associated with the envelope.
            </summary>
            <value>The account ID associated with the envelope.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.AccountSharedAccess.SharedAccess">
            <summary>
            A complex type containing the shared access information to an envelope for the users specified in the request.
            </summary>
            <value>A complex type containing the shared access information to an envelope for the users specified in the request.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.AccountSharedAccess.ErrorDetails">
            <summary>
            Gets or Sets ErrorDetails
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Model.AccountSharedAccess.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.AccountSharedAccess.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.AccountSharedAccess.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.AccountSharedAccess.Equals(DocuSign.eSign.Model.AccountSharedAccess)">
            <summary>
            Returns true if AccountSharedAccess instances are equal
            </summary>
            <param name="other">Instance of AccountSharedAccess to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.AccountSharedAccess.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.AddressInformation">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.AddressInformation.Street1">
            <summary>
            The first line of the address.
            </summary>
            <value>The first line of the address.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.AddressInformation.Street2">
            <summary>
            The second line of the address (optional).
            </summary>
            <value>The second line of the address (optional).</value>
        </member>
        <member name="P:DocuSign.eSign.Model.AddressInformation.City">
            <summary>
            The city associated with the address.
            </summary>
            <value>The city associated with the address.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.AddressInformation.State">
            <summary>
            The state or province associated with the address.
            </summary>
            <value>The state or province associated with the address.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.AddressInformation.Zip">
            <summary>
            The zip or postal code associated with the address.
            </summary>
            <value>The zip or postal code associated with the address.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.AddressInformation.Phone">
            <summary>
            A phone number associated with the address.
            </summary>
            <value>A phone number associated with the address.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.AddressInformation.Fax">
            <summary>
            A Fax number associated with the address if one is available.
            </summary>
            <value>A Fax number associated with the address if one is available.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.AddressInformation.Country">
            <summary>
            Specifies the country associated with the address.
            </summary>
            <value>Specifies the country associated with the address.</value>
        </member>
        <member name="M:DocuSign.eSign.Model.AddressInformation.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.AddressInformation.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.AddressInformation.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.AddressInformation.Equals(DocuSign.eSign.Model.AddressInformation)">
            <summary>
            Returns true if AddressInformation instances are equal
            </summary>
            <param name="other">Instance of AddressInformation to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.AddressInformation.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.AddressInformationInput">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.AddressInformationInput.AddressInformation">
            <summary>
            Gets or Sets AddressInformation
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.AddressInformationInput.DisplayLevelCode">
            <summary>
            Specifies the display level for the recipient. \nValid values are: \n\n* ReadOnly\n* Editable\n* DoNotDisplay
            </summary>
            <value>Specifies the display level for the recipient. \nValid values are: \n\n* ReadOnly\n* Editable\n* DoNotDisplay</value>
        </member>
        <member name="P:DocuSign.eSign.Model.AddressInformationInput.ReceiveInResponse">
            <summary>
            When set to **true**, the information needs to be returned in the response.
            </summary>
            <value>When set to **true**, the information needs to be returned in the response.</value>
        </member>
        <member name="M:DocuSign.eSign.Model.AddressInformationInput.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.AddressInformationInput.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.AddressInformationInput.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.AddressInformationInput.Equals(DocuSign.eSign.Model.AddressInformationInput)">
            <summary>
            Returns true if AddressInformationInput instances are equal
            </summary>
            <param name="other">Instance of AddressInformationInput to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.AddressInformationInput.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.Agent">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Agent.ExcludedDocuments">
            <summary>
            Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.\n\nWhen enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.
            </summary>
            <value>Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.\n\nWhen enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Agent.Name">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Agent.Email">
            <summary>
            Email id of the recipient. Notification of the document to sign is sent to this email id. \n\nMaximum length: 100 characters.
            </summary>
            <value>Email id of the recipient. Notification of the document to sign is sent to this email id. \n\nMaximum length: 100 characters.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Agent.EmailRecipientPostSigningURL">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Agent.SigningGroupId">
            <summary>
            When set to **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab ( instead of adopting a signature/initial style or only drawing a signature/initial once).
            </summary>
            <value>When set to **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab ( instead of adopting a signature/initial style or only drawing a signature/initial once).</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Agent.SigningGroupName">
            <summary>
            The display name for the signing group. \n\nMaximum Length: 100 characters.
            </summary>
            <value>The display name for the signing group. \n\nMaximum Length: 100 characters.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Agent.SigningGroupUsers">
            <summary>
            A complex type that contains information about users in the signing group.
            </summary>
            <value>A complex type that contains information about users in the signing group.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Agent.RecipientId">
            <summary>
            Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
            </summary>
            <value>Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Agent.RecipientIdGuid">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Agent.AccessCode">
            <summary>
            If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and must conform to account’s access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then access code is not required.
            </summary>
            <value>If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and must conform to account’s access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then access code is not required.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Agent.AddAccessCodeToEmail">
            <summary>
            This Optional attribute indicates that the access code will be added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient.
            </summary>
            <value>This Optional attribute indicates that the access code will be added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Agent.RequireIdLookup">
            <summary>
            When set to **true**, the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity.
            </summary>
            <value>When set to **true**, the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Agent.IdCheckConfigurationName">
            <summary>
            Specifies authentication check by name. The names used here must be the same as the authentication type names used by the account (these name can also be found in the web console sending interface in the Identify list for a recipient,) This overrides any default authentication setting.\n\n*Example*: Your account has ID Check and SMS Authentication available and in the web console Identify list these appear as 'ID Check $' and 'SMS Auth $'. To use ID check in an envelope, the idCheckConfigurationName should be 'ID Check '. If you wanted to use SMS, it would be 'SMS Auth $' and you would need to add you would need to add phone number information to the `smsAuthentication` node.
            </summary>
            <value>Specifies authentication check by name. The names used here must be the same as the authentication type names used by the account (these name can also be found in the web console sending interface in the Identify list for a recipient,) This overrides any default authentication setting.\n\n*Example*: Your account has ID Check and SMS Authentication available and in the web console Identify list these appear as 'ID Check $' and 'SMS Auth $'. To use ID check in an envelope, the idCheckConfigurationName should be 'ID Check '. If you wanted to use SMS, it would be 'SMS Auth $' and you would need to add you would need to add phone number information to the `smsAuthentication` node.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Agent.SocialAuthentications">
            <summary>
            Lists the social ID type that can be used for recipient authentication.
            </summary>
            <value>Lists the social ID type that can be used for recipient authentication.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Agent.PhoneAuthentication">
            <summary>
            Gets or Sets PhoneAuthentication
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Agent.SamlAuthentication">
            <summary>
            Gets or Sets SamlAuthentication
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Agent.SmsAuthentication">
            <summary>
            Gets or Sets SmsAuthentication
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Agent.UserId">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Agent.ClientUserId">
            <summary>
            Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Note that if the `ClientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true**, an error is generated on sending.ng. \n\nMaximum length: 100 characters.
            </summary>
            <value>Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Note that if the `ClientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true**, an error is generated on sending.ng. \n\nMaximum length: 100 characters.</value>
        </member>
        <!-- Badly formed XML comment ignored for member "P:DocuSign.eSign.Model.Agent.EmbeddedRecipientStartURL" -->
        <member name="P:DocuSign.eSign.Model.Agent.CustomFields">
            <summary>
            An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.
            </summary>
            <value>An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Agent.RoutingOrder">
            <summary>
            Specifies the routing order of the recipient in the envelope.
            </summary>
            <value>Specifies the routing order of the recipient in the envelope.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Agent.IdCheckInformationInput">
            <summary>
            Gets or Sets IdCheckInformationInput
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Agent.RecipientAttachments">
            <summary>
            Reserved:
            </summary>
            <value>Reserved:</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Agent.Note">
            <summary>
            Specifies a note that is unique to this recipient. This note is sent to the recipient via the signing email. The note displays in the signing UI near the upper left corner of the document on the signing screen.\n\nMaximum Length: 1000 characters.
            </summary>
            <value>Specifies a note that is unique to this recipient. This note is sent to the recipient via the signing email. The note displays in the signing UI near the upper left corner of the document on the signing screen.\n\nMaximum Length: 1000 characters.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Agent.RoleName">
            <summary>
            Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.
            </summary>
            <value>Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Agent.Status">
            <summary>
            Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.
            </summary>
            <value>Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Agent.SignedDateTime">
            <summary>
            Reserved: For DocuSign use only.
            </summary>
            <value>Reserved: For DocuSign use only.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Agent.DeliveredDateTime">
            <summary>
            Reserved: For DocuSign use only.
            </summary>
            <value>Reserved: For DocuSign use only.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Agent.DeclinedDateTime">
            <summary>
            The date and time the recipient declined the document.
            </summary>
            <value>The date and time the recipient declined the document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Agent.SentDateTime">
            <summary>
            The date and time the envelope was sent.
            </summary>
            <value>The date and time the envelope was sent.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Agent.DeclinedReason">
            <summary>
            The reason the recipient declined the document.
            </summary>
            <value>The reason the recipient declined the document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Agent.DeliveryMethod">
            <summary>
            Reserved: For DocuSign use only.
            </summary>
            <value>Reserved: For DocuSign use only.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Agent.FaxNumber">
            <summary>
            Reserved:
            </summary>
            <value>Reserved:</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Agent.TemplateLocked">
            <summary>
            When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.
            </summary>
            <value>When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Agent.TemplateRequired">
            <summary>
            When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.
            </summary>
            <value>When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Agent.EmailNotification">
            <summary>
            Gets or Sets EmailNotification
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Agent.InheritEmailNotificationConfiguration">
            <summary>
            When set to **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account.
            </summary>
            <value>When set to **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Agent.ErrorDetails">
            <summary>
            Gets or Sets ErrorDetails
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Agent.RecipientAuthenticationStatus">
            <summary>
            Gets or Sets RecipientAuthenticationStatus
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Agent.TotalTabCount">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="M:DocuSign.eSign.Model.Agent.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Agent.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Agent.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Agent.Equals(DocuSign.eSign.Model.Agent)">
            <summary>
            Returns true if Agent instances are equal
            </summary>
            <param name="other">Instance of Agent to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Agent.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.ApiRequestLog">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.ApiRequestLog.Status">
            <summary>
            Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.
            </summary>
            <value>Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.ApiRequestLog.Description">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.ApiRequestLog.CreatedDateTime">
            <summary>
            Indicates the date and time the item was created.
            </summary>
            <value>Indicates the date and time the item was created.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.ApiRequestLog.RequestLogId">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="M:DocuSign.eSign.Model.ApiRequestLog.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.ApiRequestLog.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.ApiRequestLog.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.ApiRequestLog.Equals(DocuSign.eSign.Model.ApiRequestLog)">
            <summary>
            Returns true if ApiRequestLog instances are equal
            </summary>
            <param name="other">Instance of ApiRequestLog to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.ApiRequestLog.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.ApiRequestLogsResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.ApiRequestLogsResult.ApiRequestLogs">
            <summary>
            Reserved: TBD
            </summary>
            <value>Reserved: TBD</value>
        </member>
        <member name="M:DocuSign.eSign.Model.ApiRequestLogsResult.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.ApiRequestLogsResult.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.ApiRequestLogsResult.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.ApiRequestLogsResult.Equals(DocuSign.eSign.Model.ApiRequestLogsResult)">
            <summary>
            Returns true if ApiRequestLogsResult instances are equal
            </summary>
            <param name="other">Instance of ApiRequestLogsResult to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.ApiRequestLogsResult.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.Approve">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Approve.ButtonText">
            <summary>
            Specifies the text displayed in the tab.
            </summary>
            <value>Specifies the text displayed in the tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Approve.Width">
            <summary>
            Width of the tab in pixels.
            </summary>
            <value>Width of the tab in pixels.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Approve.Height">
            <summary>
            Height of the tab in pixels.
            </summary>
            <value>Height of the tab in pixels.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Approve.TabLabel">
            <summary>
            The label string associated with the tab.
            </summary>
            <value>The label string associated with the tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Approve.Font">
            <summary>
            The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.
            </summary>
            <value>The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Approve.Bold">
            <summary>
            When set to **true**, the information in the tab is bold.
            </summary>
            <value>When set to **true**, the information in the tab is bold.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Approve.Italic">
            <summary>
            When set to **true**, the information in the tab is italic.
            </summary>
            <value>When set to **true**, the information in the tab is italic.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Approve.Underline">
            <summary>
            When set to **true**, the information in the tab is underlined.
            </summary>
            <value>When set to **true**, the information in the tab is underlined.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Approve.FontColor">
            <summary>
            The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.
            </summary>
            <value>The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Approve.FontSize">
            <summary>
            The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.
            </summary>
            <value>The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Approve.DocumentId">
            <summary>
            Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
            </summary>
            <value>Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Approve.RecipientId">
            <summary>
            Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
            </summary>
            <value>Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Approve.PageNumber">
            <summary>
            Specifies the page number on which the tab is located.
            </summary>
            <value>Specifies the page number on which the tab is located.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Approve.XPosition">
            <summary>
            This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.
            </summary>
            <value>This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Approve.YPosition">
            <summary>
            This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.
            </summary>
            <value>This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Approve.AnchorString">
            <summary>
            Anchor text information for a radio button.
            </summary>
            <value>Anchor text information for a radio button.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Approve.AnchorXOffset">
            <summary>
            Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.
            </summary>
            <value>Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Approve.AnchorYOffset">
            <summary>
            Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.
            </summary>
            <value>Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Approve.AnchorUnits">
            <summary>
            Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.
            </summary>
            <value>Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Approve.AnchorIgnoreIfNotPresent">
            <summary>
            When set to **true**, this tab is ignored if anchorString is not found in the document.
            </summary>
            <value>When set to **true**, this tab is ignored if anchorString is not found in the document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Approve.AnchorCaseSensitive">
            <summary>
            Reserved:
            </summary>
            <value>Reserved:</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Approve.AnchorMatchWholeWord">
            <summary>
            Reserved:
            </summary>
            <value>Reserved:</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Approve.AnchorHorizontalAlignment">
            <summary>
            Reserved:
            </summary>
            <value>Reserved:</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Approve.TabId">
            <summary>
            The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].
            </summary>
            <value>The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Approve.TemplateLocked">
            <summary>
            When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.
            </summary>
            <value>When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Approve.TemplateRequired">
            <summary>
            When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.
            </summary>
            <value>When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Approve.ConditionalParentLabel">
            <summary>
            For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.
            </summary>
            <value>For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Approve.ConditionalParentValue">
            <summary>
            For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.
            </summary>
            <value>For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Approve.CustomTabId">
            <summary>
            The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
            </summary>
            <value>The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Approve.MergeField">
            <summary>
            Gets or Sets MergeField
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Approve.Status">
            <summary>
            Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.
            </summary>
            <value>Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Approve.ErrorDetails">
            <summary>
            Gets or Sets ErrorDetails
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Model.Approve.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Approve.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Approve.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Approve.Equals(DocuSign.eSign.Model.Approve)">
            <summary>
            Returns true if Approve instances are equal
            </summary>
            <param name="other">Instance of Approve to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Approve.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.Attachment">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Attachment.Label">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Attachment.AttachmentType">
            <summary>
            Specifies the type of the attachment for the recipient.
            </summary>
            <value>Specifies the type of the attachment for the recipient.</value>
        </member>
        <member name="M:DocuSign.eSign.Model.Attachment.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Attachment.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Attachment.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Attachment.Equals(DocuSign.eSign.Model.Attachment)">
            <summary>
            Returns true if Attachment instances are equal
            </summary>
            <param name="other">Instance of Attachment to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Attachment.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.AuthenticationStatus">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.AuthenticationStatus.AccessCodeResult">
            <summary>
            Gets or Sets AccessCodeResult
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.AuthenticationStatus.PhoneAuthResult">
            <summary>
            Gets or Sets PhoneAuthResult
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.AuthenticationStatus.IdLookupResult">
            <summary>
            Gets or Sets IdLookupResult
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.AuthenticationStatus.IdQuestionsResult">
            <summary>
            Gets or Sets IdQuestionsResult
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.AuthenticationStatus.AgeVerifyResult">
            <summary>
            Gets or Sets AgeVerifyResult
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.AuthenticationStatus.STANPinResult">
            <summary>
            Gets or Sets STANPinResult
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.AuthenticationStatus.OfacResult">
            <summary>
            Gets or Sets OfacResult
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.AuthenticationStatus.LiveIDResult">
            <summary>
            Gets or Sets LiveIDResult
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.AuthenticationStatus.FacebookResult">
            <summary>
            Gets or Sets FacebookResult
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.AuthenticationStatus.GoogleResult">
            <summary>
            Gets or Sets GoogleResult
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.AuthenticationStatus.LinkedinResult">
            <summary>
            Gets or Sets LinkedinResult
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.AuthenticationStatus.SalesforceResult">
            <summary>
            Gets or Sets SalesforceResult
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.AuthenticationStatus.TwitterResult">
            <summary>
            Gets or Sets TwitterResult
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.AuthenticationStatus.OpenIDResult">
            <summary>
            Gets or Sets OpenIDResult
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.AuthenticationStatus.AnySocialIDResult">
            <summary>
            Gets or Sets AnySocialIDResult
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.AuthenticationStatus.YahooResult">
            <summary>
            Gets or Sets YahooResult
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.AuthenticationStatus.SmsAuthResult">
            <summary>
            Gets or Sets SmsAuthResult
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Model.AuthenticationStatus.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.AuthenticationStatus.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.AuthenticationStatus.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.AuthenticationStatus.Equals(DocuSign.eSign.Model.AuthenticationStatus)">
            <summary>
            Returns true if AuthenticationStatus instances are equal
            </summary>
            <param name="other">Instance of AuthenticationStatus to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.AuthenticationStatus.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.BccEmailAddress">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.BccEmailAddress.BccEmailAddressId">
            <summary>
            Only users with canManageAccount setting can use this option. An array of up to 5 email addresses the envelope is sent to as a BCC email. \n \nExample: If your account has BCC for Email Archive set up for the email address 'archive@mycompany.com' and you send an envelope using the BCC Email Override to send a BCC email to 'salesarchive@mycompany.com', then a copy of the envelope is only sent to the 'salesarchive@mycompany.com' email address.
            </summary>
            <value>Only users with canManageAccount setting can use this option. An array of up to 5 email addresses the envelope is sent to as a BCC email. \n \nExample: If your account has BCC for Email Archive set up for the email address 'archive@mycompany.com' and you send an envelope using the BCC Email Override to send a BCC email to 'salesarchive@mycompany.com', then a copy of the envelope is only sent to the 'salesarchive@mycompany.com' email address.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.BccEmailAddress.Email">
            <summary>
            Specifies the BCC email address. DocuSign verifies that the email format is correct, but does not verify that the email is active.Using this overrides the BCC for Email Archive information setting for this envelope.\n\nMaximum of length: 100 characters.
            </summary>
            <value>Specifies the BCC email address. DocuSign verifies that the email format is correct, but does not verify that the email is active.Using this overrides the BCC for Email Archive information setting for this envelope.\n\nMaximum of length: 100 characters.</value>
        </member>
        <member name="M:DocuSign.eSign.Model.BccEmailAddress.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.BccEmailAddress.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.BccEmailAddress.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.BccEmailAddress.Equals(DocuSign.eSign.Model.BccEmailAddress)">
            <summary>
            Returns true if BccEmailAddress instances are equal
            </summary>
            <param name="other">Instance of BccEmailAddress to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.BccEmailAddress.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.BulkEnvelope">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.BulkEnvelope.TransactionId">
            <summary>
            Used to identify an envelope. The id is a sender-generated value and is valid in the DocuSign system for 7 days. It is recommended that a transaction ID is used for offline signing to ensure that an envelope is not sent multiple times. The `transactionId` property can be used determine if an envelope status (i.e. was created or not) for cases where an internet connection was lost before the envelope status could be returned.
            </summary>
            <value>Used to identify an envelope. The id is a sender-generated value and is valid in the DocuSign system for 7 days. It is recommended that a transaction ID is used for offline signing to ensure that an envelope is not sent multiple times. The `transactionId` property can be used determine if an envelope status (i.e. was created or not) for cases where an internet connection was lost before the envelope status could be returned.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.BulkEnvelope.SubmittedDateTime">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.BulkEnvelope.EnvelopeId">
            <summary>
            The envelope ID of the envelope status that failed to post.
            </summary>
            <value>The envelope ID of the envelope status that failed to post.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.BulkEnvelope.EnvelopeUri">
            <summary>
            Contains a URI for an endpoint that you can use to retrieve the envelope or envelopes.
            </summary>
            <value>Contains a URI for an endpoint that you can use to retrieve the envelope or envelopes.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.BulkEnvelope.BulkRecipientRow">
            <summary>
            Reserved: TBD
            </summary>
            <value>Reserved: TBD</value>
        </member>
        <member name="P:DocuSign.eSign.Model.BulkEnvelope.Name">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.BulkEnvelope.Email">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.BulkEnvelope.BulkStatus">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.BulkEnvelope.ErrorDetails">
            <summary>
            Gets or Sets ErrorDetails
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Model.BulkEnvelope.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.BulkEnvelope.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.BulkEnvelope.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.BulkEnvelope.Equals(DocuSign.eSign.Model.BulkEnvelope)">
            <summary>
            Returns true if BulkEnvelope instances are equal
            </summary>
            <param name="other">Instance of BulkEnvelope to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.BulkEnvelope.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.BulkEnvelopeStatus">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.BulkEnvelopeStatus.BatchSize">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.BulkEnvelopeStatus.BatchId">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.BulkEnvelopeStatus.BulkEnvelopesBatchUri">
            <summary>
            Reserved: TBD
            </summary>
            <value>Reserved: TBD</value>
        </member>
        <member name="P:DocuSign.eSign.Model.BulkEnvelopeStatus.Failed">
            <summary>
            Entries with a failed status.
            </summary>
            <value>Entries with a failed status.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.BulkEnvelopeStatus.Queued">
            <summary>
            Retrieves entries with a status of queued.
            </summary>
            <value>Retrieves entries with a status of queued.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.BulkEnvelopeStatus.Sent">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.BulkEnvelopeStatus.SubmittedDate">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.BulkEnvelopeStatus.ResultSetSize">
            <summary>
            The number of results returned in this response.
            </summary>
            <value>The number of results returned in this response.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.BulkEnvelopeStatus.StartPosition">
            <summary>
            Starting position of the current result set.
            </summary>
            <value>Starting position of the current result set.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.BulkEnvelopeStatus.EndPosition">
            <summary>
            The last position in the result set.
            </summary>
            <value>The last position in the result set.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.BulkEnvelopeStatus.TotalSetSize">
            <summary>
            The total number of items available in the result set. This will always be greater than or equal to the value of the `resultSetSize` property.
            </summary>
            <value>The total number of items available in the result set. This will always be greater than or equal to the value of the `resultSetSize` property.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.BulkEnvelopeStatus.NextUri">
            <summary>
            The URI to the next chunk of records based on the search request. If the endPosition is the entire results of the search, this is null.
            </summary>
            <value>The URI to the next chunk of records based on the search request. If the endPosition is the entire results of the search, this is null.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.BulkEnvelopeStatus.PreviousUri">
            <summary>
            The postal code for the billing address.
            </summary>
            <value>The postal code for the billing address.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.BulkEnvelopeStatus.BulkEnvelopes">
            <summary>
            Reserved: TBD
            </summary>
            <value>Reserved: TBD</value>
        </member>
        <member name="M:DocuSign.eSign.Model.BulkEnvelopeStatus.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.BulkEnvelopeStatus.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.BulkEnvelopeStatus.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.BulkEnvelopeStatus.Equals(DocuSign.eSign.Model.BulkEnvelopeStatus)">
            <summary>
            Returns true if BulkEnvelopeStatus instances are equal
            </summary>
            <param name="other">Instance of BulkEnvelopeStatus to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.BulkEnvelopeStatus.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.CarbonCopy">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.CarbonCopy.ExcludedDocuments">
            <summary>
            Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.\n\nWhen enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.
            </summary>
            <value>Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.\n\nWhen enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CarbonCopy.Name">
            <summary>
            legal name of the recipient.\n\nMaximum Length: 100 characters.
            </summary>
            <value>legal name of the recipient.\n\nMaximum Length: 100 characters.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CarbonCopy.Email">
            <summary>
            Email id of the recipient. Notification of the document to sign is sent to this email id. \n\nMaximum length: 100 characters.
            </summary>
            <value>Email id of the recipient. Notification of the document to sign is sent to this email id. \n\nMaximum length: 100 characters.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CarbonCopy.EmailRecipientPostSigningURL">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.CarbonCopy.SigningGroupId">
            <summary>
            When set to **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab ( instead of adopting a signature/initial style or only drawing a signature/initial once).
            </summary>
            <value>When set to **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab ( instead of adopting a signature/initial style or only drawing a signature/initial once).</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CarbonCopy.SigningGroupName">
            <summary>
            The display name for the signing group. \n\nMaximum Length: 100 characters.
            </summary>
            <value>The display name for the signing group. \n\nMaximum Length: 100 characters.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CarbonCopy.SigningGroupUsers">
            <summary>
            A complex type that contains information about users in the signing group.
            </summary>
            <value>A complex type that contains information about users in the signing group.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CarbonCopy.RecipientId">
            <summary>
            Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
            </summary>
            <value>Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CarbonCopy.RecipientIdGuid">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.CarbonCopy.AccessCode">
            <summary>
            If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and must conform to account’s access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then access code is not required.
            </summary>
            <value>If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and must conform to account’s access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then access code is not required.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CarbonCopy.AddAccessCodeToEmail">
            <summary>
            This Optional attribute indicates that the access code will be added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient.
            </summary>
            <value>This Optional attribute indicates that the access code will be added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CarbonCopy.RequireIdLookup">
            <summary>
            When set to **true**, the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity.
            </summary>
            <value>When set to **true**, the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CarbonCopy.IdCheckConfigurationName">
            <summary>
            Specifies authentication check by name. The names used here must be the same as the authentication type names used by the account (these name can also be found in the web console sending interface in the Identify list for a recipient,) This overrides any default authentication setting.\n\n*Example*: Your account has ID Check and SMS Authentication available and in the web console Identify list these appear as 'ID Check $' and 'SMS Auth $'. To use ID check in an envelope, the idCheckConfigurationName should be 'ID Check '. If you wanted to use SMS, it would be 'SMS Auth $' and you would need to add you would need to add phone number information to the `smsAuthentication` node.
            </summary>
            <value>Specifies authentication check by name. The names used here must be the same as the authentication type names used by the account (these name can also be found in the web console sending interface in the Identify list for a recipient,) This overrides any default authentication setting.\n\n*Example*: Your account has ID Check and SMS Authentication available and in the web console Identify list these appear as 'ID Check $' and 'SMS Auth $'. To use ID check in an envelope, the idCheckConfigurationName should be 'ID Check '. If you wanted to use SMS, it would be 'SMS Auth $' and you would need to add you would need to add phone number information to the `smsAuthentication` node.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CarbonCopy.SocialAuthentications">
            <summary>
            Lists the social ID type that can be used for recipient authentication.
            </summary>
            <value>Lists the social ID type that can be used for recipient authentication.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CarbonCopy.PhoneAuthentication">
            <summary>
            Gets or Sets PhoneAuthentication
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.CarbonCopy.SamlAuthentication">
            <summary>
            Gets or Sets SamlAuthentication
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.CarbonCopy.SmsAuthentication">
            <summary>
            Gets or Sets SmsAuthentication
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.CarbonCopy.UserId">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.CarbonCopy.ClientUserId">
            <summary>
            Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Note that if the `ClientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true**, an error is generated on sending.ng. \n\nMaximum length: 100 characters.
            </summary>
            <value>Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Note that if the `ClientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true**, an error is generated on sending.ng. \n\nMaximum length: 100 characters.</value>
        </member>
        <!-- Badly formed XML comment ignored for member "P:DocuSign.eSign.Model.CarbonCopy.EmbeddedRecipientStartURL" -->
        <member name="P:DocuSign.eSign.Model.CarbonCopy.CustomFields">
            <summary>
            An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.
            </summary>
            <value>An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CarbonCopy.RoutingOrder">
            <summary>
            Specifies the routing order of the recipient in the envelope.
            </summary>
            <value>Specifies the routing order of the recipient in the envelope.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CarbonCopy.IdCheckInformationInput">
            <summary>
            Gets or Sets IdCheckInformationInput
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.CarbonCopy.RecipientAttachments">
            <summary>
            Reserved:
            </summary>
            <value>Reserved:</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CarbonCopy.Note">
            <summary>
            Specifies a note that is unique to this recipient. This note is sent to the recipient via the signing email. The note displays in the signing UI near the upper left corner of the document on the signing screen.\n\nMaximum Length: 1000 characters.
            </summary>
            <value>Specifies a note that is unique to this recipient. This note is sent to the recipient via the signing email. The note displays in the signing UI near the upper left corner of the document on the signing screen.\n\nMaximum Length: 1000 characters.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CarbonCopy.RoleName">
            <summary>
            Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.
            </summary>
            <value>Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CarbonCopy.Status">
            <summary>
            Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.
            </summary>
            <value>Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CarbonCopy.SignedDateTime">
            <summary>
            Reserved: For DocuSign use only.
            </summary>
            <value>Reserved: For DocuSign use only.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CarbonCopy.DeliveredDateTime">
            <summary>
            Reserved: For DocuSign use only.
            </summary>
            <value>Reserved: For DocuSign use only.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CarbonCopy.DeclinedDateTime">
            <summary>
            The date and time the recipient declined the document.
            </summary>
            <value>The date and time the recipient declined the document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CarbonCopy.SentDateTime">
            <summary>
            The date and time the envelope was sent.
            </summary>
            <value>The date and time the envelope was sent.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CarbonCopy.DeclinedReason">
            <summary>
            The reason the recipient declined the document.
            </summary>
            <value>The reason the recipient declined the document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CarbonCopy.DeliveryMethod">
            <summary>
            Reserved: For DocuSign use only.
            </summary>
            <value>Reserved: For DocuSign use only.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CarbonCopy.FaxNumber">
            <summary>
            Reserved:
            </summary>
            <value>Reserved:</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CarbonCopy.TemplateLocked">
            <summary>
            When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.
            </summary>
            <value>When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CarbonCopy.TemplateRequired">
            <summary>
            When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.
            </summary>
            <value>When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CarbonCopy.EmailNotification">
            <summary>
            Gets or Sets EmailNotification
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.CarbonCopy.InheritEmailNotificationConfiguration">
            <summary>
            When set to **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account.
            </summary>
            <value>When set to **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CarbonCopy.ErrorDetails">
            <summary>
            Gets or Sets ErrorDetails
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.CarbonCopy.RecipientAuthenticationStatus">
            <summary>
            Gets or Sets RecipientAuthenticationStatus
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.CarbonCopy.TotalTabCount">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="M:DocuSign.eSign.Model.CarbonCopy.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.CarbonCopy.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.CarbonCopy.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.CarbonCopy.Equals(DocuSign.eSign.Model.CarbonCopy)">
            <summary>
            Returns true if CarbonCopy instances are equal
            </summary>
            <param name="other">Instance of CarbonCopy to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.CarbonCopy.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.CertifiedDelivery">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.CertifiedDelivery.ExcludedDocuments">
            <summary>
            Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.\n\nWhen enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.
            </summary>
            <value>Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.\n\nWhen enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CertifiedDelivery.Name">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.CertifiedDelivery.Email">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.CertifiedDelivery.EmailRecipientPostSigningURL">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.CertifiedDelivery.SigningGroupId">
            <summary>
            When set to **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab ( instead of adopting a signature/initial style or only drawing a signature/initial once).
            </summary>
            <value>When set to **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab ( instead of adopting a signature/initial style or only drawing a signature/initial once).</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CertifiedDelivery.SigningGroupName">
            <summary>
            The display name for the signing group. \n\nMaximum Length: 100 characters.
            </summary>
            <value>The display name for the signing group. \n\nMaximum Length: 100 characters.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CertifiedDelivery.SigningGroupUsers">
            <summary>
            A complex type that contains information about users in the signing group.
            </summary>
            <value>A complex type that contains information about users in the signing group.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CertifiedDelivery.RecipientId">
            <summary>
            Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
            </summary>
            <value>Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CertifiedDelivery.RecipientIdGuid">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.CertifiedDelivery.AccessCode">
            <summary>
            If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and must conform to account’s access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then access code is not required.
            </summary>
            <value>If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and must conform to account’s access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then access code is not required.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CertifiedDelivery.AddAccessCodeToEmail">
            <summary>
            This Optional attribute indicates that the access code will be added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient.
            </summary>
            <value>This Optional attribute indicates that the access code will be added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CertifiedDelivery.RequireIdLookup">
            <summary>
            When set to **true**, the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity.
            </summary>
            <value>When set to **true**, the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CertifiedDelivery.IdCheckConfigurationName">
            <summary>
            Specifies authentication check by name. The names used here must be the same as the authentication type names used by the account (these name can also be found in the web console sending interface in the Identify list for a recipient,) This overrides any default authentication setting.\n\n*Example*: Your account has ID Check and SMS Authentication available and in the web console Identify list these appear as 'ID Check $' and 'SMS Auth $'. To use ID check in an envelope, the idCheckConfigurationName should be 'ID Check '. If you wanted to use SMS, it would be 'SMS Auth $' and you would need to add you would need to add phone number information to the `smsAuthentication` node.
            </summary>
            <value>Specifies authentication check by name. The names used here must be the same as the authentication type names used by the account (these name can also be found in the web console sending interface in the Identify list for a recipient,) This overrides any default authentication setting.\n\n*Example*: Your account has ID Check and SMS Authentication available and in the web console Identify list these appear as 'ID Check $' and 'SMS Auth $'. To use ID check in an envelope, the idCheckConfigurationName should be 'ID Check '. If you wanted to use SMS, it would be 'SMS Auth $' and you would need to add you would need to add phone number information to the `smsAuthentication` node.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CertifiedDelivery.SocialAuthentications">
            <summary>
            Lists the social ID type that can be used for recipient authentication.
            </summary>
            <value>Lists the social ID type that can be used for recipient authentication.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CertifiedDelivery.PhoneAuthentication">
            <summary>
            Gets or Sets PhoneAuthentication
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.CertifiedDelivery.SamlAuthentication">
            <summary>
            Gets or Sets SamlAuthentication
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.CertifiedDelivery.SmsAuthentication">
            <summary>
            Gets or Sets SmsAuthentication
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.CertifiedDelivery.UserId">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.CertifiedDelivery.ClientUserId">
            <summary>
            Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Note that if the `ClientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true**, an error is generated on sending.ng. \n\nMaximum length: 100 characters.
            </summary>
            <value>Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Note that if the `ClientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true**, an error is generated on sending.ng. \n\nMaximum length: 100 characters.</value>
        </member>
        <!-- Badly formed XML comment ignored for member "P:DocuSign.eSign.Model.CertifiedDelivery.EmbeddedRecipientStartURL" -->
        <member name="P:DocuSign.eSign.Model.CertifiedDelivery.CustomFields">
            <summary>
            An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.
            </summary>
            <value>An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CertifiedDelivery.RoutingOrder">
            <summary>
            Specifies the routing order of the recipient in the envelope.
            </summary>
            <value>Specifies the routing order of the recipient in the envelope.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CertifiedDelivery.IdCheckInformationInput">
            <summary>
            Gets or Sets IdCheckInformationInput
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.CertifiedDelivery.RecipientAttachments">
            <summary>
            Reserved:
            </summary>
            <value>Reserved:</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CertifiedDelivery.Note">
            <summary>
            Specifies a note that is unique to this recipient. This note is sent to the recipient via the signing email. The note displays in the signing UI near the upper left corner of the document on the signing screen.\n\nMaximum Length: 1000 characters.
            </summary>
            <value>Specifies a note that is unique to this recipient. This note is sent to the recipient via the signing email. The note displays in the signing UI near the upper left corner of the document on the signing screen.\n\nMaximum Length: 1000 characters.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CertifiedDelivery.RoleName">
            <summary>
            Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.
            </summary>
            <value>Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CertifiedDelivery.Status">
            <summary>
            Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.
            </summary>
            <value>Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CertifiedDelivery.SignedDateTime">
            <summary>
            Reserved: For DocuSign use only.
            </summary>
            <value>Reserved: For DocuSign use only.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CertifiedDelivery.DeliveredDateTime">
            <summary>
            Reserved: For DocuSign use only.
            </summary>
            <value>Reserved: For DocuSign use only.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CertifiedDelivery.DeclinedDateTime">
            <summary>
            The date and time the recipient declined the document.
            </summary>
            <value>The date and time the recipient declined the document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CertifiedDelivery.SentDateTime">
            <summary>
            The date and time the envelope was sent.
            </summary>
            <value>The date and time the envelope was sent.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CertifiedDelivery.DeclinedReason">
            <summary>
            The reason the recipient declined the document.
            </summary>
            <value>The reason the recipient declined the document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CertifiedDelivery.DeliveryMethod">
            <summary>
            Reserved: For DocuSign use only.
            </summary>
            <value>Reserved: For DocuSign use only.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CertifiedDelivery.FaxNumber">
            <summary>
            Reserved:
            </summary>
            <value>Reserved:</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CertifiedDelivery.TemplateLocked">
            <summary>
            When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.
            </summary>
            <value>When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CertifiedDelivery.TemplateRequired">
            <summary>
            When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.
            </summary>
            <value>When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CertifiedDelivery.EmailNotification">
            <summary>
            Gets or Sets EmailNotification
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.CertifiedDelivery.InheritEmailNotificationConfiguration">
            <summary>
            When set to **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account.
            </summary>
            <value>When set to **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CertifiedDelivery.ErrorDetails">
            <summary>
            Gets or Sets ErrorDetails
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.CertifiedDelivery.RecipientAuthenticationStatus">
            <summary>
            Gets or Sets RecipientAuthenticationStatus
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.CertifiedDelivery.TotalTabCount">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="M:DocuSign.eSign.Model.CertifiedDelivery.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.CertifiedDelivery.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.CertifiedDelivery.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.CertifiedDelivery.Equals(DocuSign.eSign.Model.CertifiedDelivery)">
            <summary>
            Returns true if CertifiedDelivery instances are equal
            </summary>
            <param name="other">Instance of CertifiedDelivery to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.CertifiedDelivery.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.Checkbox">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Checkbox.Name">
            <summary>
            Specifies the tool tip text for the tab.
            </summary>
            <value>Specifies the tool tip text for the tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Checkbox.TabLabel">
            <summary>
            The label string associated with the tab.
            </summary>
            <value>The label string associated with the tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Checkbox.Selected">
            <summary>
            When set to **true**, the checkbox is selected.
            </summary>
            <value>When set to **true**, the checkbox is selected.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Checkbox.Shared">
            <summary>
            When set to **true**, this custom tab is shared.
            </summary>
            <value>When set to **true**, this custom tab is shared.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Checkbox.RequireInitialOnSharedChange">
            <summary>
            Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.
            </summary>
            <value>Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Checkbox.Required">
            <summary>
            When set to **true**, the signer is required to fill out this tab
            </summary>
            <value>When set to **true**, the signer is required to fill out this tab</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Checkbox.Locked">
            <summary>
            When set to **true**, the signer cannot change the data of the custom tab.
            </summary>
            <value>When set to **true**, the signer cannot change the data of the custom tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Checkbox.DocumentId">
            <summary>
            Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
            </summary>
            <value>Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Checkbox.RecipientId">
            <summary>
            Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
            </summary>
            <value>Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Checkbox.PageNumber">
            <summary>
            Specifies the page number on which the tab is located.
            </summary>
            <value>Specifies the page number on which the tab is located.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Checkbox.XPosition">
            <summary>
            This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.
            </summary>
            <value>This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Checkbox.YPosition">
            <summary>
            This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.
            </summary>
            <value>This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Checkbox.AnchorString">
            <summary>
            Anchor text information for a radio button.
            </summary>
            <value>Anchor text information for a radio button.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Checkbox.AnchorXOffset">
            <summary>
            Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.
            </summary>
            <value>Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Checkbox.AnchorYOffset">
            <summary>
            Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.
            </summary>
            <value>Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Checkbox.AnchorUnits">
            <summary>
            Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.
            </summary>
            <value>Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Checkbox.AnchorIgnoreIfNotPresent">
            <summary>
            When set to **true**, this tab is ignored if anchorString is not found in the document.
            </summary>
            <value>When set to **true**, this tab is ignored if anchorString is not found in the document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Checkbox.AnchorCaseSensitive">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Checkbox.AnchorMatchWholeWord">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Checkbox.AnchorHorizontalAlignment">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Checkbox.TabId">
            <summary>
            The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].
            </summary>
            <value>The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Checkbox.TemplateLocked">
            <summary>
            When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.
            </summary>
            <value>When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Checkbox.TemplateRequired">
            <summary>
            When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.
            </summary>
            <value>When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Checkbox.ConditionalParentLabel">
            <summary>
            For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.
            </summary>
            <value>For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Checkbox.ConditionalParentValue">
            <summary>
            For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.
            </summary>
            <value>For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Checkbox.CustomTabId">
            <summary>
            The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
            </summary>
            <value>The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Checkbox.MergeField">
            <summary>
            Gets or Sets MergeField
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Checkbox.Status">
            <summary>
            Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.
            </summary>
            <value>Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Checkbox.ErrorDetails">
            <summary>
            Gets or Sets ErrorDetails
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Model.Checkbox.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Checkbox.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Checkbox.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Checkbox.Equals(DocuSign.eSign.Model.Checkbox)">
            <summary>
            Returns true if Checkbox instances are equal
            </summary>
            <param name="other">Instance of Checkbox to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Checkbox.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.Company">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Company.Name">
            <summary>
            Specifies the tool tip text for the tab.
            </summary>
            <value>Specifies the tool tip text for the tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Company.Value">
            <summary>
            Specifies the value of the tab.
            </summary>
            <value>Specifies the value of the tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Company.OriginalValue">
            <summary>
            The initial value of the tab when it was sent to the recipient.
            </summary>
            <value>The initial value of the tab when it was sent to the recipient.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Company.Width">
            <summary>
            Width of the tab in pixels.
            </summary>
            <value>Width of the tab in pixels.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Company.Required">
            <summary>
            When set to **true**, the signer is required to fill out this tab
            </summary>
            <value>When set to **true**, the signer is required to fill out this tab</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Company.Locked">
            <summary>
            When set to **true**, the signer cannot change the data of the custom tab.
            </summary>
            <value>When set to **true**, the signer cannot change the data of the custom tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Company.ConcealValueOnDocument">
            <summary>
            When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
            </summary>
            <value>When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Company.DisableAutoSize">
            <summary>
            When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.
            </summary>
            <value>When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Company.MaxLength">
            <summary>
            An optional value that describes the maximum length of the property when the property is a string.
            </summary>
            <value>An optional value that describes the maximum length of the property when the property is a string.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Company.TabLabel">
            <summary>
            The label string associated with the tab.
            </summary>
            <value>The label string associated with the tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Company.Font">
            <summary>
            The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.
            </summary>
            <value>The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Company.Bold">
            <summary>
            When set to **true**, the information in the tab is bold.
            </summary>
            <value>When set to **true**, the information in the tab is bold.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Company.Italic">
            <summary>
            When set to **true**, the information in the tab is italic.
            </summary>
            <value>When set to **true**, the information in the tab is italic.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Company.Underline">
            <summary>
            When set to **true**, the information in the tab is underlined.
            </summary>
            <value>When set to **true**, the information in the tab is underlined.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Company.FontColor">
            <summary>
            The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.
            </summary>
            <value>The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Company.FontSize">
            <summary>
            The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.
            </summary>
            <value>The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Company.DocumentId">
            <summary>
            Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
            </summary>
            <value>Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Company.RecipientId">
            <summary>
            Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
            </summary>
            <value>Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Company.PageNumber">
            <summary>
            Specifies the page number on which the tab is located.
            </summary>
            <value>Specifies the page number on which the tab is located.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Company.XPosition">
            <summary>
            This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.
            </summary>
            <value>This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Company.YPosition">
            <summary>
            This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.
            </summary>
            <value>This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Company.AnchorString">
            <summary>
            Anchor text information for a radio button.
            </summary>
            <value>Anchor text information for a radio button.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Company.AnchorXOffset">
            <summary>
            Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.
            </summary>
            <value>Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Company.AnchorYOffset">
            <summary>
            Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.
            </summary>
            <value>Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Company.AnchorUnits">
            <summary>
            Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.
            </summary>
            <value>Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Company.AnchorIgnoreIfNotPresent">
            <summary>
            When set to **true**, this tab is ignored if anchorString is not found in the document.
            </summary>
            <value>When set to **true**, this tab is ignored if anchorString is not found in the document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Company.AnchorCaseSensitive">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Company.AnchorMatchWholeWord">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Company.AnchorHorizontalAlignment">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Company.TabId">
            <summary>
            The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].
            </summary>
            <value>The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Company.TemplateLocked">
            <summary>
            When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.
            </summary>
            <value>When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Company.TemplateRequired">
            <summary>
            When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.
            </summary>
            <value>When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Company.ConditionalParentLabel">
            <summary>
            For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.
            </summary>
            <value>For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Company.ConditionalParentValue">
            <summary>
            For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.
            </summary>
            <value>For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Company.CustomTabId">
            <summary>
            The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
            </summary>
            <value>The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Company.MergeField">
            <summary>
            Gets or Sets MergeField
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Company.Status">
            <summary>
            Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.
            </summary>
            <value>Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Company.ErrorDetails">
            <summary>
            Gets or Sets ErrorDetails
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Model.Company.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Company.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Company.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Company.Equals(DocuSign.eSign.Model.Company)">
            <summary>
            Returns true if Company instances are equal
            </summary>
            <param name="other">Instance of Company to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Company.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.CompositeTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.CompositeTemplate.CompositeTemplateId">
            <summary>
            Specifies the identify the composite template. It is used as a reference when adding document object information. If used, the document content-disposition must include the composite template ID to which the document should be added. If composite template ID is not specified in the content-disposition, the document is applied based on the value of the `documentId` property only. If no document object is specified, the composite template inherits the first document.
            </summary>
            <value>Specifies the identify the composite template. It is used as a reference when adding document object information. If used, the document content-disposition must include the composite template ID to which the document should be added. If composite template ID is not specified in the content-disposition, the document is applied based on the value of the `documentId` property only. If no document object is specified, the composite template inherits the first document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CompositeTemplate.ServerTemplates">
            <summary>
            0 or more server-side templates and their position in the overlay. If supplied, they are overlaid into the envelope in the order of their Sequence value
            </summary>
            <value>0 or more server-side templates and their position in the overlay. If supplied, they are overlaid into the envelope in the order of their Sequence value</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CompositeTemplate.InlineTemplates">
            <summary>
            Zero or more inline templates and their position in the overlay. If supplied, they are overlaid into the envelope in the order of their Sequence value.
            </summary>
            <value>Zero or more inline templates and their position in the overlay. If supplied, they are overlaid into the envelope in the order of their Sequence value.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CompositeTemplate.PdfMetaDataTemplateSequence">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.CompositeTemplate.Document">
            <summary>
            Gets or Sets Document
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Model.CompositeTemplate.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.CompositeTemplate.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.CompositeTemplate.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.CompositeTemplate.Equals(DocuSign.eSign.Model.CompositeTemplate)">
            <summary>
            Returns true if CompositeTemplate instances are equal
            </summary>
            <param name="other">Instance of CompositeTemplate to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.CompositeTemplate.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.ConsoleViewRequest">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.ConsoleViewRequest.EnvelopeId">
            <summary>
            The envelope ID of the envelope status that failed to post.
            </summary>
            <value>The envelope ID of the envelope status that failed to post.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.ConsoleViewRequest.ReturnUrl">
            <summary>
            The URL to be redirected to after the console view session has ended.
            </summary>
            <value>The URL to be redirected to after the console view session has ended.</value>
        </member>
        <member name="M:DocuSign.eSign.Model.ConsoleViewRequest.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.ConsoleViewRequest.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.ConsoleViewRequest.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.ConsoleViewRequest.Equals(DocuSign.eSign.Model.ConsoleViewRequest)">
            <summary>
            Returns true if ConsoleViewRequest instances are equal
            </summary>
            <param name="other">Instance of ConsoleViewRequest to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.ConsoleViewRequest.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.CorrectViewRequest">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.CorrectViewRequest.SuppressNavigation">
            <summary>
            Specifies whether the window is displayed with or without dressing.
            </summary>
            <value>Specifies whether the window is displayed with or without dressing.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CorrectViewRequest.ReturnUrl">
            <summary>
            Specifies the return point after correcting the envelope. DocuSign returns to the URL and includes an event parameter that can be used to redirect the recipient to another location. The possible event parameters returned are: \n\n* send (user corrects and sends the envelope)\n* save (user saves the envelope)\n* cancel (user cancels the transaction.)\n* error (there is an error when performing the correct or send)\n* sessionEnd (the session ends before the user completes another action)\n\n## Important: You must include HTTPS:// in the URL or the redirect might be blocked by some browsers.
            </summary>
            <value>Specifies the return point after correcting the envelope. DocuSign returns to the URL and includes an event parameter that can be used to redirect the recipient to another location. The possible event parameters returned are: \n\n* send (user corrects and sends the envelope)\n* save (user saves the envelope)\n* cancel (user cancels the transaction.)\n* error (there is an error when performing the correct or send)\n* sessionEnd (the session ends before the user completes another action)\n\n## Important: You must include HTTPS:// in the URL or the redirect might be blocked by some browsers.</value>
        </member>
        <member name="M:DocuSign.eSign.Model.CorrectViewRequest.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.CorrectViewRequest.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.CorrectViewRequest.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.CorrectViewRequest.Equals(DocuSign.eSign.Model.CorrectViewRequest)">
            <summary>
            Returns true if CorrectViewRequest instances are equal
            </summary>
            <param name="other">Instance of CorrectViewRequest to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.CorrectViewRequest.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.CustomFields">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.CustomFields.TextCustomFields">
            <summary>
            An array of text custom fields.
            </summary>
            <value>An array of text custom fields.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CustomFields.ListCustomFields">
            <summary>
            An array of list custom fields.
            </summary>
            <value>An array of list custom fields.</value>
        </member>
        <member name="M:DocuSign.eSign.Model.CustomFields.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.CustomFields.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.CustomFields.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.CustomFields.Equals(DocuSign.eSign.Model.CustomFields)">
            <summary>
            Returns true if CustomFields instances are equal
            </summary>
            <param name="other">Instance of CustomFields to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.CustomFields.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.CustomFieldsEnvelope">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.CustomFieldsEnvelope.TextCustomFields">
            <summary>
            An array of text custom fields.
            </summary>
            <value>An array of text custom fields.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CustomFieldsEnvelope.ListCustomFields">
            <summary>
            An array of list custom fields.
            </summary>
            <value>An array of list custom fields.</value>
        </member>
        <member name="M:DocuSign.eSign.Model.CustomFieldsEnvelope.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.CustomFieldsEnvelope.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.CustomFieldsEnvelope.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.CustomFieldsEnvelope.Equals(DocuSign.eSign.Model.CustomFieldsEnvelope)">
            <summary>
            Returns true if CustomFieldsEnvelope instances are equal
            </summary>
            <param name="other">Instance of CustomFieldsEnvelope to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.CustomFieldsEnvelope.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.CustomFieldV2">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.CustomFieldV2.FieldId">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.CustomFieldV2.Name">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.CustomFieldV2.Show">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.CustomFieldV2.Required">
            <summary>
            When set to **true**, the signer is required to fill out this tab
            </summary>
            <value>When set to **true**, the signer is required to fill out this tab</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CustomFieldV2.Value">
            <summary>
            The value of the custom field.
            </summary>
            <value>The value of the custom field.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.CustomFieldV2.ConfigurationType">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.CustomFieldV2.ErrorDetails">
            <summary>
            Gets or Sets ErrorDetails
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Model.CustomFieldV2.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.CustomFieldV2.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.CustomFieldV2.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.CustomFieldV2.Equals(DocuSign.eSign.Model.CustomFieldV2)">
            <summary>
            Returns true if CustomFieldV2 instances are equal
            </summary>
            <param name="other">Instance of CustomFieldV2 to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.CustomFieldV2.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.Date">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Date.ValidationPattern">
            <summary>
            A regular expressionn used to validate input for the tab.
            </summary>
            <value>A regular expressionn used to validate input for the tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Date.ValidationMessage">
            <summary>
            The message displayed if the custom tab fails input validation (either custom of embedded).
            </summary>
            <value>The message displayed if the custom tab fails input validation (either custom of embedded).</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Date.Shared">
            <summary>
            When set to **true**, this custom tab is shared.
            </summary>
            <value>When set to **true**, this custom tab is shared.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Date.RequireInitialOnSharedChange">
            <summary>
            Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.
            </summary>
            <value>Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Date.SenderRequired">
            <summary>
            When set to **true**, the sender must populate the tab before an envelope can be sent using the template. \n\nThis value tab can only be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired` value of true cannot be deleted from an envelope.
            </summary>
            <value>When set to **true**, the sender must populate the tab before an envelope can be sent using the template. \n\nThis value tab can only be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired` value of true cannot be deleted from an envelope.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Date.RequireAll">
            <summary>
            When set to **true** and shared is true, information must be entered in this field to complete the envelope.
            </summary>
            <value>When set to **true** and shared is true, information must be entered in this field to complete the envelope.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Date.Name">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Date.Value">
            <summary>
            Specifies the value of the tab.
            </summary>
            <value>Specifies the value of the tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Date.OriginalValue">
            <summary>
            The initial value of the tab when it was sent to the recipient.
            </summary>
            <value>The initial value of the tab when it was sent to the recipient.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Date.Width">
            <summary>
            Width of the tab in pixels.
            </summary>
            <value>Width of the tab in pixels.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Date.Required">
            <summary>
            When set to **true**, the signer is required to fill out this tab
            </summary>
            <value>When set to **true**, the signer is required to fill out this tab</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Date.Locked">
            <summary>
            When set to **true**, the signer cannot change the data of the custom tab.
            </summary>
            <value>When set to **true**, the signer cannot change the data of the custom tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Date.ConcealValueOnDocument">
            <summary>
            When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
            </summary>
            <value>When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Date.DisableAutoSize">
            <summary>
            When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.
            </summary>
            <value>When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Date.MaxLength">
            <summary>
            An optional value that describes the maximum length of the property when the property is a string.
            </summary>
            <value>An optional value that describes the maximum length of the property when the property is a string.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Date.TabLabel">
            <summary>
            The label string associated with the tab.
            </summary>
            <value>The label string associated with the tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Date.Font">
            <summary>
            The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.
            </summary>
            <value>The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Date.Bold">
            <summary>
            When set to **true**, the information in the tab is bold.
            </summary>
            <value>When set to **true**, the information in the tab is bold.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Date.Italic">
            <summary>
            When set to **true**, the information in the tab is italic.
            </summary>
            <value>When set to **true**, the information in the tab is italic.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Date.Underline">
            <summary>
            When set to **true**, the information in the tab is underlined.
            </summary>
            <value>When set to **true**, the information in the tab is underlined.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Date.FontColor">
            <summary>
            The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.
            </summary>
            <value>The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Date.FontSize">
            <summary>
            The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.
            </summary>
            <value>The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Date.DocumentId">
            <summary>
            Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
            </summary>
            <value>Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Date.RecipientId">
            <summary>
            Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
            </summary>
            <value>Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Date.PageNumber">
            <summary>
            Specifies the page number on which the tab is located.
            </summary>
            <value>Specifies the page number on which the tab is located.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Date.XPosition">
            <summary>
            This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.
            </summary>
            <value>This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Date.YPosition">
            <summary>
            This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.
            </summary>
            <value>This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Date.AnchorString">
            <summary>
            Anchor text information for a radio button.
            </summary>
            <value>Anchor text information for a radio button.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Date.AnchorXOffset">
            <summary>
            Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.
            </summary>
            <value>Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Date.AnchorYOffset">
            <summary>
            Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.
            </summary>
            <value>Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Date.AnchorUnits">
            <summary>
            Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.
            </summary>
            <value>Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Date.AnchorIgnoreIfNotPresent">
            <summary>
            When set to **true**, this tab is ignored if anchorString is not found in the document.
            </summary>
            <value>When set to **true**, this tab is ignored if anchorString is not found in the document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Date.AnchorCaseSensitive">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Date.AnchorMatchWholeWord">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Date.AnchorHorizontalAlignment">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Date.TabId">
            <summary>
            The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].
            </summary>
            <value>The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Date.TemplateLocked">
            <summary>
            When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.
            </summary>
            <value>When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Date.TemplateRequired">
            <summary>
            When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.
            </summary>
            <value>When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Date.ConditionalParentLabel">
            <summary>
            For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.
            </summary>
            <value>For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Date.ConditionalParentValue">
            <summary>
            For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.
            </summary>
            <value>For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Date.CustomTabId">
            <summary>
            The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
            </summary>
            <value>The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Date.MergeField">
            <summary>
            Gets or Sets MergeField
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Date.Status">
            <summary>
            Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.
            </summary>
            <value>Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Date.ErrorDetails">
            <summary>
            Gets or Sets ErrorDetails
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Model.Date.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Date.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Date.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Date.Equals(DocuSign.eSign.Model.Date)">
            <summary>
            Returns true if Date instances are equal
            </summary>
            <param name="other">Instance of Date to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Date.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.DateSigned">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.DateSigned.Name">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.DateSigned.Value">
            <summary>
            Specifies the value of the tab.
            </summary>
            <value>Specifies the value of the tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.DateSigned.TabLabel">
            <summary>
            The label string associated with the tab.
            </summary>
            <value>The label string associated with the tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.DateSigned.Font">
            <summary>
            The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.
            </summary>
            <value>The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.DateSigned.Bold">
            <summary>
            When set to **true**, the information in the tab is bold.
            </summary>
            <value>When set to **true**, the information in the tab is bold.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.DateSigned.Italic">
            <summary>
            When set to **true**, the information in the tab is italic.
            </summary>
            <value>When set to **true**, the information in the tab is italic.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.DateSigned.Underline">
            <summary>
            When set to **true**, the information in the tab is underlined.
            </summary>
            <value>When set to **true**, the information in the tab is underlined.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.DateSigned.FontColor">
            <summary>
            The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.
            </summary>
            <value>The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.DateSigned.FontSize">
            <summary>
            The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.
            </summary>
            <value>The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.DateSigned.DocumentId">
            <summary>
            Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
            </summary>
            <value>Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.DateSigned.RecipientId">
            <summary>
            Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
            </summary>
            <value>Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.DateSigned.PageNumber">
            <summary>
            Specifies the page number on which the tab is located.
            </summary>
            <value>Specifies the page number on which the tab is located.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.DateSigned.XPosition">
            <summary>
            This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.
            </summary>
            <value>This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.DateSigned.YPosition">
            <summary>
            This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.
            </summary>
            <value>This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.DateSigned.AnchorString">
            <summary>
            Anchor text information for a radio button.
            </summary>
            <value>Anchor text information for a radio button.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.DateSigned.AnchorXOffset">
            <summary>
            Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.
            </summary>
            <value>Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.DateSigned.AnchorYOffset">
            <summary>
            Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.
            </summary>
            <value>Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.DateSigned.AnchorUnits">
            <summary>
            Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.
            </summary>
            <value>Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.DateSigned.AnchorIgnoreIfNotPresent">
            <summary>
            When set to **true**, this tab is ignored if anchorString is not found in the document.
            </summary>
            <value>When set to **true**, this tab is ignored if anchorString is not found in the document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.DateSigned.AnchorCaseSensitive">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.DateSigned.AnchorMatchWholeWord">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.DateSigned.AnchorHorizontalAlignment">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.DateSigned.TabId">
            <summary>
            The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].
            </summary>
            <value>The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].</value>
        </member>
        <member name="P:DocuSign.eSign.Model.DateSigned.TemplateLocked">
            <summary>
            When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.
            </summary>
            <value>When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.DateSigned.TemplateRequired">
            <summary>
            When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.
            </summary>
            <value>When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.DateSigned.ConditionalParentLabel">
            <summary>
            For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.
            </summary>
            <value>For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.DateSigned.ConditionalParentValue">
            <summary>
            For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.
            </summary>
            <value>For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.DateSigned.CustomTabId">
            <summary>
            The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
            </summary>
            <value>The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.DateSigned.MergeField">
            <summary>
            Gets or Sets MergeField
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.DateSigned.Status">
            <summary>
            Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.
            </summary>
            <value>Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.DateSigned.ErrorDetails">
            <summary>
            Gets or Sets ErrorDetails
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Model.DateSigned.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.DateSigned.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.DateSigned.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.DateSigned.Equals(DocuSign.eSign.Model.DateSigned)">
            <summary>
            Returns true if DateSigned instances are equal
            </summary>
            <param name="other">Instance of DateSigned to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.DateSigned.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.Decline">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Decline.ButtonText">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Decline.Width">
            <summary>
            Width of the tab in pixels.
            </summary>
            <value>Width of the tab in pixels.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Decline.Height">
            <summary>
            Height of the tab in pixels.
            </summary>
            <value>Height of the tab in pixels.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Decline.DeclineReason">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Decline.TabLabel">
            <summary>
            The label string associated with the tab.
            </summary>
            <value>The label string associated with the tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Decline.Font">
            <summary>
            The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.
            </summary>
            <value>The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Decline.Bold">
            <summary>
            When set to **true**, the information in the tab is bold.
            </summary>
            <value>When set to **true**, the information in the tab is bold.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Decline.Italic">
            <summary>
            When set to **true**, the information in the tab is italic.
            </summary>
            <value>When set to **true**, the information in the tab is italic.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Decline.Underline">
            <summary>
            When set to **true**, the information in the tab is underlined.
            </summary>
            <value>When set to **true**, the information in the tab is underlined.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Decline.FontColor">
            <summary>
            The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.
            </summary>
            <value>The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Decline.FontSize">
            <summary>
            The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.
            </summary>
            <value>The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Decline.DocumentId">
            <summary>
            Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
            </summary>
            <value>Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Decline.RecipientId">
            <summary>
            Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
            </summary>
            <value>Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Decline.PageNumber">
            <summary>
            Specifies the page number on which the tab is located.
            </summary>
            <value>Specifies the page number on which the tab is located.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Decline.XPosition">
            <summary>
            This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.
            </summary>
            <value>This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Decline.YPosition">
            <summary>
            This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.
            </summary>
            <value>This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Decline.AnchorString">
            <summary>
            Anchor text information for a radio button.
            </summary>
            <value>Anchor text information for a radio button.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Decline.AnchorXOffset">
            <summary>
            Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.
            </summary>
            <value>Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Decline.AnchorYOffset">
            <summary>
            Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.
            </summary>
            <value>Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Decline.AnchorUnits">
            <summary>
            Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.
            </summary>
            <value>Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Decline.AnchorIgnoreIfNotPresent">
            <summary>
            When set to **true**, this tab is ignored if anchorString is not found in the document.
            </summary>
            <value>When set to **true**, this tab is ignored if anchorString is not found in the document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Decline.AnchorCaseSensitive">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Decline.AnchorMatchWholeWord">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Decline.AnchorHorizontalAlignment">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Decline.TabId">
            <summary>
            The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].
            </summary>
            <value>The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Decline.TemplateLocked">
            <summary>
            When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.
            </summary>
            <value>When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Decline.TemplateRequired">
            <summary>
            When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.
            </summary>
            <value>When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Decline.ConditionalParentLabel">
            <summary>
            For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.
            </summary>
            <value>For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Decline.ConditionalParentValue">
            <summary>
            For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.
            </summary>
            <value>For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Decline.CustomTabId">
            <summary>
            The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
            </summary>
            <value>The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Decline.MergeField">
            <summary>
            Gets or Sets MergeField
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Decline.Status">
            <summary>
            Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.
            </summary>
            <value>Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Decline.ErrorDetails">
            <summary>
            Gets or Sets ErrorDetails
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Model.Decline.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Decline.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Decline.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Decline.Equals(DocuSign.eSign.Model.Decline)">
            <summary>
            Returns true if Decline instances are equal
            </summary>
            <param name="other">Instance of Decline to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Decline.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.DiagnosticsSettingsInformation">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.DiagnosticsSettingsInformation.ApiRequestLogging">
            <summary>
            When set to **true**, enables API request logging for the user.
            </summary>
            <value>When set to **true**, enables API request logging for the user.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.DiagnosticsSettingsInformation.ApiRequestLogMaxEntries">
            <summary>
            Specifies the maximum number of API requests to log.
            </summary>
            <value>Specifies the maximum number of API requests to log.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.DiagnosticsSettingsInformation.ApiRequestLogRemainingEntries">
            <summary>
            Indicates the remaining number of API requests that can be logged.
            </summary>
            <value>Indicates the remaining number of API requests that can be logged.</value>
        </member>
        <member name="M:DocuSign.eSign.Model.DiagnosticsSettingsInformation.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.DiagnosticsSettingsInformation.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.DiagnosticsSettingsInformation.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.DiagnosticsSettingsInformation.Equals(DocuSign.eSign.Model.DiagnosticsSettingsInformation)">
            <summary>
            Returns true if DiagnosticsSettingsInformation instances are equal
            </summary>
            <param name="other">Instance of DiagnosticsSettingsInformation to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.DiagnosticsSettingsInformation.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.DobInformationInput">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.DobInformationInput.DateOfBirth">
            <summary>
            Specifies the recipient’s date, month, and year of birth.
            </summary>
            <value>Specifies the recipient’s date, month, and year of birth.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.DobInformationInput.DisplayLevelCode">
            <summary>
            Specifies the display level for the recipient. \nValid values are: \n\n* ReadOnly\n* Editable\n* DoNotDisplay
            </summary>
            <value>Specifies the display level for the recipient. \nValid values are: \n\n* ReadOnly\n* Editable\n* DoNotDisplay</value>
        </member>
        <member name="P:DocuSign.eSign.Model.DobInformationInput.ReceiveInResponse">
            <summary>
            When set to **true**, the information needs to be returned in the response.
            </summary>
            <value>When set to **true**, the information needs to be returned in the response.</value>
        </member>
        <member name="M:DocuSign.eSign.Model.DobInformationInput.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.DobInformationInput.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.DobInformationInput.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.DobInformationInput.Equals(DocuSign.eSign.Model.DobInformationInput)">
            <summary>
            Returns true if DobInformationInput instances are equal
            </summary>
            <param name="other">Instance of DobInformationInput to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.DobInformationInput.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.Document">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Document.DocumentId">
            <summary>
            Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
            </summary>
            <value>Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Document.Uri">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Document.RemoteUrl">
            <summary>
            The file id from the cloud storage service where the document is located. This information is returned using [ML:GET /folders] or [ML:/folders/{folderid}].
            </summary>
            <value>The file id from the cloud storage service where the document is located. This information is returned using [ML:GET /folders] or [ML:/folders/{folderid}].</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Document.Name">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Document.Password">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Document.TransformPdfFields">
            <summary>
            When set to **true**, PDF form field data is transformed into document tab values when the PDF form field name matches the DocuSign custom tab tabLabel. The resulting PDF form data is also returned in the PDF meta data when requesting the document PDF. See the [ML:Transform PDF Fields] section for more information about how fields are transformed into DocuSign tabs.
            </summary>
            <value>When set to **true**, PDF form field data is transformed into document tab values when the PDF form field name matches the DocuSign custom tab tabLabel. The resulting PDF form data is also returned in the PDF meta data when requesting the document PDF. See the [ML:Transform PDF Fields] section for more information about how fields are transformed into DocuSign tabs.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Document.FileExtension">
            <summary>
            The file extension type of the document. If the document is not a PDF it is converted to a PDF.
            </summary>
            <value>The file extension type of the document. If the document is not a PDF it is converted to a PDF.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Document.MatchBoxes">
            <summary>
            Matchboxes define areas in a document for document matching when you are creating envelopes. They are only used when you upload and edit a template. \n\nA matchbox consists of 5 elements:\n\n* pageNumber - The document page number  on which the matchbox will appear. \n* xPosition - The x position of the matchbox on a page. \n* yPosition - The y position of the matchbox on a page.\n* width - The width of the matchbox. \n* height - The height of the matchbox.
            </summary>
            <value>Matchboxes define areas in a document for document matching when you are creating envelopes. They are only used when you upload and edit a template. \n\nA matchbox consists of 5 elements:\n\n* pageNumber - The document page number  on which the matchbox will appear. \n* xPosition - The x position of the matchbox on a page. \n* yPosition - The y position of the matchbox on a page.\n* width - The width of the matchbox. \n* height - The height of the matchbox.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Document.Order">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Document.Pages">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Document.DocumentFields">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Document.EncryptedWithKeyManager">
            <summary>
            When set to **true**, the document is been already encrypted by the sender for use with the DocuSign Key Manager Security Appliance.
            </summary>
            <value>When set to **true**, the document is been already encrypted by the sender for use with the DocuSign Key Manager Security Appliance.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Document.DocumentBase64">
            <summary>
            The document byte stream. This allows putting a base64 version of document bytes into an envelope.
            </summary>
            <value>The document byte stream. This allows putting a base64 version of document bytes into an envelope.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Document.ApplyAnchorTabs">
            <summary>
            Reserved: TBD
            </summary>
            <value>Reserved: TBD</value>
        </member>
        <member name="M:DocuSign.eSign.Model.Document.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Document.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Document.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Document.Equals(DocuSign.eSign.Model.Document)">
            <summary>
            Returns true if Document instances are equal
            </summary>
            <param name="other">Instance of Document to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Document.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.DocumentFieldsInformation">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.DocumentFieldsInformation.DocumentFields">
            <summary>
            The array of name/value custom data strings to be added to a document. Custom document field information is returned in the status, but otherwise is not used by DocuSign. The array contains the elements: \n\n* name – A string that can be a maximum of 50 characters. \n* value – A string that can be a maximum of 200 characters.\n\n*IMPORTANT*: If you are using xml, the name/value pair is contained in a nameValue element.
            </summary>
            <value>The array of name/value custom data strings to be added to a document. Custom document field information is returned in the status, but otherwise is not used by DocuSign. The array contains the elements: \n\n* name – A string that can be a maximum of 50 characters. \n* value – A string that can be a maximum of 200 characters.\n\n*IMPORTANT*: If you are using xml, the name/value pair is contained in a nameValue element.</value>
        </member>
        <member name="M:DocuSign.eSign.Model.DocumentFieldsInformation.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.DocumentFieldsInformation.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.DocumentFieldsInformation.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.DocumentFieldsInformation.Equals(DocuSign.eSign.Model.DocumentFieldsInformation)">
            <summary>
            Returns true if DocumentFieldsInformation instances are equal
            </summary>
            <param name="other">Instance of DocumentFieldsInformation to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.DocumentFieldsInformation.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.DocumentTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.DocumentTemplate.DocumentId">
            <summary>
            Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
            </summary>
            <value>Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.DocumentTemplate.TemplateId">
            <summary>
            The unique identifier of the template. If this is not provided, DocuSign will generate a value.
            </summary>
            <value>The unique identifier of the template. If this is not provided, DocuSign will generate a value.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.DocumentTemplate.DocumentStartPage">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.DocumentTemplate.DocumentEndPage">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.DocumentTemplate.ErrorDetails">
            <summary>
            Gets or Sets ErrorDetails
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Model.DocumentTemplate.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.DocumentTemplate.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.DocumentTemplate.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.DocumentTemplate.Equals(DocuSign.eSign.Model.DocumentTemplate)">
            <summary>
            Returns true if DocumentTemplate instances are equal
            </summary>
            <param name="other">Instance of DocumentTemplate to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.DocumentTemplate.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.DocumentTemplateList">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.DocumentTemplateList.DocumentTemplates">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="M:DocuSign.eSign.Model.DocumentTemplateList.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.DocumentTemplateList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.DocumentTemplateList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.DocumentTemplateList.Equals(DocuSign.eSign.Model.DocumentTemplateList)">
            <summary>
            Returns true if DocumentTemplateList instances are equal
            </summary>
            <param name="other">Instance of DocumentTemplateList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.DocumentTemplateList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.Editor">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Editor.Name">
            <summary>
            legal name of the recipient.\n\nMaximum Length: 100 characters.
            </summary>
            <value>legal name of the recipient.\n\nMaximum Length: 100 characters.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Editor.Email">
            <summary>
            Email id of the recipient. Notification of the document to sign is sent to this email id. \n\nMaximum length: 100 characters.
            </summary>
            <value>Email id of the recipient. Notification of the document to sign is sent to this email id. \n\nMaximum length: 100 characters.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Editor.EmailRecipientPostSigningURL">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Editor.SigningGroupId">
            <summary>
            When set to **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab ( instead of adopting a signature/initial style or only drawing a signature/initial once).
            </summary>
            <value>When set to **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab ( instead of adopting a signature/initial style or only drawing a signature/initial once).</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Editor.SigningGroupName">
            <summary>
            The display name for the signing group. \n\nMaximum Length: 100 characters.
            </summary>
            <value>The display name for the signing group. \n\nMaximum Length: 100 characters.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Editor.SigningGroupUsers">
            <summary>
            A complex type that contains information about users in the signing group.
            </summary>
            <value>A complex type that contains information about users in the signing group.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Editor.RecipientId">
            <summary>
            Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
            </summary>
            <value>Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Editor.RecipientIdGuid">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Editor.AccessCode">
            <summary>
            If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and must conform to account’s access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then access code is not required.
            </summary>
            <value>If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and must conform to account’s access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then access code is not required.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Editor.AddAccessCodeToEmail">
            <summary>
            This Optional attribute indicates that the access code will be added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient.
            </summary>
            <value>This Optional attribute indicates that the access code will be added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Editor.RequireIdLookup">
            <summary>
            When set to **true**, the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity.
            </summary>
            <value>When set to **true**, the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Editor.IdCheckConfigurationName">
            <summary>
            Specifies authentication check by name. The names used here must be the same as the authentication type names used by the account (these name can also be found in the web console sending interface in the Identify list for a recipient,) This overrides any default authentication setting.\n\n*Example*: Your account has ID Check and SMS Authentication available and in the web console Identify list these appear as 'ID Check $' and 'SMS Auth $'. To use ID check in an envelope, the idCheckConfigurationName should be 'ID Check '. If you wanted to use SMS, it would be 'SMS Auth $' and you would need to add you would need to add phone number information to the `smsAuthentication` node.
            </summary>
            <value>Specifies authentication check by name. The names used here must be the same as the authentication type names used by the account (these name can also be found in the web console sending interface in the Identify list for a recipient,) This overrides any default authentication setting.\n\n*Example*: Your account has ID Check and SMS Authentication available and in the web console Identify list these appear as 'ID Check $' and 'SMS Auth $'. To use ID check in an envelope, the idCheckConfigurationName should be 'ID Check '. If you wanted to use SMS, it would be 'SMS Auth $' and you would need to add you would need to add phone number information to the `smsAuthentication` node.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Editor.SocialAuthentications">
            <summary>
            Lists the social ID type that can be used for recipient authentication.
            </summary>
            <value>Lists the social ID type that can be used for recipient authentication.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Editor.PhoneAuthentication">
            <summary>
            Gets or Sets PhoneAuthentication
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Editor.SamlAuthentication">
            <summary>
            Gets or Sets SamlAuthentication
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Editor.SmsAuthentication">
            <summary>
            Gets or Sets SmsAuthentication
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Editor.UserId">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Editor.ClientUserId">
            <summary>
            Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Note that if the `ClientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true**, an error is generated on sending.ng. \n\nMaximum length: 100 characters.
            </summary>
            <value>Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Note that if the `ClientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true**, an error is generated on sending.ng. \n\nMaximum length: 100 characters.</value>
        </member>
        <!-- Badly formed XML comment ignored for member "P:DocuSign.eSign.Model.Editor.EmbeddedRecipientStartURL" -->
        <member name="P:DocuSign.eSign.Model.Editor.CustomFields">
            <summary>
            An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.
            </summary>
            <value>An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Editor.RoutingOrder">
            <summary>
            Specifies the routing order of the recipient in the envelope.
            </summary>
            <value>Specifies the routing order of the recipient in the envelope.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Editor.IdCheckInformationInput">
            <summary>
            Gets or Sets IdCheckInformationInput
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Editor.RecipientAttachments">
            <summary>
            Reserved:
            </summary>
            <value>Reserved:</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Editor.Note">
            <summary>
            Specifies a note that is unique to this recipient. This note is sent to the recipient via the signing email. The note displays in the signing UI near the upper left corner of the document on the signing screen.\n\nMaximum Length: 1000 characters.
            </summary>
            <value>Specifies a note that is unique to this recipient. This note is sent to the recipient via the signing email. The note displays in the signing UI near the upper left corner of the document on the signing screen.\n\nMaximum Length: 1000 characters.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Editor.RoleName">
            <summary>
            Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.
            </summary>
            <value>Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Editor.Status">
            <summary>
            Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.
            </summary>
            <value>Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Editor.SignedDateTime">
            <summary>
            Reserved: For DocuSign use only.
            </summary>
            <value>Reserved: For DocuSign use only.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Editor.DeliveredDateTime">
            <summary>
            Reserved: For DocuSign use only.
            </summary>
            <value>Reserved: For DocuSign use only.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Editor.DeclinedDateTime">
            <summary>
            The date and time the recipient declined the document.
            </summary>
            <value>The date and time the recipient declined the document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Editor.SentDateTime">
            <summary>
            The date and time the envelope was sent.
            </summary>
            <value>The date and time the envelope was sent.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Editor.DeclinedReason">
            <summary>
            The reason the recipient declined the document.
            </summary>
            <value>The reason the recipient declined the document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Editor.DeliveryMethod">
            <summary>
            Reserved: For DocuSign use only.
            </summary>
            <value>Reserved: For DocuSign use only.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Editor.FaxNumber">
            <summary>
            Reserved:
            </summary>
            <value>Reserved:</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Editor.TemplateLocked">
            <summary>
            When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.
            </summary>
            <value>When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Editor.TemplateRequired">
            <summary>
            When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.
            </summary>
            <value>When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Editor.EmailNotification">
            <summary>
            Gets or Sets EmailNotification
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Editor.InheritEmailNotificationConfiguration">
            <summary>
            When set to **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account.
            </summary>
            <value>When set to **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Editor.ErrorDetails">
            <summary>
            Gets or Sets ErrorDetails
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Editor.RecipientAuthenticationStatus">
            <summary>
            Gets or Sets RecipientAuthenticationStatus
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Editor.TotalTabCount">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="M:DocuSign.eSign.Model.Editor.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Editor.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Editor.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Editor.Equals(DocuSign.eSign.Model.Editor)">
            <summary>
            Returns true if Editor instances are equal
            </summary>
            <param name="other">Instance of Editor to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Editor.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.Email">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Email.ValidationPattern">
            <summary>
            A regular expressionn used to validate input for the tab.
            </summary>
            <value>A regular expressionn used to validate input for the tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Email.ValidationMessage">
            <summary>
            The message displayed if the custom tab fails input validation (either custom of embedded).
            </summary>
            <value>The message displayed if the custom tab fails input validation (either custom of embedded).</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Email.Shared">
            <summary>
            When set to **true**, this custom tab is shared.
            </summary>
            <value>When set to **true**, this custom tab is shared.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Email.RequireInitialOnSharedChange">
            <summary>
            Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.
            </summary>
            <value>Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Email.SenderRequired">
            <summary>
            When set to **true**, the sender must populate the tab before an envelope can be sent using the template. \n\nThis value tab can only be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired` value of true cannot be deleted from an envelope.
            </summary>
            <value>When set to **true**, the sender must populate the tab before an envelope can be sent using the template. \n\nThis value tab can only be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired` value of true cannot be deleted from an envelope.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Email.RequireAll">
            <summary>
            When set to **true** and shared is true, information must be entered in this field to complete the envelope.
            </summary>
            <value>When set to **true** and shared is true, information must be entered in this field to complete the envelope.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Email.Name">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Email.Value">
            <summary>
            Specifies the value of the tab.
            </summary>
            <value>Specifies the value of the tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Email.OriginalValue">
            <summary>
            The initial value of the tab when it was sent to the recipient.
            </summary>
            <value>The initial value of the tab when it was sent to the recipient.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Email.Width">
            <summary>
            Width of the tab in pixels.
            </summary>
            <value>Width of the tab in pixels.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Email.Required">
            <summary>
            When set to **true**, the signer is required to fill out this tab
            </summary>
            <value>When set to **true**, the signer is required to fill out this tab</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Email.Locked">
            <summary>
            When set to **true**, the signer cannot change the data of the custom tab.
            </summary>
            <value>When set to **true**, the signer cannot change the data of the custom tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Email.ConcealValueOnDocument">
            <summary>
            When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
            </summary>
            <value>When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Email.DisableAutoSize">
            <summary>
            When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.
            </summary>
            <value>When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Email.MaxLength">
            <summary>
            An optional value that describes the maximum length of the property when the property is a string.
            </summary>
            <value>An optional value that describes the maximum length of the property when the property is a string.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Email.TabLabel">
            <summary>
            The label string associated with the tab.
            </summary>
            <value>The label string associated with the tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Email.Font">
            <summary>
            The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.
            </summary>
            <value>The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Email.Bold">
            <summary>
            When set to **true**, the information in the tab is bold.
            </summary>
            <value>When set to **true**, the information in the tab is bold.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Email.Italic">
            <summary>
            When set to **true**, the information in the tab is italic.
            </summary>
            <value>When set to **true**, the information in the tab is italic.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Email.Underline">
            <summary>
            When set to **true**, the information in the tab is underlined.
            </summary>
            <value>When set to **true**, the information in the tab is underlined.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Email.FontColor">
            <summary>
            The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.
            </summary>
            <value>The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Email.FontSize">
            <summary>
            The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.
            </summary>
            <value>The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Email.DocumentId">
            <summary>
            Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
            </summary>
            <value>Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Email.RecipientId">
            <summary>
            Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
            </summary>
            <value>Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Email.PageNumber">
            <summary>
            Specifies the page number on which the tab is located.
            </summary>
            <value>Specifies the page number on which the tab is located.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Email.XPosition">
            <summary>
            This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.
            </summary>
            <value>This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Email.YPosition">
            <summary>
            This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.
            </summary>
            <value>This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Email.AnchorString">
            <summary>
            Anchor text information for a radio button.
            </summary>
            <value>Anchor text information for a radio button.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Email.AnchorXOffset">
            <summary>
            Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.
            </summary>
            <value>Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Email.AnchorYOffset">
            <summary>
            Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.
            </summary>
            <value>Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Email.AnchorUnits">
            <summary>
            Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.
            </summary>
            <value>Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Email.AnchorIgnoreIfNotPresent">
            <summary>
            When set to **true**, this tab is ignored if anchorString is not found in the document.
            </summary>
            <value>When set to **true**, this tab is ignored if anchorString is not found in the document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Email.AnchorCaseSensitive">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Email.AnchorMatchWholeWord">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Email.AnchorHorizontalAlignment">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Email.TabId">
            <summary>
            The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].
            </summary>
            <value>The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Email.TemplateLocked">
            <summary>
            When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.
            </summary>
            <value>When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Email.TemplateRequired">
            <summary>
            When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.
            </summary>
            <value>When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Email.ConditionalParentLabel">
            <summary>
            For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.
            </summary>
            <value>For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Email.ConditionalParentValue">
            <summary>
            For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.
            </summary>
            <value>For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Email.CustomTabId">
            <summary>
            The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
            </summary>
            <value>The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Email.MergeField">
            <summary>
            Gets or Sets MergeField
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Email.Status">
            <summary>
            Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.
            </summary>
            <value>Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Email.ErrorDetails">
            <summary>
            Gets or Sets ErrorDetails
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Model.Email.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Email.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Email.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Email.Equals(DocuSign.eSign.Model.Email)">
            <summary>
            Returns true if Email instances are equal
            </summary>
            <param name="other">Instance of Email to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Email.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.EmailAddress">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.EmailAddress.Name">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.EmailAddress.TabLabel">
            <summary>
            The label string associated with the tab.
            </summary>
            <value>The label string associated with the tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EmailAddress.Font">
            <summary>
            The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.
            </summary>
            <value>The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EmailAddress.Bold">
            <summary>
            When set to **true**, the information in the tab is bold.
            </summary>
            <value>When set to **true**, the information in the tab is bold.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EmailAddress.Italic">
            <summary>
            When set to **true**, the information in the tab is italic.
            </summary>
            <value>When set to **true**, the information in the tab is italic.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EmailAddress.Underline">
            <summary>
            When set to **true**, the information in the tab is underlined.
            </summary>
            <value>When set to **true**, the information in the tab is underlined.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EmailAddress.FontColor">
            <summary>
            The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.
            </summary>
            <value>The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EmailAddress.FontSize">
            <summary>
            The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.
            </summary>
            <value>The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EmailAddress.DocumentId">
            <summary>
            Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
            </summary>
            <value>Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EmailAddress.RecipientId">
            <summary>
            Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
            </summary>
            <value>Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EmailAddress.PageNumber">
            <summary>
            Specifies the page number on which the tab is located.
            </summary>
            <value>Specifies the page number on which the tab is located.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EmailAddress.XPosition">
            <summary>
            This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.
            </summary>
            <value>This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EmailAddress.YPosition">
            <summary>
            This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.
            </summary>
            <value>This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EmailAddress.AnchorString">
            <summary>
            Anchor text information for a radio button.
            </summary>
            <value>Anchor text information for a radio button.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EmailAddress.AnchorXOffset">
            <summary>
            Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.
            </summary>
            <value>Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EmailAddress.AnchorYOffset">
            <summary>
            Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.
            </summary>
            <value>Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EmailAddress.AnchorUnits">
            <summary>
            Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.
            </summary>
            <value>Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EmailAddress.AnchorIgnoreIfNotPresent">
            <summary>
            When set to **true**, this tab is ignored if anchorString is not found in the document.
            </summary>
            <value>When set to **true**, this tab is ignored if anchorString is not found in the document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EmailAddress.AnchorCaseSensitive">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.EmailAddress.AnchorMatchWholeWord">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.EmailAddress.AnchorHorizontalAlignment">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.EmailAddress.TabId">
            <summary>
            The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].
            </summary>
            <value>The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EmailAddress.TemplateLocked">
            <summary>
            When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.
            </summary>
            <value>When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EmailAddress.TemplateRequired">
            <summary>
            When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.
            </summary>
            <value>When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EmailAddress.ConditionalParentLabel">
            <summary>
            For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.
            </summary>
            <value>For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EmailAddress.ConditionalParentValue">
            <summary>
            For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.
            </summary>
            <value>For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EmailAddress.CustomTabId">
            <summary>
            The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
            </summary>
            <value>The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EmailAddress.MergeField">
            <summary>
            Gets or Sets MergeField
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.EmailAddress.Status">
            <summary>
            Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.
            </summary>
            <value>Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EmailAddress.ErrorDetails">
            <summary>
            Gets or Sets ErrorDetails
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Model.EmailAddress.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EmailAddress.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EmailAddress.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EmailAddress.Equals(DocuSign.eSign.Model.EmailAddress)">
            <summary>
            Returns true if EmailAddress instances are equal
            </summary>
            <param name="other">Instance of EmailAddress to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EmailAddress.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.EmailSettings">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.EmailSettings.ReplyEmailAddressOverride">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.EmailSettings.ReplyEmailNameOverride">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.EmailSettings.BccEmailAddresses">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="M:DocuSign.eSign.Model.EmailSettings.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EmailSettings.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EmailSettings.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EmailSettings.Equals(DocuSign.eSign.Model.EmailSettings)">
            <summary>
            Returns true if EmailSettings instances are equal
            </summary>
            <param name="other">Instance of EmailSettings to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EmailSettings.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.Envelope">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Envelope.TransactionId">
            <summary>
            Used to identify an envelope. The id is a sender-generated value and is valid in the DocuSign system for 7 days. It is recommended that a transaction ID is used for offline signing to ensure that an envelope is not sent multiple times. The `transactionId` property can be used determine if an envelope status (i.e. was created or not) for cases where an internet connection was lost before the envelope status could be returned.
            </summary>
            <value>Used to identify an envelope. The id is a sender-generated value and is valid in the DocuSign system for 7 days. It is recommended that a transaction ID is used for offline signing to ensure that an envelope is not sent multiple times. The `transactionId` property can be used determine if an envelope status (i.e. was created or not) for cases where an internet connection was lost before the envelope status could be returned.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Envelope.Status">
            <summary>
            Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n*created - The envelope is saved as a draft and can be modified and sent later.
            </summary>
            <value>Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n*created - The envelope is saved as a draft and can be modified and sent later.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Envelope.DocumentsUri">
            <summary>
            Contains a URI for an endpoint that you can use to retrieve the documents.
            </summary>
            <value>Contains a URI for an endpoint that you can use to retrieve the documents.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Envelope.RecipientsUri">
            <summary>
            Contains a URI for an endpoint that you can use to retrieve the recipients.
            </summary>
            <value>Contains a URI for an endpoint that you can use to retrieve the recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Envelope.Asynchronous">
            <summary>
            When set to **true**, the envelope is queued for processing and the value of the `status` property is set to 'Processing'. Additionally, get status calls return 'Processing' until completed.
            </summary>
            <value>When set to **true**, the envelope is queued for processing and the value of the `status` property is set to 'Processing'. Additionally, get status calls return 'Processing' until completed.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Envelope.EnvelopeUri">
            <summary>
            Contains a URI for an endpoint that you can use to retrieve the envelope or envelopes.
            </summary>
            <value>Contains a URI for an endpoint that you can use to retrieve the envelope or envelopes.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Envelope.EmailSubject">
            <summary>
            Specifies the subject of the email that is sent to all recipients.\n\nSee [ML:Template Email Subject Merge Fields] for information about adding merge field information to the email subject.
            </summary>
            <value>Specifies the subject of the email that is sent to all recipients.\n\nSee [ML:Template Email Subject Merge Fields] for information about adding merge field information to the email subject.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Envelope.EmailBlurb">
            <summary>
            This is the same as the email body. If specified it is included in email body for all envelope recipients.
            </summary>
            <value>This is the same as the email body. If specified it is included in email body for all envelope recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Envelope.EnvelopeId">
            <summary>
            The envelope ID of the envelope status that failed to post.
            </summary>
            <value>The envelope ID of the envelope status that failed to post.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Envelope.SigningLocation">
            <summary>
            Specifies the physical location where the signing takes place. It can have two enumeration values; InPerson and Online. The default value is Online.
            </summary>
            <value>Specifies the physical location where the signing takes place. It can have two enumeration values; InPerson and Online. The default value is Online.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Envelope.CustomFieldsUri">
            <summary>
            Contains a URI for an endpoint that you can use to retrieve the custom fields.
            </summary>
            <value>Contains a URI for an endpoint that you can use to retrieve the custom fields.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Envelope.EnvelopeIdStamping">
            <summary>
            When set to **true**, Envelope ID Stamping is enabled.
            </summary>
            <value>When set to **true**, Envelope ID Stamping is enabled.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Envelope.AuthoritativeCopy">
            <summary>
            Specifies the Authoritative copy feature. If set to true the Authoritative copy feature is enabled.
            </summary>
            <value>Specifies the Authoritative copy feature. If set to true the Authoritative copy feature is enabled.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Envelope.Notification">
            <summary>
            Gets or Sets Notification
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Envelope.NotificationUri">
            <summary>
            Contains a URI for an endpoint that you can use to retrieve the notifications.
            </summary>
            <value>Contains a URI for an endpoint that you can use to retrieve the notifications.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Envelope.EnforceSignerVisibility">
            <summary>
            When set to **true**, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.\n\nYour account must have Document Visibility enabled to use this.
            </summary>
            <value>When set to **true**, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.\n\nYour account must have Document Visibility enabled to use this.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Envelope.EnableWetSign">
            <summary>
            When set to **true**, the signer is allowed to print the document and sign it on paper.
            </summary>
            <value>When set to **true**, the signer is allowed to print the document and sign it on paper.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Envelope.AllowMarkup">
            <summary>
            When set to **true**, Document Markup is enabled for envelope. Account must have Document Markup enabled to use this
            </summary>
            <value>When set to **true**, Document Markup is enabled for envelope. Account must have Document Markup enabled to use this</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Envelope.AllowReassign">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Envelope.CreatedDateTime">
            <summary>
            Indicates the date and time the item was created.
            </summary>
            <value>Indicates the date and time the item was created.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Envelope.LastModifiedDateTime">
            <summary>
            The date and time the item was last modified.
            </summary>
            <value>The date and time the item was last modified.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Envelope.DeliveredDateTime">
            <summary>
            Reserved: For DocuSign use only.
            </summary>
            <value>Reserved: For DocuSign use only.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Envelope.SentDateTime">
            <summary>
            The date and time the envelope was sent.
            </summary>
            <value>The date and time the envelope was sent.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Envelope.CompletedDateTime">
            <summary>
            Specifies the date and time this item was completed.
            </summary>
            <value>Specifies the date and time this item was completed.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Envelope.VoidedDateTime">
            <summary>
            The date and time the envelope or template was voided.
            </summary>
            <value>The date and time the envelope or template was voided.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Envelope.VoidedReason">
            <summary>
            The reason the envelope or template was voided.
            </summary>
            <value>The reason the envelope or template was voided.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Envelope.DeletedDateTime">
            <summary>
            Specifies the data and time the item was deleted.
            </summary>
            <value>Specifies the data and time the item was deleted.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Envelope.DeclinedDateTime">
            <summary>
            The date and time the recipient declined the document.
            </summary>
            <value>The date and time the recipient declined the document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Envelope.StatusChangedDateTime">
            <summary>
            The data and time the status changed.
            </summary>
            <value>The data and time the status changed.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Envelope.DocumentsCombinedUri">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Envelope.CertificateUri">
            <summary>
            Retrieves a URI for an endpoint that allows you to easily retrieve certificate information.
            </summary>
            <value>Retrieves a URI for an endpoint that allows you to easily retrieve certificate information.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Envelope.TemplatesUri">
            <summary>
            Contains a URI for an endpoint which you can use to retrieve the templates.
            </summary>
            <value>Contains a URI for an endpoint which you can use to retrieve the templates.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Envelope.MessageLock">
            <summary>
            When set to **true**, prevents senders from changing the contents of `emailBlurb` and `emailSubject` properties for the envelope. \n\nAdditionally, this prevents users from making changes to the contents of `emailBlurb` and `emailSubject` properties when correcting envelopes. \n\nHowever, if the `messageLock` node is set to true**** and the `emailSubject` property is empty, senders and correctors are able to add a subject to the envelope.
            </summary>
            <value>When set to **true**, prevents senders from changing the contents of `emailBlurb` and `emailSubject` properties for the envelope. \n\nAdditionally, this prevents users from making changes to the contents of `emailBlurb` and `emailSubject` properties when correcting envelopes. \n\nHowever, if the `messageLock` node is set to true**** and the `emailSubject` property is empty, senders and correctors are able to add a subject to the envelope.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Envelope.RecipientsLock">
            <summary>
            When set to **true**, prevents senders from changing, correcting, or deleting the recipient information for the envelope.
            </summary>
            <value>When set to **true**, prevents senders from changing, correcting, or deleting the recipient information for the envelope.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Envelope.UseDisclosure">
            <summary>
            When set to **true**, the disclosure is shown to recipients in accordance with the account’s Electronic Record and Signature Disclosure frequency setting. When set to **false**, the Electronic Record and Signature Disclosure is not shown to any envelope recipients. \n\nIf the `useDisclosure` property is not set, then the account's normal disclosure setting is used and the value of the `useDisclosure` property is not returned in responses when getting envelope information.
            </summary>
            <value>When set to **true**, the disclosure is shown to recipients in accordance with the account’s Electronic Record and Signature Disclosure frequency setting. When set to **false**, the Electronic Record and Signature Disclosure is not shown to any envelope recipients. \n\nIf the `useDisclosure` property is not set, then the account's normal disclosure setting is used and the value of the `useDisclosure` property is not returned in responses when getting envelope information.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Envelope.EmailSettings">
            <summary>
            Gets or Sets EmailSettings
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Envelope.PurgeState">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Envelope.LockInformation">
            <summary>
            Gets or Sets LockInformation
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Envelope.Is21CFRPart11">
            <summary>
            When set to **true**, indicates that this module is enabled on the account.
            </summary>
            <value>When set to **true**, indicates that this module is enabled on the account.</value>
        </member>
        <member name="M:DocuSign.eSign.Model.Envelope.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Envelope.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Envelope.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Envelope.Equals(DocuSign.eSign.Model.Envelope)">
            <summary>
            Returns true if Envelope instances are equal
            </summary>
            <param name="other">Instance of Envelope to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Envelope.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.EnvelopeAuditEvent">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeAuditEvent.EventFields">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeAuditEvent.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeAuditEvent.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeAuditEvent.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeAuditEvent.Equals(DocuSign.eSign.Model.EnvelopeAuditEvent)">
            <summary>
            Returns true if EnvelopeAuditEvent instances are equal
            </summary>
            <param name="other">Instance of EnvelopeAuditEvent to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeAuditEvent.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.EnvelopeAuditEventResponse">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeAuditEventResponse.AuditEvents">
            <summary>
            Reserved: TBD
            </summary>
            <value>Reserved: TBD</value>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeAuditEventResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeAuditEventResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeAuditEventResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeAuditEventResponse.Equals(DocuSign.eSign.Model.EnvelopeAuditEventResponse)">
            <summary>
            Returns true if EnvelopeAuditEventResponse instances are equal
            </summary>
            <param name="other">Instance of EnvelopeAuditEventResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeAuditEventResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.EnvelopeDefinition">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeDefinition.Documents">
            <summary>
            Complex element contains the details on the documents in the envelope.
            </summary>
            <value>Complex element contains the details on the documents in the envelope.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeDefinition.Recipients">
            <summary>
            Gets or Sets Recipients
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeDefinition.CustomFields">
            <summary>
            Gets or Sets CustomFields
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeDefinition.EventNotification">
            <summary>
            Gets or Sets EventNotification
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeDefinition.BrandId">
            <summary>
            This sets the brand profile format used for the envelope. The value in the string is the brandId associated with the profile. Account branding must be enabled for the account to use this option.
            </summary>
            <value>This sets the brand profile format used for the envelope. The value in the string is the brandId associated with the profile. Account branding must be enabled for the account to use this option.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeDefinition.AllowRecipientRecursion">
            <summary>
            When set to **true**, this enables the Recursive Recipients feature and allows a recipient to appear more than once in the routing order.
            </summary>
            <value>When set to **true**, this enables the Recursive Recipients feature and allows a recipient to appear more than once in the routing order.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeDefinition.TemplateId">
            <summary>
            The unique identifier of the template. If this is not provided, DocuSign will generate a value.
            </summary>
            <value>The unique identifier of the template. If this is not provided, DocuSign will generate a value.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeDefinition.TemplateRoles">
            <summary>
            Specifies the template recipients. Each roleName in the template must have a recipient assigned to it. This is made up elements:\n\n* email - The recipient’s email address.\n* name - The recipient’s name.\n* roleName - The template roleName associated with the recipient.\n* clientUserId - Optional, this sets if the signer is This specifies if the recipient is embedded or remote. If the clientUserId is not null then the recipient is embedded. Note that if a ClientUserId is used and the account settings SignerMustHaveAccount or SignerMustLoginToSign are true, an error is generated on sending.\n* defaultRecipient - Optional, When set to **true**, this recipient is the default recipient and any tabs generated by the transformPdfFields option are mapped to this recipient.\n* routingOrder - This specifies the routing order of the recipient in the envelope.\n* accessCode - This optional element specifies the access code a recipient has to enter to validate the identity. This can be a maximum of 50 characters.\n* inPersonSignerName - Optional, if the template role is an in person signer, this is the full legal name of the signer. This can be a maximum of 100 characters.\n* emailNotification - This is an optional complex element that has a role specific emailSubject, emailBody, and language. It follows the same format as the emailNotification node for Recipients.\n* tabs - This allows the tab values to be specified for matching to tabs in the template.
            </summary>
            <value>Specifies the template recipients. Each roleName in the template must have a recipient assigned to it. This is made up elements:\n\n* email - The recipient’s email address.\n* name - The recipient’s name.\n* roleName - The template roleName associated with the recipient.\n* clientUserId - Optional, this sets if the signer is This specifies if the recipient is embedded or remote. If the clientUserId is not null then the recipient is embedded. Note that if a ClientUserId is used and the account settings SignerMustHaveAccount or SignerMustLoginToSign are true, an error is generated on sending.\n* defaultRecipient - Optional, When set to **true**, this recipient is the default recipient and any tabs generated by the transformPdfFields option are mapped to this recipient.\n* routingOrder - This specifies the routing order of the recipient in the envelope.\n* accessCode - This optional element specifies the access code a recipient has to enter to validate the identity. This can be a maximum of 50 characters.\n* inPersonSignerName - Optional, if the template role is an in person signer, this is the full legal name of the signer. This can be a maximum of 100 characters.\n* emailNotification - This is an optional complex element that has a role specific emailSubject, emailBody, and language. It follows the same format as the emailNotification node for Recipients.\n* tabs - This allows the tab values to be specified for matching to tabs in the template.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeDefinition.CompositeTemplates">
            <summary>
            A complex type that can be added to create envelopes from a combination of DocuSign templates and PDF forms. The basic envelope remains the same, while the Composite Template adds new document and template overlays into the envelope. There can be any number of Composite Template structures in the envelope.
            </summary>
            <value>A complex type that can be added to create envelopes from a combination of DocuSign templates and PDF forms. The basic envelope remains the same, while the Composite Template adds new document and template overlays into the envelope. There can be any number of Composite Template structures in the envelope.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeDefinition.Accessibility">
            <summary>
            Sets the document reading zones for screen reader applications.  This element can only be used if Document Accessibility is enabled for the account. \n\n#### Note: This information is currently generated from the DocuSign web console by setting the reading zones when creating a template, exporting the reading zone string information, and adding it here.
            </summary>
            <value>Sets the document reading zones for screen reader applications.  This element can only be used if Document Accessibility is enabled for the account. \n\n#### Note: This information is currently generated from the DocuSign web console by setting the reading zones when creating a template, exporting the reading zone string information, and adding it here.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeDefinition.TransactionId">
            <summary>
            Used to identify an envelope. The id is a sender-generated value and is valid in the DocuSign system for 7 days. It is recommended that a transaction ID is used for offline signing to ensure that an envelope is not sent multiple times. The `transactionId` property can be used determine if an envelope status (i.e. was created or not) for cases where an internet connection was lost before the envelope status could be returned.
            </summary>
            <value>Used to identify an envelope. The id is a sender-generated value and is valid in the DocuSign system for 7 days. It is recommended that a transaction ID is used for offline signing to ensure that an envelope is not sent multiple times. The `transactionId` property can be used determine if an envelope status (i.e. was created or not) for cases where an internet connection was lost before the envelope status could be returned.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeDefinition.Status">
            <summary>
            Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.
            </summary>
            <value>Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeDefinition.DocumentsUri">
            <summary>
            Contains a URI for an endpoint that you can use to retrieve the documents.
            </summary>
            <value>Contains a URI for an endpoint that you can use to retrieve the documents.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeDefinition.RecipientsUri">
            <summary>
            Contains a URI for an endpoint that you can use to retrieve the recipients.
            </summary>
            <value>Contains a URI for an endpoint that you can use to retrieve the recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeDefinition.Asynchronous">
            <summary>
            When set to **true**, the envelope is queued for processing and the value of the `status` property is set to 'Processing'. Additionally, get status calls return 'Processing' until completed.
            </summary>
            <value>When set to **true**, the envelope is queued for processing and the value of the `status` property is set to 'Processing'. Additionally, get status calls return 'Processing' until completed.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeDefinition.EnvelopeUri">
            <summary>
            Contains a URI for an endpoint that you can use to retrieve the envelope or envelopes.
            </summary>
            <value>Contains a URI for an endpoint that you can use to retrieve the envelope or envelopes.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeDefinition.EmailSubject">
            <summary>
            Specifies the subject of the email that is sent to all recipients.\n\nSee [ML:Template Email Subject Merge Fields] for information about adding merge field information to the email subject.
            </summary>
            <value>Specifies the subject of the email that is sent to all recipients.\n\nSee [ML:Template Email Subject Merge Fields] for information about adding merge field information to the email subject.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeDefinition.EmailBlurb">
            <summary>
            Optional element. This is the same as the email body. If specified it is included in email body for all envelope recipients. This can be a maximum of 10000 characters
            </summary>
            <value>Optional element. This is the same as the email body. If specified it is included in email body for all envelope recipients. This can be a maximum of 10000 characters</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeDefinition.EnvelopeId">
            <summary>
            The envelope ID of the envelope status that failed to post.
            </summary>
            <value>The envelope ID of the envelope status that failed to post.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeDefinition.SigningLocation">
            <summary>
            Specifies the physical location where the signing takes place. It can have two enumeration values; InPerson and Online. The default value is Online.
            </summary>
            <value>Specifies the physical location where the signing takes place. It can have two enumeration values; InPerson and Online. The default value is Online.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeDefinition.CustomFieldsUri">
            <summary>
            Contains a URI for an endpoint that you can use to retrieve the custom fields.
            </summary>
            <value>Contains a URI for an endpoint that you can use to retrieve the custom fields.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeDefinition.EnvelopeIdStamping">
            <summary>
            When set to **true**, Envelope ID Stamping is enabled.
            </summary>
            <value>When set to **true**, Envelope ID Stamping is enabled.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeDefinition.AuthoritativeCopy">
            <summary>
            Specifies the Authoritative copy feature. If set to true the Authoritative copy feature is enabled.
            </summary>
            <value>Specifies the Authoritative copy feature. If set to true the Authoritative copy feature is enabled.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeDefinition.Notification">
            <summary>
            Gets or Sets Notification
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeDefinition.NotificationUri">
            <summary>
            Contains a URI for an endpoint that you can use to retrieve the notifications.
            </summary>
            <value>Contains a URI for an endpoint that you can use to retrieve the notifications.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeDefinition.EnforceSignerVisibility">
            <summary>
            When set to **true**, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.\n\nYour account must have Document Visibility enabled to use this.
            </summary>
            <value>When set to **true**, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.\n\nYour account must have Document Visibility enabled to use this.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeDefinition.EnableWetSign">
            <summary>
            When set to **true**, the signer is allowed to print the document and sign it on paper.
            </summary>
            <value>When set to **true**, the signer is allowed to print the document and sign it on paper.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeDefinition.AllowMarkup">
            <summary>
            When set to **true**, Document Markup is enabled for envelope. Account must have Document Markup enabled to use this
            </summary>
            <value>When set to **true**, Document Markup is enabled for envelope. Account must have Document Markup enabled to use this</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeDefinition.AllowReassign">
            <summary>
            When set to **true**, the recipient can redirect an envelope to a more appropriate recipient.
            </summary>
            <value>When set to **true**, the recipient can redirect an envelope to a more appropriate recipient.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeDefinition.CreatedDateTime">
            <summary>
            Indicates the date and time the item was created.
            </summary>
            <value>Indicates the date and time the item was created.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeDefinition.LastModifiedDateTime">
            <summary>
            The date and time the item was last modified.
            </summary>
            <value>The date and time the item was last modified.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeDefinition.DeliveredDateTime">
            <summary>
            Reserved: For DocuSign use only.
            </summary>
            <value>Reserved: For DocuSign use only.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeDefinition.SentDateTime">
            <summary>
            The date and time the envelope was sent.
            </summary>
            <value>The date and time the envelope was sent.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeDefinition.CompletedDateTime">
            <summary>
            Specifies the date and time this item was completed.
            </summary>
            <value>Specifies the date and time this item was completed.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeDefinition.VoidedDateTime">
            <summary>
            The date and time the envelope or template was voided.
            </summary>
            <value>The date and time the envelope or template was voided.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeDefinition.VoidedReason">
            <summary>
            The reason the envelope or template was voided.
            </summary>
            <value>The reason the envelope or template was voided.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeDefinition.DeletedDateTime">
            <summary>
            Specifies the data and time the item was deleted.
            </summary>
            <value>Specifies the data and time the item was deleted.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeDefinition.DeclinedDateTime">
            <summary>
            The date and time the recipient declined the document.
            </summary>
            <value>The date and time the recipient declined the document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeDefinition.StatusChangedDateTime">
            <summary>
            The data and time the status changed.
            </summary>
            <value>The data and time the status changed.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeDefinition.DocumentsCombinedUri">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeDefinition.CertificateUri">
            <summary>
            Retrieves a URI for an endpoint that allows you to easily retrieve certificate information.
            </summary>
            <value>Retrieves a URI for an endpoint that allows you to easily retrieve certificate information.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeDefinition.TemplatesUri">
            <summary>
            Contains a URI for an endpoint which you can use to retrieve the templates.
            </summary>
            <value>Contains a URI for an endpoint which you can use to retrieve the templates.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeDefinition.MessageLock">
            <summary>
            When set to **true**, prevents senders from changing the contents of `emailBlurb` and `emailSubject` properties for the envelope. \n\nAdditionally, this prevents users from making changes to the contents of `emailBlurb` and `emailSubject` properties when correcting envelopes. \n\nHowever, if the `messageLock` node is set to true**** and the `emailSubject` property is empty, senders and correctors are able to add a subject to the envelope.
            </summary>
            <value>When set to **true**, prevents senders from changing the contents of `emailBlurb` and `emailSubject` properties for the envelope. \n\nAdditionally, this prevents users from making changes to the contents of `emailBlurb` and `emailSubject` properties when correcting envelopes. \n\nHowever, if the `messageLock` node is set to true**** and the `emailSubject` property is empty, senders and correctors are able to add a subject to the envelope.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeDefinition.RecipientsLock">
            <summary>
            When set to **true**, prevents senders from changing, correcting, or deleting the recipient information for the envelope.
            </summary>
            <value>When set to **true**, prevents senders from changing, correcting, or deleting the recipient information for the envelope.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeDefinition.UseDisclosure">
            <summary>
            When set to **true**, the disclosure is shown to recipients in accordance with the account’s Electronic Record and Signature Disclosure frequency setting. When set to **false**, the Electronic Record and Signature Disclosure is not shown to any envelope recipients. \n\nIf the `useDisclosure` property is not set, then the account's normal disclosure setting is used and the value of the `useDisclosure` property is not returned in responses when getting envelope information.
            </summary>
            <value>When set to **true**, the disclosure is shown to recipients in accordance with the account’s Electronic Record and Signature Disclosure frequency setting. When set to **false**, the Electronic Record and Signature Disclosure is not shown to any envelope recipients. \n\nIf the `useDisclosure` property is not set, then the account's normal disclosure setting is used and the value of the `useDisclosure` property is not returned in responses when getting envelope information.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeDefinition.EmailSettings">
            <summary>
            Gets or Sets EmailSettings
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeDefinition.PurgeState">
            <summary>
            Initiates a purge request. Valid values are:\n* documents_queued: Places envelope documents in the purge queue.\n* documents_and_metadata_queued: Places envelope documents and metadata in the purge queue.
            </summary>
            <value>Initiates a purge request. Valid values are:\n* documents_queued: Places envelope documents in the purge queue.\n* documents_and_metadata_queued: Places envelope documents and metadata in the purge queue.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeDefinition.LockInformation">
            <summary>
            Gets or Sets LockInformation
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeDefinition.Is21CFRPart11">
            <summary>
            When set to **true**, indicates that this module is enabled on the account.
            </summary>
            <value>When set to **true**, indicates that this module is enabled on the account.</value>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeDefinition.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeDefinition.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeDefinition.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeDefinition.Equals(DocuSign.eSign.Model.EnvelopeDefinition)">
            <summary>
            Returns true if EnvelopeDefinition instances are equal
            </summary>
            <param name="other">Instance of EnvelopeDefinition to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeDefinition.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.EnvelopeDocument">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeDocument.DocumentId">
            <summary>
            Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
            </summary>
            <value>Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeDocument.Name">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeDocument.Type">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeDocument.Uri">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeDocument.Order">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeDocument.Pages">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeDocument.ContainsPdfFormFields">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeDocument.ErrorDetails">
            <summary>
            Gets or Sets ErrorDetails
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeDocument.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeDocument.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeDocument.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeDocument.Equals(DocuSign.eSign.Model.EnvelopeDocument)">
            <summary>
            Returns true if EnvelopeDocument instances are equal
            </summary>
            <param name="other">Instance of EnvelopeDocument to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeDocument.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.EnvelopeDocumentsResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeDocumentsResult.EnvelopeId">
            <summary>
            The envelope ID of the envelope status that failed to post.
            </summary>
            <value>The envelope ID of the envelope status that failed to post.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeDocumentsResult.EnvelopeDocuments">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeDocumentsResult.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeDocumentsResult.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeDocumentsResult.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeDocumentsResult.Equals(DocuSign.eSign.Model.EnvelopeDocumentsResult)">
            <summary>
            Returns true if EnvelopeDocumentsResult instances are equal
            </summary>
            <param name="other">Instance of EnvelopeDocumentsResult to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeDocumentsResult.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.EnvelopeEvent">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeEvent.EnvelopeEventStatusCode">
            <summary>
            he envelope status, this can be Sent, Delivered, Completed, Declined, or Voided.
            </summary>
            <value>he envelope status, this can be Sent, Delivered, Completed, Declined, or Voided.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeEvent.IncludeDocuments">
            <summary>
            When set to **true**, the envelope time zone information is included in the message.
            </summary>
            <value>When set to **true**, the envelope time zone information is included in the message.</value>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeEvent.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeEvent.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeEvent.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeEvent.Equals(DocuSign.eSign.Model.EnvelopeEvent)">
            <summary>
            Returns true if EnvelopeEvent instances are equal
            </summary>
            <param name="other">Instance of EnvelopeEvent to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeEvent.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.EnvelopeId">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeId.Name">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeId.TabLabel">
            <summary>
            The label string associated with the tab.
            </summary>
            <value>The label string associated with the tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeId.Font">
            <summary>
            The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.
            </summary>
            <value>The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeId.Bold">
            <summary>
            When set to **true**, the information in the tab is bold.
            </summary>
            <value>When set to **true**, the information in the tab is bold.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeId.Italic">
            <summary>
            When set to **true**, the information in the tab is italic.
            </summary>
            <value>When set to **true**, the information in the tab is italic.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeId.Underline">
            <summary>
            When set to **true**, the information in the tab is underlined.
            </summary>
            <value>When set to **true**, the information in the tab is underlined.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeId.FontColor">
            <summary>
            The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.
            </summary>
            <value>The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeId.FontSize">
            <summary>
            The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.
            </summary>
            <value>The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeId.DocumentId">
            <summary>
            Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
            </summary>
            <value>Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeId.RecipientId">
            <summary>
            Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
            </summary>
            <value>Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeId.PageNumber">
            <summary>
            Specifies the page number on which the tab is located.
            </summary>
            <value>Specifies the page number on which the tab is located.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeId.XPosition">
            <summary>
            This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.
            </summary>
            <value>This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeId.YPosition">
            <summary>
            This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.
            </summary>
            <value>This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeId.AnchorString">
            <summary>
            Anchor text information for a radio button.
            </summary>
            <value>Anchor text information for a radio button.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeId.AnchorXOffset">
            <summary>
            Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.
            </summary>
            <value>Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeId.AnchorYOffset">
            <summary>
            Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.
            </summary>
            <value>Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeId.AnchorUnits">
            <summary>
            Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.
            </summary>
            <value>Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeId.AnchorIgnoreIfNotPresent">
            <summary>
            When set to **true**, this tab is ignored if anchorString is not found in the document.
            </summary>
            <value>When set to **true**, this tab is ignored if anchorString is not found in the document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeId.AnchorCaseSensitive">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeId.AnchorMatchWholeWord">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeId.AnchorHorizontalAlignment">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeId.TabId">
            <summary>
            The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].
            </summary>
            <value>The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeId.TemplateLocked">
            <summary>
            When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.
            </summary>
            <value>When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeId.TemplateRequired">
            <summary>
            When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.
            </summary>
            <value>When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeId.ConditionalParentLabel">
            <summary>
            For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.
            </summary>
            <value>For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeId.ConditionalParentValue">
            <summary>
            For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.
            </summary>
            <value>For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeId.CustomTabId">
            <summary>
            The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
            </summary>
            <value>The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeId.MergeField">
            <summary>
            Gets or Sets MergeField
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeId.Status">
            <summary>
            Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.
            </summary>
            <value>Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeId.ErrorDetails">
            <summary>
            Gets or Sets ErrorDetails
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeId.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeId.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeId.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeId.Equals(DocuSign.eSign.Model.EnvelopeId)">
            <summary>
            Returns true if EnvelopeId instances are equal
            </summary>
            <param name="other">Instance of EnvelopeId to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeId.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.EnvelopeIdsRequest">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeIdsRequest.EnvelopeIds">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeIdsRequest.TransactionIds">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeIdsRequest.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeIdsRequest.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeIdsRequest.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeIdsRequest.Equals(DocuSign.eSign.Model.EnvelopeIdsRequest)">
            <summary>
            Returns true if EnvelopeIdsRequest instances are equal
            </summary>
            <param name="other">Instance of EnvelopeIdsRequest to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeIdsRequest.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.EnvelopesInformation">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopesInformation.ResultSetSize">
            <summary>
            The number of results returned in this response.
            </summary>
            <value>The number of results returned in this response.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopesInformation.TotalSetSize">
            <summary>
            The total number of items available in the result set. This will always be greater than or equal to the value of the `resultSetSize` property.
            </summary>
            <value>The total number of items available in the result set. This will always be greater than or equal to the value of the `resultSetSize` property.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopesInformation.StartPosition">
            <summary>
            Starting position of the current result set.
            </summary>
            <value>Starting position of the current result set.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopesInformation.EndPosition">
            <summary>
            The last position in the result set.
            </summary>
            <value>The last position in the result set.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopesInformation.NextUri">
            <summary>
            The URI to the next chunk of records based on the search request. If the endPosition is the entire results of the search, this is null.
            </summary>
            <value>The URI to the next chunk of records based on the search request. If the endPosition is the entire results of the search, this is null.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopesInformation.PreviousUri">
            <summary>
            The postal code for the billing address.
            </summary>
            <value>The postal code for the billing address.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopesInformation.Envelopes">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopesInformation.EnvelopeTransactionStatuses">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopesInformation.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopesInformation.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopesInformation.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopesInformation.Equals(DocuSign.eSign.Model.EnvelopesInformation)">
            <summary>
            Returns true if EnvelopesInformation instances are equal
            </summary>
            <param name="other">Instance of EnvelopesInformation to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopesInformation.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.EnvelopeSummary">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeSummary.EnvelopeId">
            <summary>
            The envelope ID of the envelope status that failed to post.
            </summary>
            <value>The envelope ID of the envelope status that failed to post.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeSummary.Uri">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeSummary.StatusDateTime">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeSummary.Status">
            <summary>
            Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.
            </summary>
            <value>Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.</value>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeSummary.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeSummary.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeSummary.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeSummary.Equals(DocuSign.eSign.Model.EnvelopeSummary)">
            <summary>
            Returns true if EnvelopeSummary instances are equal
            </summary>
            <param name="other">Instance of EnvelopeSummary to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeSummary.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.EnvelopeTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplate.EnvelopeTemplateDefinition">
            <summary>
            Gets or Sets EnvelopeTemplateDefinition
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplate.Documents">
            <summary>
            Complex element contains the details on the documents in the envelope.
            </summary>
            <value>Complex element contains the details on the documents in the envelope.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplate.Recipients">
            <summary>
            Gets or Sets Recipients
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplate.CustomFields">
            <summary>
            Gets or Sets CustomFields
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplate.TransactionId">
            <summary>
            Used to identify an envelope. The id is a sender-generated value and is valid in the DocuSign system for 7 days. It is recommended that a transaction ID is used for offline signing to ensure that an envelope is not sent multiple times. The `transactionId` property can be used determine if an envelope status (i.e. was created or not) for cases where an internet connection was lost before the envelope status could be returned.
            </summary>
            <value>Used to identify an envelope. The id is a sender-generated value and is valid in the DocuSign system for 7 days. It is recommended that a transaction ID is used for offline signing to ensure that an envelope is not sent multiple times. The `transactionId` property can be used determine if an envelope status (i.e. was created or not) for cases where an internet connection was lost before the envelope status could be returned.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplate.Status">
            <summary>
            Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.
            </summary>
            <value>Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplate.DocumentsUri">
            <summary>
            Contains a URI for an endpoint that you can use to retrieve the documents.
            </summary>
            <value>Contains a URI for an endpoint that you can use to retrieve the documents.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplate.RecipientsUri">
            <summary>
            Contains a URI for an endpoint that you can use to retrieve the recipients.
            </summary>
            <value>Contains a URI for an endpoint that you can use to retrieve the recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplate.Asynchronous">
            <summary>
            When set to **true**, the envelope is queued for processing and the value of the `status` property is set to 'Processing'. Additionally, get status calls return 'Processing' until completed.
            </summary>
            <value>When set to **true**, the envelope is queued for processing and the value of the `status` property is set to 'Processing'. Additionally, get status calls return 'Processing' until completed.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplate.EnvelopeUri">
            <summary>
            Contains a URI for an endpoint that you can use to retrieve the envelope or envelopes.
            </summary>
            <value>Contains a URI for an endpoint that you can use to retrieve the envelope or envelopes.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplate.EmailSubject">
            <summary>
            Specifies the subject of the email that is sent to all recipients.\n\nSee [ML:Template Email Subject Merge Fields] for information about adding merge field information to the email subject.
            </summary>
            <value>Specifies the subject of the email that is sent to all recipients.\n\nSee [ML:Template Email Subject Merge Fields] for information about adding merge field information to the email subject.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplate.EmailBlurb">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplate.EnvelopeId">
            <summary>
            The envelope ID of the envelope status that failed to post.
            </summary>
            <value>The envelope ID of the envelope status that failed to post.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplate.SigningLocation">
            <summary>
            Specifies the physical location where the signing takes place. It can have two enumeration values; InPerson and Online. The default value is Online.
            </summary>
            <value>Specifies the physical location where the signing takes place. It can have two enumeration values; InPerson and Online. The default value is Online.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplate.CustomFieldsUri">
            <summary>
            Contains a URI for an endpoint that you can use to retrieve the custom fields.
            </summary>
            <value>Contains a URI for an endpoint that you can use to retrieve the custom fields.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplate.EnvelopeIdStamping">
            <summary>
            When set to **true**, Envelope ID Stamping is enabled.
            </summary>
            <value>When set to **true**, Envelope ID Stamping is enabled.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplate.AuthoritativeCopy">
            <summary>
            Specifies the Authoritative copy feature. If set to true the Authoritative copy feature is enabled.
            </summary>
            <value>Specifies the Authoritative copy feature. If set to true the Authoritative copy feature is enabled.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplate.Notification">
            <summary>
            Gets or Sets Notification
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplate.NotificationUri">
            <summary>
            Contains a URI for an endpoint that you can use to retrieve the notifications.
            </summary>
            <value>Contains a URI for an endpoint that you can use to retrieve the notifications.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplate.EnforceSignerVisibility">
            <summary>
            When set to **true**, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.\n\nYour account must have Document Visibility enabled to use this.
            </summary>
            <value>When set to **true**, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.\n\nYour account must have Document Visibility enabled to use this.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplate.EnableWetSign">
            <summary>
            When set to **true**, the signer is allowed to print the document and sign it on paper.
            </summary>
            <value>When set to **true**, the signer is allowed to print the document and sign it on paper.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplate.AllowMarkup">
            <summary>
            When set to **true**, Document Markup is enabled for envelope. Account must have Document Markup enabled to use this
            </summary>
            <value>When set to **true**, Document Markup is enabled for envelope. Account must have Document Markup enabled to use this</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplate.AllowReassign">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplate.CreatedDateTime">
            <summary>
            Indicates the date and time the item was created.
            </summary>
            <value>Indicates the date and time the item was created.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplate.LastModifiedDateTime">
            <summary>
            The date and time the item was last modified.
            </summary>
            <value>The date and time the item was last modified.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplate.DeliveredDateTime">
            <summary>
            Reserved: For DocuSign use only.
            </summary>
            <value>Reserved: For DocuSign use only.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplate.SentDateTime">
            <summary>
            The date and time the envelope was sent.
            </summary>
            <value>The date and time the envelope was sent.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplate.CompletedDateTime">
            <summary>
            Specifies the date and time this item was completed.
            </summary>
            <value>Specifies the date and time this item was completed.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplate.VoidedDateTime">
            <summary>
            The date and time the envelope or template was voided.
            </summary>
            <value>The date and time the envelope or template was voided.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplate.VoidedReason">
            <summary>
            The reason the envelope or template was voided.
            </summary>
            <value>The reason the envelope or template was voided.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplate.DeletedDateTime">
            <summary>
            Specifies the data and time the item was deleted.
            </summary>
            <value>Specifies the data and time the item was deleted.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplate.DeclinedDateTime">
            <summary>
            The date and time the recipient declined the document.
            </summary>
            <value>The date and time the recipient declined the document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplate.StatusChangedDateTime">
            <summary>
            The data and time the status changed.
            </summary>
            <value>The data and time the status changed.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplate.DocumentsCombinedUri">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplate.CertificateUri">
            <summary>
            Retrieves a URI for an endpoint that allows you to easily retrieve certificate information.
            </summary>
            <value>Retrieves a URI for an endpoint that allows you to easily retrieve certificate information.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplate.TemplatesUri">
            <summary>
            Contains a URI for an endpoint which you can use to retrieve the templates.
            </summary>
            <value>Contains a URI for an endpoint which you can use to retrieve the templates.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplate.MessageLock">
            <summary>
            When set to **true**, prevents senders from changing the contents of `emailBlurb` and `emailSubject` properties for the envelope. \n\nAdditionally, this prevents users from making changes to the contents of `emailBlurb` and `emailSubject` properties when correcting envelopes. \n\nHowever, if the `messageLock` node is set to true**** and the `emailSubject` property is empty, senders and correctors are able to add a subject to the envelope.
            </summary>
            <value>When set to **true**, prevents senders from changing the contents of `emailBlurb` and `emailSubject` properties for the envelope. \n\nAdditionally, this prevents users from making changes to the contents of `emailBlurb` and `emailSubject` properties when correcting envelopes. \n\nHowever, if the `messageLock` node is set to true**** and the `emailSubject` property is empty, senders and correctors are able to add a subject to the envelope.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplate.RecipientsLock">
            <summary>
            When set to **true**, prevents senders from changing, correcting, or deleting the recipient information for the envelope.
            </summary>
            <value>When set to **true**, prevents senders from changing, correcting, or deleting the recipient information for the envelope.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplate.UseDisclosure">
            <summary>
            When set to **true**, the disclosure is shown to recipients in accordance with the account’s Electronic Record and Signature Disclosure frequency setting. When set to **false**, the Electronic Record and Signature Disclosure is not shown to any envelope recipients. \n\nIf the `useDisclosure` property is not set, then the account's normal disclosure setting is used and the value of the `useDisclosure` property is not returned in responses when getting envelope information.
            </summary>
            <value>When set to **true**, the disclosure is shown to recipients in accordance with the account’s Electronic Record and Signature Disclosure frequency setting. When set to **false**, the Electronic Record and Signature Disclosure is not shown to any envelope recipients. \n\nIf the `useDisclosure` property is not set, then the account's normal disclosure setting is used and the value of the `useDisclosure` property is not returned in responses when getting envelope information.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplate.EmailSettings">
            <summary>
            Gets or Sets EmailSettings
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplate.PurgeState">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplate.LockInformation">
            <summary>
            Gets or Sets LockInformation
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplate.Is21CFRPart11">
            <summary>
            When set to **true**, indicates that this module is enabled on the account.
            </summary>
            <value>When set to **true**, indicates that this module is enabled on the account.</value>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeTemplate.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeTemplate.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeTemplate.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeTemplate.Equals(DocuSign.eSign.Model.EnvelopeTemplate)">
            <summary>
            Returns true if EnvelopeTemplate instances are equal
            </summary>
            <param name="other">Instance of EnvelopeTemplate to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeTemplate.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.EnvelopeTemplateDefinition">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateDefinition.TemplateId">
            <summary>
            The unique identifier of the template. If this is not provided, DocuSign will generate a value.
            </summary>
            <value>The unique identifier of the template. If this is not provided, DocuSign will generate a value.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateDefinition.Name">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateDefinition.Shared">
            <summary>
            When set to **true**, this custom tab is shared.
            </summary>
            <value>When set to **true**, this custom tab is shared.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateDefinition.Password">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateDefinition.NewPassword">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateDefinition.Description">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateDefinition.LastModified">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateDefinition.LastModifiedBy">
            <summary>
            Gets or Sets LastModifiedBy
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateDefinition.PageCount">
            <summary>
            An integer value specifying the number of document pages in the template. Omit this property if not submitting a page count.
            </summary>
            <value>An integer value specifying the number of document pages in the template. Omit this property if not submitting a page count.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateDefinition.Uri">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateDefinition.FolderName">
            <summary>
            The name of the folder in which the template is located.
            </summary>
            <value>The name of the folder in which the template is located.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateDefinition.FolderId">
            <summary>
            The ID for the folder.
            </summary>
            <value>The ID for the folder.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateDefinition.FolderUri">
            <summary>
            The URI of the folder.
            </summary>
            <value>The URI of the folder.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateDefinition.ParentFolderUri">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateDefinition.Owner">
            <summary>
            Gets or Sets Owner
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeTemplateDefinition.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeTemplateDefinition.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeTemplateDefinition.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeTemplateDefinition.Equals(DocuSign.eSign.Model.EnvelopeTemplateDefinition)">
            <summary>
            Returns true if EnvelopeTemplateDefinition instances are equal
            </summary>
            <param name="other">Instance of EnvelopeTemplateDefinition to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeTemplateDefinition.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.EnvelopeTemplateResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResult.TemplateId">
            <summary>
            The unique identifier of the template. If this is not provided, DocuSign will generate a value.
            </summary>
            <value>The unique identifier of the template. If this is not provided, DocuSign will generate a value.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResult.Name">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResult.Shared">
            <summary>
            When set to **true**, this custom tab is shared.
            </summary>
            <value>When set to **true**, this custom tab is shared.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResult.Password">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResult.Description">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResult.LastModified">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResult.PageCount">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResult.Uri">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResult.FolderName">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResult.FolderId">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResult.FolderUri">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResult.ParentFolderUri">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResult.Owner">
            <summary>
            Gets or Sets Owner
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResult.Documents">
            <summary>
            Complex element contains the details on the documents in the envelope.
            </summary>
            <value>Complex element contains the details on the documents in the envelope.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResult.Recipients">
            <summary>
            Gets or Sets Recipients
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResult.TransactionId">
            <summary>
            Used to identify an envelope. The id is a sender-generated value and is valid in the DocuSign system for 7 days. It is recommended that a transaction ID is used for offline signing to ensure that an envelope is not sent multiple times. The `transactionId` property can be used determine if an envelope status (i.e. was created or not) for cases where an internet connection was lost before the envelope status could be returned.
            </summary>
            <value>Used to identify an envelope. The id is a sender-generated value and is valid in the DocuSign system for 7 days. It is recommended that a transaction ID is used for offline signing to ensure that an envelope is not sent multiple times. The `transactionId` property can be used determine if an envelope status (i.e. was created or not) for cases where an internet connection was lost before the envelope status could be returned.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResult.Status">
            <summary>
            Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.
            </summary>
            <value>Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResult.DocumentsUri">
            <summary>
            Contains a URI for an endpoint that you can use to retrieve the documents.
            </summary>
            <value>Contains a URI for an endpoint that you can use to retrieve the documents.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResult.RecipientsUri">
            <summary>
            Contains a URI for an endpoint that you can use to retrieve the recipients.
            </summary>
            <value>Contains a URI for an endpoint that you can use to retrieve the recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResult.Asynchronous">
            <summary>
            When set to **true**, the envelope is queued for processing and the value of the `status` property is set to 'Processing'. Additionally, get status calls return 'Processing' until completed.
            </summary>
            <value>When set to **true**, the envelope is queued for processing and the value of the `status` property is set to 'Processing'. Additionally, get status calls return 'Processing' until completed.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResult.EnvelopeUri">
            <summary>
            Contains a URI for an endpoint that you can use to retrieve the envelope or envelopes.
            </summary>
            <value>Contains a URI for an endpoint that you can use to retrieve the envelope or envelopes.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResult.EmailSubject">
            <summary>
            Specifies the subject of the email that is sent to all recipients.\n\nSee [ML:Template Email Subject Merge Fields] for information about adding merge field information to the email subject.
            </summary>
            <value>Specifies the subject of the email that is sent to all recipients.\n\nSee [ML:Template Email Subject Merge Fields] for information about adding merge field information to the email subject.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResult.EmailBlurb">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResult.EnvelopeId">
            <summary>
            The envelope ID of the envelope status that failed to post.
            </summary>
            <value>The envelope ID of the envelope status that failed to post.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResult.SigningLocation">
            <summary>
            Specifies the physical location where the signing takes place. It can have two enumeration values; InPerson and Online. The default value is Online.
            </summary>
            <value>Specifies the physical location where the signing takes place. It can have two enumeration values; InPerson and Online. The default value is Online.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResult.CustomFieldsUri">
            <summary>
            Contains a URI for an endpoint that you can use to retrieve the custom fields.
            </summary>
            <value>Contains a URI for an endpoint that you can use to retrieve the custom fields.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResult.EnvelopeIdStamping">
            <summary>
            When set to **true**, Envelope ID Stamping is enabled.
            </summary>
            <value>When set to **true**, Envelope ID Stamping is enabled.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResult.AuthoritativeCopy">
            <summary>
            Specifies the Authoritative copy feature. If set to true the Authoritative copy feature is enabled.
            </summary>
            <value>Specifies the Authoritative copy feature. If set to true the Authoritative copy feature is enabled.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResult.Notification">
            <summary>
            Gets or Sets Notification
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResult.NotificationUri">
            <summary>
            Contains a URI for an endpoint that you can use to retrieve the notifications.
            </summary>
            <value>Contains a URI for an endpoint that you can use to retrieve the notifications.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResult.EnforceSignerVisibility">
            <summary>
            When set to **true**, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.\n\nYour account must have Document Visibility enabled to use this.
            </summary>
            <value>When set to **true**, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.\n\nYour account must have Document Visibility enabled to use this.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResult.EnableWetSign">
            <summary>
            When set to **true**, the signer is allowed to print the document and sign it on paper.
            </summary>
            <value>When set to **true**, the signer is allowed to print the document and sign it on paper.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResult.AllowMarkup">
            <summary>
            When set to **true**, Document Markup is enabled for envelope. Account must have Document Markup enabled to use this
            </summary>
            <value>When set to **true**, Document Markup is enabled for envelope. Account must have Document Markup enabled to use this</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResult.AllowReassign">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResult.CreatedDateTime">
            <summary>
            Indicates the date and time the item was created.
            </summary>
            <value>Indicates the date and time the item was created.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResult.LastModifiedDateTime">
            <summary>
            The date and time the item was last modified.
            </summary>
            <value>The date and time the item was last modified.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResult.DeliveredDateTime">
            <summary>
            Reserved: For DocuSign use only.
            </summary>
            <value>Reserved: For DocuSign use only.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResult.SentDateTime">
            <summary>
            The date and time the envelope was sent.
            </summary>
            <value>The date and time the envelope was sent.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResult.CompletedDateTime">
            <summary>
            Specifies the date and time this item was completed.
            </summary>
            <value>Specifies the date and time this item was completed.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResult.VoidedDateTime">
            <summary>
            The date and time the envelope or template was voided.
            </summary>
            <value>The date and time the envelope or template was voided.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResult.VoidedReason">
            <summary>
            The reason the envelope or template was voided.
            </summary>
            <value>The reason the envelope or template was voided.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResult.DeletedDateTime">
            <summary>
            Specifies the data and time the item was deleted.
            </summary>
            <value>Specifies the data and time the item was deleted.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResult.DeclinedDateTime">
            <summary>
            The date and time the recipient declined the document.
            </summary>
            <value>The date and time the recipient declined the document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResult.StatusChangedDateTime">
            <summary>
            The data and time the status changed.
            </summary>
            <value>The data and time the status changed.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResult.DocumentsCombinedUri">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResult.CertificateUri">
            <summary>
            Retrieves a URI for an endpoint that allows you to easily retrieve certificate information.
            </summary>
            <value>Retrieves a URI for an endpoint that allows you to easily retrieve certificate information.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResult.TemplatesUri">
            <summary>
            Contains a URI for an endpoint which you can use to retrieve the templates.
            </summary>
            <value>Contains a URI for an endpoint which you can use to retrieve the templates.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResult.MessageLock">
            <summary>
            When set to **true**, prevents senders from changing the contents of `emailBlurb` and `emailSubject` properties for the envelope. \n\nAdditionally, this prevents users from making changes to the contents of `emailBlurb` and `emailSubject` properties when correcting envelopes. \n\nHowever, if the `messageLock` node is set to true**** and the `emailSubject` property is empty, senders and correctors are able to add a subject to the envelope.
            </summary>
            <value>When set to **true**, prevents senders from changing the contents of `emailBlurb` and `emailSubject` properties for the envelope. \n\nAdditionally, this prevents users from making changes to the contents of `emailBlurb` and `emailSubject` properties when correcting envelopes. \n\nHowever, if the `messageLock` node is set to true**** and the `emailSubject` property is empty, senders and correctors are able to add a subject to the envelope.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResult.RecipientsLock">
            <summary>
            When set to **true**, prevents senders from changing, correcting, or deleting the recipient information for the envelope.
            </summary>
            <value>When set to **true**, prevents senders from changing, correcting, or deleting the recipient information for the envelope.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResult.UseDisclosure">
            <summary>
            When set to **true**, the disclosure is shown to recipients in accordance with the account’s Electronic Record and Signature Disclosure frequency setting. When set to **false**, the Electronic Record and Signature Disclosure is not shown to any envelope recipients. \n\nIf the `useDisclosure` property is not set, then the account's normal disclosure setting is used and the value of the `useDisclosure` property is not returned in responses when getting envelope information.
            </summary>
            <value>When set to **true**, the disclosure is shown to recipients in accordance with the account’s Electronic Record and Signature Disclosure frequency setting. When set to **false**, the Electronic Record and Signature Disclosure is not shown to any envelope recipients. \n\nIf the `useDisclosure` property is not set, then the account's normal disclosure setting is used and the value of the `useDisclosure` property is not returned in responses when getting envelope information.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResult.EmailSettings">
            <summary>
            Gets or Sets EmailSettings
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResult.PurgeState">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResult.LockInformation">
            <summary>
            Gets or Sets LockInformation
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResult.Is21CFRPart11">
            <summary>
            When set to **true**, indicates that this module is enabled on the account.
            </summary>
            <value>When set to **true**, indicates that this module is enabled on the account.</value>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeTemplateResult.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeTemplateResult.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeTemplateResult.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeTemplateResult.Equals(DocuSign.eSign.Model.EnvelopeTemplateResult)">
            <summary>
            Returns true if EnvelopeTemplateResult instances are equal
            </summary>
            <param name="other">Instance of EnvelopeTemplateResult to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeTemplateResult.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.EnvelopeTemplateResults">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResults.EnvelopeTemplates">
            <summary>
            The list of requested templates.
            </summary>
            <value>The list of requested templates.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResults.ResultSetSize">
            <summary>
            The number of results returned in this response.
            </summary>
            <value>The number of results returned in this response.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResults.StartPosition">
            <summary>
            Starting position of the current result set.
            </summary>
            <value>Starting position of the current result set.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResults.EndPosition">
            <summary>
            The last position in the result set.
            </summary>
            <value>The last position in the result set.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResults.TotalSetSize">
            <summary>
            The total number of items available in the result set. This will always be greater than or equal to the value of the `resultSetSize` property.
            </summary>
            <value>The total number of items available in the result set. This will always be greater than or equal to the value of the `resultSetSize` property.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResults.NextUri">
            <summary>
            The URI to the next chunk of records based on the search request. If the endPosition is the entire results of the search, this is null.
            </summary>
            <value>The URI to the next chunk of records based on the search request. If the endPosition is the entire results of the search, this is null.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResults.PreviousUri">
            <summary>
            The postal code for the billing address.
            </summary>
            <value>The postal code for the billing address.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTemplateResults.Folders">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeTemplateResults.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeTemplateResults.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeTemplateResults.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeTemplateResults.Equals(DocuSign.eSign.Model.EnvelopeTemplateResults)">
            <summary>
            Returns true if EnvelopeTemplateResults instances are equal
            </summary>
            <param name="other">Instance of EnvelopeTemplateResults to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeTemplateResults.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.EnvelopeTransactionStatus">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTransactionStatus.TransactionId">
            <summary>
            Used to identify an envelope. The id is a sender-generated value and is valid in the DocuSign system for 7 days. It is recommended that a transaction ID is used for offline signing to ensure that an envelope is not sent multiple times. The `transactionId` property can be used determine if an envelope status (i.e. was created or not) for cases where an internet connection was lost before the envelope status could be returned.
            </summary>
            <value>Used to identify an envelope. The id is a sender-generated value and is valid in the DocuSign system for 7 days. It is recommended that a transaction ID is used for offline signing to ensure that an envelope is not sent multiple times. The `transactionId` property can be used determine if an envelope status (i.e. was created or not) for cases where an internet connection was lost before the envelope status could be returned.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTransactionStatus.EnvelopeId">
            <summary>
            The envelope ID of the envelope status that failed to post.
            </summary>
            <value>The envelope ID of the envelope status that failed to post.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTransactionStatus.Status">
            <summary>
            Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.
            </summary>
            <value>Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeTransactionStatus.ErrorDetails">
            <summary>
            Gets or Sets ErrorDetails
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeTransactionStatus.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeTransactionStatus.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeTransactionStatus.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeTransactionStatus.Equals(DocuSign.eSign.Model.EnvelopeTransactionStatus)">
            <summary>
            Returns true if EnvelopeTransactionStatus instances are equal
            </summary>
            <param name="other">Instance of EnvelopeTransactionStatus to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeTransactionStatus.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.EnvelopeUpdateSummary">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeUpdateSummary.EnvelopeId">
            <summary>
            The envelope ID of the envelope status that failed to post.
            </summary>
            <value>The envelope ID of the envelope status that failed to post.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeUpdateSummary.BulkEnvelopeStatus">
            <summary>
            Gets or Sets BulkEnvelopeStatus
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeUpdateSummary.LockInformation">
            <summary>
            Gets or Sets LockInformation
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.EnvelopeUpdateSummary.ErrorDetails">
            <summary>
            Gets or Sets ErrorDetails
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeUpdateSummary.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeUpdateSummary.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeUpdateSummary.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeUpdateSummary.Equals(DocuSign.eSign.Model.EnvelopeUpdateSummary)">
            <summary>
            Returns true if EnvelopeUpdateSummary instances are equal
            </summary>
            <param name="other">Instance of EnvelopeUpdateSummary to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EnvelopeUpdateSummary.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.ErrorDetails">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.ErrorDetails.ErrorCode">
            <summary>
            An error code associated with the error.
            </summary>
            <value>An error code associated with the error.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.ErrorDetails.Message">
            <summary>
            A short error message.
            </summary>
            <value>A short error message.</value>
        </member>
        <member name="M:DocuSign.eSign.Model.ErrorDetails.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.ErrorDetails.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.ErrorDetails.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.ErrorDetails.Equals(DocuSign.eSign.Model.ErrorDetails)">
            <summary>
            Returns true if ErrorDetails instances are equal
            </summary>
            <param name="other">Instance of ErrorDetails to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.ErrorDetails.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.EventNotification">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.EventNotification.Url">
            <summary>
            The endpoint where envelope updates are sent. This will accept XML unless �useSoapInterface� is set to true.
            </summary>
            <value>The endpoint where envelope updates are sent. This will accept XML unless �useSoapInterface� is set to true.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EventNotification.LoggingEnabled">
            <summary>
            When set to **true**, logging is turned on for envelope events on the Web Console Connect page.
            </summary>
            <value>When set to **true**, logging is turned on for envelope events on the Web Console Connect page.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EventNotification.RequireAcknowledgment">
            <summary>
            When set to **true**, the DocuSign Connect service checks that the message was received and retries on failures.
            </summary>
            <value>When set to **true**, the DocuSign Connect service checks that the message was received and retries on failures.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EventNotification.EnvelopeEvents">
            <summary>
            The list of envelope-level events statuses that will trigger Connect to send updates to the url.
            </summary>
            <value>The list of envelope-level events statuses that will trigger Connect to send updates to the url.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EventNotification.RecipientEvents">
            <summary>
            The list of recipient event statuses that will trigger Connect to send updates to the url.
            </summary>
            <value>The list of recipient event statuses that will trigger Connect to send updates to the url.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EventNotification.UseSoapInterface">
            <summary>
            When set to **true**, this tells the Connect service that the user�s endpoint has implemented a SOAP interface.
            </summary>
            <value>When set to **true**, this tells the Connect service that the user�s endpoint has implemented a SOAP interface.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EventNotification.SoapNameSpace">
            <summary>
            This lists the namespace in the SOAP listener provided.
            </summary>
            <value>This lists the namespace in the SOAP listener provided.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EventNotification.IncludeCertificateWithSoap">
            <summary>
            When set to **true**, this tells the Connect service to send the DocuSign signedby certificate as part of the outgoing SOAP xml. This appears in the XML as wsse:BinarySecurityToken.
            </summary>
            <value>When set to **true**, this tells the Connect service to send the DocuSign signedby certificate as part of the outgoing SOAP xml. This appears in the XML as wsse:BinarySecurityToken.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EventNotification.SignMessageWithX509Cert">
            <summary>
            When set to **true**, messages are signed with an X509 certificate. This provides support for 2-way SSL in the envelope.
            </summary>
            <value>When set to **true**, messages are signed with an X509 certificate. This provides support for 2-way SSL in the envelope.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EventNotification.IncludeDocuments">
            <summary>
            When set to **true**, the PDF documents are included in the message along with the updated XML.
            </summary>
            <value>When set to **true**, the PDF documents are included in the message along with the updated XML.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EventNotification.IncludeEnvelopeVoidReason">
            <summary>
            When set to **true**, this tells the Connect Service to include the void reason, as entered by the person that voided the envelope, in the message.
            </summary>
            <value>When set to **true**, this tells the Connect Service to include the void reason, as entered by the person that voided the envelope, in the message.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EventNotification.IncludeTimeZone">
            <summary>
            When set to **true**, the envelope time zone information is included in the message.
            </summary>
            <value>When set to **true**, the envelope time zone information is included in the message.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EventNotification.IncludeSenderAccountAsCustomField">
            <summary>
            When set to **true**, the sender account ID is included as a envelope custom field in the data.
            </summary>
            <value>When set to **true**, the sender account ID is included as a envelope custom field in the data.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EventNotification.IncludeDocumentFields">
            <summary>
            When set to **true**, the Document Fields associated with envelope documents are included in the data. Document Fields are optional custom name-value pairs added to documents using the API
            </summary>
            <value>When set to **true**, the Document Fields associated with envelope documents are included in the data. Document Fields are optional custom name-value pairs added to documents using the API</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EventNotification.IncludeCertificateOfCompletion">
            <summary>
            When set to **true**, the Connect Service includes the Certificate of Completion with completed envelopes.
            </summary>
            <value>When set to **true**, the Connect Service includes the Certificate of Completion with completed envelopes.</value>
        </member>
        <member name="M:DocuSign.eSign.Model.EventNotification.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EventNotification.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EventNotification.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EventNotification.Equals(DocuSign.eSign.Model.EventNotification)">
            <summary>
            Returns true if EventNotification instances are equal
            </summary>
            <param name="other">Instance of EventNotification to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EventNotification.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.EventResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.EventResult.Status">
            <summary>
            Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.
            </summary>
            <value>Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.EventResult.EventTimestamp">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.EventResult.FailureDescription">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.EventResult.VendorFailureStatusCode">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="M:DocuSign.eSign.Model.EventResult.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EventResult.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EventResult.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EventResult.Equals(DocuSign.eSign.Model.EventResult)">
            <summary>
            Returns true if EventResult instances are equal
            </summary>
            <param name="other">Instance of EventResult to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.EventResult.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.Expirations">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Expirations.ExpireEnabled">
            <summary>
            When set to **true**, the envelope expires (is no longer available for signing) in the set number of days. If false, the account default setting is used. If the account does not have an expiration setting, the DocuSign default value of 120 days is used.
            </summary>
            <value>When set to **true**, the envelope expires (is no longer available for signing) in the set number of days. If false, the account default setting is used. If the account does not have an expiration setting, the DocuSign default value of 120 days is used.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Expirations.ExpireAfter">
            <summary>
            An integer that sets the number of days the envelope is active.
            </summary>
            <value>An integer that sets the number of days the envelope is active.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Expirations.ExpireWarn">
            <summary>
            An integer that sets the number of days before envelope expiration that an expiration warning email is sent to the recipient. If set to 0 (zero), no warning email is sent.
            </summary>
            <value>An integer that sets the number of days before envelope expiration that an expiration warning email is sent to the recipient. If set to 0 (zero), no warning email is sent.</value>
        </member>
        <member name="M:DocuSign.eSign.Model.Expirations.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Expirations.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Expirations.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Expirations.Equals(DocuSign.eSign.Model.Expirations)">
            <summary>
            Returns true if Expirations instances are equal
            </summary>
            <param name="other">Instance of Expirations to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Expirations.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.FileType">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.FileType.FileExtension">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.FileType.MimeType">
            <summary>
            The mime-type of a file type listed in a fileTypes collection.
            </summary>
            <value>The mime-type of a file type listed in a fileTypes collection.</value>
        </member>
        <member name="M:DocuSign.eSign.Model.FileType.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.FileType.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.FileType.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.FileType.Equals(DocuSign.eSign.Model.FileType)">
            <summary>
            Returns true if FileType instances are equal
            </summary>
            <param name="other">Instance of FileType to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.FileType.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.FileTypeList">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.FileTypeList.FileTypes">
            <summary>
            A collection of file types.
            </summary>
            <value>A collection of file types.</value>
        </member>
        <member name="M:DocuSign.eSign.Model.FileTypeList.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.FileTypeList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.FileTypeList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.FileTypeList.Equals(DocuSign.eSign.Model.FileTypeList)">
            <summary>
            Returns true if FileTypeList instances are equal
            </summary>
            <param name="other">Instance of FileTypeList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.FileTypeList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.Filter">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Filter.ActionRequired">
            <summary>
            Access token information.
            </summary>
            <value>Access token information.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Filter.Expires">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Filter.IsTemplate">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Filter.Status">
            <summary>
            Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.
            </summary>
            <value>Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Filter.FromDateTime">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Filter.ToDateTime">
            <summary>
            Must be set to \"bearer\".
            </summary>
            <value>Must be set to \"bearer\".</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Filter.SearchTarget">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Filter.SearchText">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Filter.FolderIds">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Filter.OrderBy">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Filter.Order">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="M:DocuSign.eSign.Model.Filter.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Filter.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Filter.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Filter.Equals(DocuSign.eSign.Model.Filter)">
            <summary>
            Returns true if Filter instances are equal
            </summary>
            <param name="other">Instance of Filter to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Filter.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.FirstName">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.FirstName.Name">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.FirstName.TabLabel">
            <summary>
            The label string associated with the tab.
            </summary>
            <value>The label string associated with the tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FirstName.Font">
            <summary>
            The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.
            </summary>
            <value>The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FirstName.Bold">
            <summary>
            When set to **true**, the information in the tab is bold.
            </summary>
            <value>When set to **true**, the information in the tab is bold.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FirstName.Italic">
            <summary>
            When set to **true**, the information in the tab is italic.
            </summary>
            <value>When set to **true**, the information in the tab is italic.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FirstName.Underline">
            <summary>
            When set to **true**, the information in the tab is underlined.
            </summary>
            <value>When set to **true**, the information in the tab is underlined.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FirstName.FontColor">
            <summary>
            The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.
            </summary>
            <value>The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FirstName.FontSize">
            <summary>
            The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.
            </summary>
            <value>The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FirstName.DocumentId">
            <summary>
            Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
            </summary>
            <value>Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FirstName.RecipientId">
            <summary>
            Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
            </summary>
            <value>Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FirstName.PageNumber">
            <summary>
            Specifies the page number on which the tab is located.
            </summary>
            <value>Specifies the page number on which the tab is located.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FirstName.XPosition">
            <summary>
            This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.
            </summary>
            <value>This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FirstName.YPosition">
            <summary>
            This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.
            </summary>
            <value>This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FirstName.AnchorString">
            <summary>
            Anchor text information for a radio button.
            </summary>
            <value>Anchor text information for a radio button.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FirstName.AnchorXOffset">
            <summary>
            Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.
            </summary>
            <value>Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FirstName.AnchorYOffset">
            <summary>
            Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.
            </summary>
            <value>Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FirstName.AnchorUnits">
            <summary>
            Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.
            </summary>
            <value>Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FirstName.AnchorIgnoreIfNotPresent">
            <summary>
            When set to **true**, this tab is ignored if anchorString is not found in the document.
            </summary>
            <value>When set to **true**, this tab is ignored if anchorString is not found in the document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FirstName.AnchorCaseSensitive">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.FirstName.AnchorMatchWholeWord">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.FirstName.AnchorHorizontalAlignment">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.FirstName.TabId">
            <summary>
            The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].
            </summary>
            <value>The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FirstName.TemplateLocked">
            <summary>
            When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.
            </summary>
            <value>When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FirstName.TemplateRequired">
            <summary>
            When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.
            </summary>
            <value>When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FirstName.ConditionalParentLabel">
            <summary>
            For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.
            </summary>
            <value>For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FirstName.ConditionalParentValue">
            <summary>
            For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.
            </summary>
            <value>For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FirstName.CustomTabId">
            <summary>
            The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
            </summary>
            <value>The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FirstName.MergeField">
            <summary>
            Gets or Sets MergeField
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.FirstName.Status">
            <summary>
            Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.
            </summary>
            <value>Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FirstName.ErrorDetails">
            <summary>
            Gets or Sets ErrorDetails
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Model.FirstName.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.FirstName.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.FirstName.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.FirstName.Equals(DocuSign.eSign.Model.FirstName)">
            <summary>
            Returns true if FirstName instances are equal
            </summary>
            <param name="other">Instance of FirstName to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.FirstName.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.Folder">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Folder.OwnerUserName">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Folder.OwnerEmail">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Folder.OwnerUserId">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Folder.Type">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Folder.Name">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Folder.Uri">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Folder.ParentFolderId">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Folder.ParentFolderUri">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Folder.FolderId">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Folder.ErrorDetails">
            <summary>
            Gets or Sets ErrorDetails
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Folder.Folders">
            <summary>
            A collection of folder objects returned in a response.
            </summary>
            <value>A collection of folder objects returned in a response.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Folder.Filter">
            <summary>
            Gets or Sets Filter
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Model.Folder.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Folder.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Folder.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Folder.Equals(DocuSign.eSign.Model.Folder)">
            <summary>
            Returns true if Folder instances are equal
            </summary>
            <param name="other">Instance of Folder to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Folder.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.FolderItem">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.FolderItem.OwnerName">
            <summary>
            Name of the envelope owner.
            </summary>
            <value>Name of the envelope owner.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FolderItem.EnvelopeId">
            <summary>
            The envelope ID of the envelope status that failed to post.
            </summary>
            <value>The envelope ID of the envelope status that failed to post.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FolderItem.EnvelopeUri">
            <summary>
            Contains a URI for an endpoint that you can use to retrieve the envelope or envelopes.
            </summary>
            <value>Contains a URI for an endpoint that you can use to retrieve the envelope or envelopes.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FolderItem.Status">
            <summary>
            Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.
            </summary>
            <value>Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FolderItem.SenderName">
            <summary>
            Name of the envelope sender.
            </summary>
            <value>Name of the envelope sender.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FolderItem.SenderEmail">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.FolderItem.CreatedDateTime">
            <summary>
            Indicates the date and time the item was created.
            </summary>
            <value>Indicates the date and time the item was created.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FolderItem.SentDateTime">
            <summary>
            The date and time the envelope was sent.
            </summary>
            <value>The date and time the envelope was sent.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FolderItem.CompletedDateTime">
            <summary>
            Specifies the date and time this item was completed.
            </summary>
            <value>Specifies the date and time this item was completed.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FolderItem.Subject">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.FolderItem.TemplateId">
            <summary>
            The unique identifier of the template. If this is not provided, DocuSign will generate a value.
            </summary>
            <value>The unique identifier of the template. If this is not provided, DocuSign will generate a value.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FolderItem.Name">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.FolderItem.Shared">
            <summary>
            When set to **true**, this custom tab is shared.
            </summary>
            <value>When set to **true**, this custom tab is shared.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FolderItem.Password">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.FolderItem.Description">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.FolderItem.LastModified">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.FolderItem.PageCount">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.FolderItem.Uri">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.FolderItem.Is21CFRPart11">
            <summary>
            When set to **true**, indicates that this module is enabled on the account.
            </summary>
            <value>When set to **true**, indicates that this module is enabled on the account.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FolderItem.CustomFields">
            <summary>
            An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.
            </summary>
            <value>An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.</value>
        </member>
        <member name="M:DocuSign.eSign.Model.FolderItem.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.FolderItem.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.FolderItem.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.FolderItem.Equals(DocuSign.eSign.Model.FolderItem)">
            <summary>
            Returns true if FolderItem instances are equal
            </summary>
            <param name="other">Instance of FolderItem to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.FolderItem.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.FolderItemResponse">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.FolderItemResponse.ResultSetSize">
            <summary>
            The number of results returned in this response.
            </summary>
            <value>The number of results returned in this response.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FolderItemResponse.StartPosition">
            <summary>
            Starting position of the current result set.
            </summary>
            <value>Starting position of the current result set.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FolderItemResponse.EndPosition">
            <summary>
            The last position in the result set.
            </summary>
            <value>The last position in the result set.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FolderItemResponse.TotalRows">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.FolderItemResponse.NextUri">
            <summary>
            The URI to the next chunk of records based on the search request. If the endPosition is the entire results of the search, this is null.
            </summary>
            <value>The URI to the next chunk of records based on the search request. If the endPosition is the entire results of the search, this is null.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FolderItemResponse.PreviousUri">
            <summary>
            The postal code for the billing address.
            </summary>
            <value>The postal code for the billing address.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FolderItemResponse.FolderItems">
            <summary>
            A list of the envelopes in the specified folder or folders.
            </summary>
            <value>A list of the envelopes in the specified folder or folders.</value>
        </member>
        <member name="M:DocuSign.eSign.Model.FolderItemResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.FolderItemResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.FolderItemResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.FolderItemResponse.Equals(DocuSign.eSign.Model.FolderItemResponse)">
            <summary>
            Returns true if FolderItemResponse instances are equal
            </summary>
            <param name="other">Instance of FolderItemResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.FolderItemResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.FolderItemsResponse">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.FolderItemsResponse.ResultSetSize">
            <summary>
            The number of results returned in this response.
            </summary>
            <value>The number of results returned in this response.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FolderItemsResponse.StartPosition">
            <summary>
            Starting position of the current result set.
            </summary>
            <value>Starting position of the current result set.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FolderItemsResponse.EndPosition">
            <summary>
            The last position in the result set.
            </summary>
            <value>The last position in the result set.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FolderItemsResponse.TotalSetSize">
            <summary>
            The total number of items available in the result set. This will always be greater than or equal to the value of the `resultSetSize` property.
            </summary>
            <value>The total number of items available in the result set. This will always be greater than or equal to the value of the `resultSetSize` property.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FolderItemsResponse.PreviousUri">
            <summary>
            The postal code for the billing address.
            </summary>
            <value>The postal code for the billing address.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FolderItemsResponse.NextUri">
            <summary>
            The URI to the next chunk of records based on the search request. If the endPosition is the entire results of the search, this is null.
            </summary>
            <value>The URI to the next chunk of records based on the search request. If the endPosition is the entire results of the search, this is null.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FolderItemsResponse.FolderItems">
            <summary>
            A list of the envelopes in the specified folder or folders.
            </summary>
            <value>A list of the envelopes in the specified folder or folders.</value>
        </member>
        <member name="M:DocuSign.eSign.Model.FolderItemsResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.FolderItemsResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.FolderItemsResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.FolderItemsResponse.Equals(DocuSign.eSign.Model.FolderItemsResponse)">
            <summary>
            Returns true if FolderItemsResponse instances are equal
            </summary>
            <param name="other">Instance of FolderItemsResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.FolderItemsResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.FolderItemV2">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.FolderItemV2.OwnerName">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.FolderItemV2.EnvelopeId">
            <summary>
            The envelope ID of the envelope status that failed to post.
            </summary>
            <value>The envelope ID of the envelope status that failed to post.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FolderItemV2.EnvelopeUri">
            <summary>
            Contains a URI for an endpoint that you can use to retrieve the envelope or envelopes.
            </summary>
            <value>Contains a URI for an endpoint that you can use to retrieve the envelope or envelopes.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FolderItemV2.Status">
            <summary>
            Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.
            </summary>
            <value>Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FolderItemV2.LastModifiedDateTime">
            <summary>
            The date and time the item was last modified.
            </summary>
            <value>The date and time the item was last modified.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FolderItemV2.SenderUserId">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.FolderItemV2.SenderName">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.FolderItemV2.SenderEmail">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.FolderItemV2.SenderCompany">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.FolderItemV2.CreatedDateTime">
            <summary>
            Indicates the date and time the item was created.
            </summary>
            <value>Indicates the date and time the item was created.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FolderItemV2.SentDateTime">
            <summary>
            The date and time the envelope was sent.
            </summary>
            <value>The date and time the envelope was sent.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FolderItemV2.CompletedDateTime">
            <summary>
            Specifies the date and time this item was completed.
            </summary>
            <value>Specifies the date and time this item was completed.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FolderItemV2.Subject">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.FolderItemV2.ExpireDateTime">
            <summary>
            The date and time the envelope is set to expire.
            </summary>
            <value>The date and time the envelope is set to expire.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FolderItemV2.FolderId">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.FolderItemV2.FolderUri">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.FolderItemV2.Recipients">
            <summary>
            Gets or Sets Recipients
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.FolderItemV2.RecipientsUri">
            <summary>
            Contains a URI for an endpoint that you can use to retrieve the recipients.
            </summary>
            <value>Contains a URI for an endpoint that you can use to retrieve the recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FolderItemV2.Is21CFRPart11">
            <summary>
            When set to **true**, indicates that this module is enabled on the account.
            </summary>
            <value>When set to **true**, indicates that this module is enabled on the account.</value>
        </member>
        <member name="M:DocuSign.eSign.Model.FolderItemV2.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.FolderItemV2.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.FolderItemV2.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.FolderItemV2.Equals(DocuSign.eSign.Model.FolderItemV2)">
            <summary>
            Returns true if FolderItemV2 instances are equal
            </summary>
            <param name="other">Instance of FolderItemV2 to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.FolderItemV2.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.FoldersRequest">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.FoldersRequest.EnvelopeIds">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.FoldersRequest.FromFolderId">
            <summary>
            The folder ID the envelope is being moved from.
            </summary>
            <value>The folder ID the envelope is being moved from.</value>
        </member>
        <member name="M:DocuSign.eSign.Model.FoldersRequest.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.FoldersRequest.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.FoldersRequest.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.FoldersRequest.Equals(DocuSign.eSign.Model.FoldersRequest)">
            <summary>
            Returns true if FoldersRequest instances are equal
            </summary>
            <param name="other">Instance of FoldersRequest to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.FoldersRequest.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.FoldersResponse">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.FoldersResponse.Folders">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="M:DocuSign.eSign.Model.FoldersResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.FoldersResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.FoldersResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.FoldersResponse.Equals(DocuSign.eSign.Model.FoldersResponse)">
            <summary>
            Returns true if FoldersResponse instances are equal
            </summary>
            <param name="other">Instance of FoldersResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.FoldersResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.FormulaTab">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.FormulaTab.IsPaymentAmount">
            <summary>
            When set to **true**, sets this as a payment tab. Can only be used with Text, Number, Formula, or List tabs. The value of the tab must be a number.
            </summary>
            <value>When set to **true**, sets this as a payment tab. Can only be used with Text, Number, Formula, or List tabs. The value of the tab must be a number.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FormulaTab.Formula">
            <summary>
            The Formula string contains the TabLabel for the reference tabs used in the formula and calculation operators. Each TabLabel must be contained in brackets. \nMaximum Length: 2000 characters.\n\n*Example*: Three tabs (TabLabels: Line1, Line2, and Tax) need to be added together. The formula string would be: \n\n[Line1]+[Line2]+[Tax]
            </summary>
            <value>The Formula string contains the TabLabel for the reference tabs used in the formula and calculation operators. Each TabLabel must be contained in brackets. \nMaximum Length: 2000 characters.\n\n*Example*: Three tabs (TabLabels: Line1, Line2, and Tax) need to be added together. The formula string would be: \n\n[Line1]+[Line2]+[Tax]</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FormulaTab.ValidationPattern">
            <summary>
            A regular expressionn used to validate input for the tab.
            </summary>
            <value>A regular expressionn used to validate input for the tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FormulaTab.ValidationMessage">
            <summary>
            The message displayed if the custom tab fails input validation (either custom of embedded).
            </summary>
            <value>The message displayed if the custom tab fails input validation (either custom of embedded).</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FormulaTab.Shared">
            <summary>
            When set to **true**, this custom tab is shared.
            </summary>
            <value>When set to **true**, this custom tab is shared.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FormulaTab.RequireInitialOnSharedChange">
            <summary>
            Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.
            </summary>
            <value>Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FormulaTab.SenderRequired">
            <summary>
            When set to **true**, the sender must populate the tab before an envelope can be sent using the template. \n\nThis value tab can only be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired` value of true cannot be deleted from an envelope.
            </summary>
            <value>When set to **true**, the sender must populate the tab before an envelope can be sent using the template. \n\nThis value tab can only be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired` value of true cannot be deleted from an envelope.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FormulaTab.RequireAll">
            <summary>
            When set to **true** and shared is true, information must be entered in this field to complete the envelope.
            </summary>
            <value>When set to **true** and shared is true, information must be entered in this field to complete the envelope.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FormulaTab.Name">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.FormulaTab.Value">
            <summary>
            Specifies the value of the tab.
            </summary>
            <value>Specifies the value of the tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FormulaTab.OriginalValue">
            <summary>
            The initial value of the tab when it was sent to the recipient.
            </summary>
            <value>The initial value of the tab when it was sent to the recipient.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FormulaTab.Width">
            <summary>
            Width of the tab in pixels.
            </summary>
            <value>Width of the tab in pixels.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FormulaTab.Required">
            <summary>
            When set to **true**, the signer is required to fill out this tab
            </summary>
            <value>When set to **true**, the signer is required to fill out this tab</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FormulaTab.Locked">
            <summary>
            When set to **true**, the signer cannot change the data of the custom tab.
            </summary>
            <value>When set to **true**, the signer cannot change the data of the custom tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FormulaTab.ConcealValueOnDocument">
            <summary>
            When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
            </summary>
            <value>When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FormulaTab.DisableAutoSize">
            <summary>
            When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.
            </summary>
            <value>When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FormulaTab.MaxLength">
            <summary>
            An optional value that describes the maximum length of the property when the property is a string.
            </summary>
            <value>An optional value that describes the maximum length of the property when the property is a string.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FormulaTab.TabLabel">
            <summary>
            The label string associated with the tab.
            </summary>
            <value>The label string associated with the tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FormulaTab.Font">
            <summary>
            The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.
            </summary>
            <value>The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FormulaTab.Bold">
            <summary>
            When set to **true**, the information in the tab is bold.
            </summary>
            <value>When set to **true**, the information in the tab is bold.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FormulaTab.Italic">
            <summary>
            When set to **true**, the information in the tab is italic.
            </summary>
            <value>When set to **true**, the information in the tab is italic.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FormulaTab.Underline">
            <summary>
            When set to **true**, the information in the tab is underlined.
            </summary>
            <value>When set to **true**, the information in the tab is underlined.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FormulaTab.FontColor">
            <summary>
            The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.
            </summary>
            <value>The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FormulaTab.FontSize">
            <summary>
            The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.
            </summary>
            <value>The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FormulaTab.DocumentId">
            <summary>
            Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
            </summary>
            <value>Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FormulaTab.RecipientId">
            <summary>
            Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
            </summary>
            <value>Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FormulaTab.PageNumber">
            <summary>
            Specifies the page number on which the tab is located.
            </summary>
            <value>Specifies the page number on which the tab is located.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FormulaTab.XPosition">
            <summary>
            This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.
            </summary>
            <value>This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FormulaTab.YPosition">
            <summary>
            This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.
            </summary>
            <value>This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FormulaTab.AnchorString">
            <summary>
            Anchor text information for a radio button.
            </summary>
            <value>Anchor text information for a radio button.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FormulaTab.AnchorXOffset">
            <summary>
            Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.
            </summary>
            <value>Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FormulaTab.AnchorYOffset">
            <summary>
            Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.
            </summary>
            <value>Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FormulaTab.AnchorUnits">
            <summary>
            Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.
            </summary>
            <value>Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FormulaTab.AnchorIgnoreIfNotPresent">
            <summary>
            When set to **true**, this tab is ignored if anchorString is not found in the document.
            </summary>
            <value>When set to **true**, this tab is ignored if anchorString is not found in the document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FormulaTab.AnchorCaseSensitive">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.FormulaTab.AnchorMatchWholeWord">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.FormulaTab.AnchorHorizontalAlignment">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.FormulaTab.TabId">
            <summary>
            The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].
            </summary>
            <value>The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FormulaTab.TemplateLocked">
            <summary>
            When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.
            </summary>
            <value>When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FormulaTab.TemplateRequired">
            <summary>
            When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.
            </summary>
            <value>When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FormulaTab.ConditionalParentLabel">
            <summary>
            For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.
            </summary>
            <value>For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FormulaTab.ConditionalParentValue">
            <summary>
            For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.
            </summary>
            <value>For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FormulaTab.CustomTabId">
            <summary>
            The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
            </summary>
            <value>The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FormulaTab.MergeField">
            <summary>
            Gets or Sets MergeField
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.FormulaTab.Status">
            <summary>
            Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.
            </summary>
            <value>Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FormulaTab.ErrorDetails">
            <summary>
            Gets or Sets ErrorDetails
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Model.FormulaTab.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.FormulaTab.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.FormulaTab.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.FormulaTab.Equals(DocuSign.eSign.Model.FormulaTab)">
            <summary>
            Returns true if FormulaTab instances are equal
            </summary>
            <param name="other">Instance of FormulaTab to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.FormulaTab.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.FullName">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.FullName.Name">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.FullName.TabLabel">
            <summary>
            The label string associated with the tab.
            </summary>
            <value>The label string associated with the tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FullName.Font">
            <summary>
            The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.
            </summary>
            <value>The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FullName.Bold">
            <summary>
            When set to **true**, the information in the tab is bold.
            </summary>
            <value>When set to **true**, the information in the tab is bold.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FullName.Italic">
            <summary>
            When set to **true**, the information in the tab is italic.
            </summary>
            <value>When set to **true**, the information in the tab is italic.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FullName.Underline">
            <summary>
            When set to **true**, the information in the tab is underlined.
            </summary>
            <value>When set to **true**, the information in the tab is underlined.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FullName.FontColor">
            <summary>
            The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.
            </summary>
            <value>The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FullName.FontSize">
            <summary>
            The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.
            </summary>
            <value>The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FullName.DocumentId">
            <summary>
            Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
            </summary>
            <value>Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FullName.RecipientId">
            <summary>
            Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
            </summary>
            <value>Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FullName.PageNumber">
            <summary>
            Specifies the page number on which the tab is located.
            </summary>
            <value>Specifies the page number on which the tab is located.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FullName.XPosition">
            <summary>
            This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.
            </summary>
            <value>This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FullName.YPosition">
            <summary>
            This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.
            </summary>
            <value>This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FullName.AnchorString">
            <summary>
            Anchor text information for a radio button.
            </summary>
            <value>Anchor text information for a radio button.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FullName.AnchorXOffset">
            <summary>
            Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.
            </summary>
            <value>Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FullName.AnchorYOffset">
            <summary>
            Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.
            </summary>
            <value>Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FullName.AnchorUnits">
            <summary>
            Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.
            </summary>
            <value>Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FullName.AnchorIgnoreIfNotPresent">
            <summary>
            When set to **true**, this tab is ignored if anchorString is not found in the document.
            </summary>
            <value>When set to **true**, this tab is ignored if anchorString is not found in the document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FullName.AnchorCaseSensitive">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.FullName.AnchorMatchWholeWord">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.FullName.AnchorHorizontalAlignment">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.FullName.TabId">
            <summary>
            The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].
            </summary>
            <value>The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FullName.TemplateLocked">
            <summary>
            When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.
            </summary>
            <value>When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FullName.TemplateRequired">
            <summary>
            When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.
            </summary>
            <value>When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FullName.ConditionalParentLabel">
            <summary>
            For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.
            </summary>
            <value>For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FullName.ConditionalParentValue">
            <summary>
            For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.
            </summary>
            <value>For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FullName.CustomTabId">
            <summary>
            The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
            </summary>
            <value>The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FullName.MergeField">
            <summary>
            Gets or Sets MergeField
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.FullName.Status">
            <summary>
            Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.
            </summary>
            <value>Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.FullName.ErrorDetails">
            <summary>
            Gets or Sets ErrorDetails
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Model.FullName.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.FullName.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.FullName.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.FullName.Equals(DocuSign.eSign.Model.FullName)">
            <summary>
            Returns true if FullName instances are equal
            </summary>
            <param name="other">Instance of FullName to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.FullName.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.Group">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Group.GroupId">
            <summary>
            The DocuSign group ID for the group.
            </summary>
            <value>The DocuSign group ID for the group.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Group.GroupName">
            <summary>
            The name of the group.
            </summary>
            <value>The name of the group.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Group.PermissionProfileId">
            <summary>
            The ID of the permission profile associated with the group.
            </summary>
            <value>The ID of the permission profile associated with the group.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Group.GroupType">
            <summary>
            The group type.
            </summary>
            <value>The group type.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Group.Users">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Group.ErrorDetails">
            <summary>
            Gets or Sets ErrorDetails
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Model.Group.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Group.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Group.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Group.Equals(DocuSign.eSign.Model.Group)">
            <summary>
            Returns true if Group instances are equal
            </summary>
            <param name="other">Instance of Group to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Group.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.GroupInformation">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.GroupInformation.Groups">
            <summary>
            A collection group objects containing information about the groups returned.
            </summary>
            <value>A collection group objects containing information about the groups returned.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.GroupInformation.ResultSetSize">
            <summary>
            The number of results returned in this response.
            </summary>
            <value>The number of results returned in this response.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.GroupInformation.TotalSetSize">
            <summary>
            The total number of items available in the result set. This will always be greater than or equal to the value of the `resultSetSize` property.
            </summary>
            <value>The total number of items available in the result set. This will always be greater than or equal to the value of the `resultSetSize` property.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.GroupInformation.StartPosition">
            <summary>
            Starting position of the current result set.
            </summary>
            <value>Starting position of the current result set.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.GroupInformation.EndPosition">
            <summary>
            The last position in the result set.
            </summary>
            <value>The last position in the result set.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.GroupInformation.NextUri">
            <summary>
            The URI to the next chunk of records based on the search request. If the endPosition is the entire results of the search, this is null.
            </summary>
            <value>The URI to the next chunk of records based on the search request. If the endPosition is the entire results of the search, this is null.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.GroupInformation.PreviousUri">
            <summary>
            The postal code for the billing address.
            </summary>
            <value>The postal code for the billing address.</value>
        </member>
        <member name="M:DocuSign.eSign.Model.GroupInformation.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.GroupInformation.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.GroupInformation.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.GroupInformation.Equals(DocuSign.eSign.Model.GroupInformation)">
            <summary>
            Returns true if GroupInformation instances are equal
            </summary>
            <param name="other">Instance of GroupInformation to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.GroupInformation.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.IdCheckInformationInput">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.IdCheckInformationInput.AddressInformationInput">
            <summary>
            Gets or Sets AddressInformationInput
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.IdCheckInformationInput.DobInformationInput">
            <summary>
            Gets or Sets DobInformationInput
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.IdCheckInformationInput.Ssn4InformationInput">
            <summary>
            Gets or Sets Ssn4InformationInput
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.IdCheckInformationInput.Ssn9InformationInput">
            <summary>
            Gets or Sets Ssn9InformationInput
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Model.IdCheckInformationInput.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.IdCheckInformationInput.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.IdCheckInformationInput.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.IdCheckInformationInput.Equals(DocuSign.eSign.Model.IdCheckInformationInput)">
            <summary>
            Returns true if IdCheckInformationInput instances are equal
            </summary>
            <param name="other">Instance of IdCheckInformationInput to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.IdCheckInformationInput.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.InitialHere">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.InitialHere.Name">
            <summary>
            Specifies the tool tip text for the tab.
            </summary>
            <value>Specifies the tool tip text for the tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.InitialHere.TabLabel">
            <summary>
            The label string associated with the tab.
            </summary>
            <value>The label string associated with the tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.InitialHere.ScaleValue">
            <summary>
            Sets the size for the InitialHere tab. It can be value from 0.5 to 1.0, where 1.0 represents full size and 0.5 is 50% size.
            </summary>
            <value>Sets the size for the InitialHere tab. It can be value from 0.5 to 1.0, where 1.0 represents full size and 0.5 is 50% size.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.InitialHere.Optional">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.InitialHere.DocumentId">
            <summary>
            Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
            </summary>
            <value>Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.InitialHere.RecipientId">
            <summary>
            Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
            </summary>
            <value>Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.InitialHere.PageNumber">
            <summary>
            Specifies the page number on which the tab is located.
            </summary>
            <value>Specifies the page number on which the tab is located.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.InitialHere.XPosition">
            <summary>
            This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.
            </summary>
            <value>This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.InitialHere.YPosition">
            <summary>
            This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.
            </summary>
            <value>This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.InitialHere.AnchorString">
            <summary>
            Anchor text information for a radio button.
            </summary>
            <value>Anchor text information for a radio button.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.InitialHere.AnchorXOffset">
            <summary>
            Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.
            </summary>
            <value>Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.InitialHere.AnchorYOffset">
            <summary>
            Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.
            </summary>
            <value>Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.InitialHere.AnchorUnits">
            <summary>
            Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.
            </summary>
            <value>Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.InitialHere.AnchorIgnoreIfNotPresent">
            <summary>
            When set to **true**, this tab is ignored if anchorString is not found in the document.
            </summary>
            <value>When set to **true**, this tab is ignored if anchorString is not found in the document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.InitialHere.AnchorCaseSensitive">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.InitialHere.AnchorMatchWholeWord">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.InitialHere.AnchorHorizontalAlignment">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.InitialHere.TabId">
            <summary>
            The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].
            </summary>
            <value>The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].</value>
        </member>
        <member name="P:DocuSign.eSign.Model.InitialHere.TemplateLocked">
            <summary>
            When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.
            </summary>
            <value>When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.InitialHere.TemplateRequired">
            <summary>
            When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.
            </summary>
            <value>When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.InitialHere.ConditionalParentLabel">
            <summary>
            For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.
            </summary>
            <value>For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.InitialHere.ConditionalParentValue">
            <summary>
            For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.
            </summary>
            <value>For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.InitialHere.CustomTabId">
            <summary>
            The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
            </summary>
            <value>The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.InitialHere.MergeField">
            <summary>
            Gets or Sets MergeField
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.InitialHere.Status">
            <summary>
            Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.
            </summary>
            <value>Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.InitialHere.ErrorDetails">
            <summary>
            Gets or Sets ErrorDetails
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Model.InitialHere.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.InitialHere.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.InitialHere.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.InitialHere.Equals(DocuSign.eSign.Model.InitialHere)">
            <summary>
            Returns true if InitialHere instances are equal
            </summary>
            <param name="other">Instance of InitialHere to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.InitialHere.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.InlineTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.InlineTemplate.Sequence">
            <summary>
            Specifies the order in which templates are overlaid.
            </summary>
            <value>Specifies the order in which templates are overlaid.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.InlineTemplate.Envelope">
            <summary>
            Gets or Sets Envelope
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.InlineTemplate.Documents">
            <summary>
            Complex element contains the details on the documents in the envelope.
            </summary>
            <value>Complex element contains the details on the documents in the envelope.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.InlineTemplate.Recipients">
            <summary>
            Gets or Sets Recipients
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.InlineTemplate.CustomFields">
            <summary>
            Gets or Sets CustomFields
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Model.InlineTemplate.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.InlineTemplate.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.InlineTemplate.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.InlineTemplate.Equals(DocuSign.eSign.Model.InlineTemplate)">
            <summary>
            Returns true if InlineTemplate instances are equal
            </summary>
            <param name="other">Instance of InlineTemplate to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.InlineTemplate.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.InPersonSigner">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.InPersonSigner.HostName">
            <summary>
            Specifies the name of the signing host. It is a required element for In Person Signers recipient Type. \nMaximum Length: 100 characters.
            </summary>
            <value>Specifies the name of the signing host. It is a required element for In Person Signers recipient Type. \nMaximum Length: 100 characters.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.InPersonSigner.HostEmail">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.InPersonSigner.SignerName">
            <summary>
            Required. The full legal name of a signer for the envelope. \n\nMaximum Length: 100 characters.
            </summary>
            <value>Required. The full legal name of a signer for the envelope. \n\nMaximum Length: 100 characters.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.InPersonSigner.SignerEmail">
            <summary>
            The email address for an InPersonSigner recipient Type. \n\nMaximum Length: 100 characters.
            </summary>
            <value>The email address for an InPersonSigner recipient Type. \n\nMaximum Length: 100 characters.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.InPersonSigner.SignatureInfo">
            <summary>
            Gets or Sets SignatureInfo
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.InPersonSigner.DefaultRecipient">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.InPersonSigner.OfflineAttributes">
            <summary>
            Gets or Sets OfflineAttributes
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.InPersonSigner.Tabs">
            <summary>
            Gets or Sets Tabs
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.InPersonSigner.SignInEachLocation">
            <summary>
            When set to **true**, specifies that the signer must sign in all locations.
            </summary>
            <value>When set to **true**, specifies that the signer must sign in all locations.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.InPersonSigner.RequireSignerCertificate">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.InPersonSigner.RequireSignOnPaper">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.InPersonSigner.CanSignOffline">
            <summary>
            When set to **true**, specifies that the signer can perform the signing ceremony offline.
            </summary>
            <value>When set to **true**, specifies that the signer can perform the signing ceremony offline.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.InPersonSigner.RecipientSuppliesTabs">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.InPersonSigner.SigningGroupId">
            <summary>
            When set to **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab ( instead of adopting a signature/initial style or only drawing a signature/initial once).
            </summary>
            <value>When set to **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab ( instead of adopting a signature/initial style or only drawing a signature/initial once).</value>
        </member>
        <member name="P:DocuSign.eSign.Model.InPersonSigner.SigningGroupName">
            <summary>
            The display name for the signing group. \n\nMaximum Length: 100 characters.
            </summary>
            <value>The display name for the signing group. \n\nMaximum Length: 100 characters.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.InPersonSigner.SigningGroupUsers">
            <summary>
            A complex type that contains information about users in the signing group.
            </summary>
            <value>A complex type that contains information about users in the signing group.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.InPersonSigner.RecipientId">
            <summary>
            Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
            </summary>
            <value>Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.InPersonSigner.RecipientIdGuid">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.InPersonSigner.AccessCode">
            <summary>
            If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and must conform to account’s access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then access code is not required.
            </summary>
            <value>If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and must conform to account’s access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then access code is not required.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.InPersonSigner.AddAccessCodeToEmail">
            <summary>
            This Optional attribute indicates that the access code will be added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient.
            </summary>
            <value>This Optional attribute indicates that the access code will be added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.InPersonSigner.RequireIdLookup">
            <summary>
            When set to **true**, the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity.
            </summary>
            <value>When set to **true**, the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.InPersonSigner.IdCheckConfigurationName">
            <summary>
            Specifies authentication check by name. The names used here must be the same as the authentication type names used by the account (these name can also be found in the web console sending interface in the Identify list for a recipient,) This overrides any default authentication setting.\n\n*Example*: Your account has ID Check and SMS Authentication available and in the web console Identify list these appear as 'ID Check $' and 'SMS Auth $'. To use ID check in an envelope, the idCheckConfigurationName should be 'ID Check '. If you wanted to use SMS, it would be 'SMS Auth $' and you would need to add you would need to add phone number information to the `smsAuthentication` node.
            </summary>
            <value>Specifies authentication check by name. The names used here must be the same as the authentication type names used by the account (these name can also be found in the web console sending interface in the Identify list for a recipient,) This overrides any default authentication setting.\n\n*Example*: Your account has ID Check and SMS Authentication available and in the web console Identify list these appear as 'ID Check $' and 'SMS Auth $'. To use ID check in an envelope, the idCheckConfigurationName should be 'ID Check '. If you wanted to use SMS, it would be 'SMS Auth $' and you would need to add you would need to add phone number information to the `smsAuthentication` node.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.InPersonSigner.SocialAuthentications">
            <summary>
            Lists the social ID type that can be used for recipient authentication.
            </summary>
            <value>Lists the social ID type that can be used for recipient authentication.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.InPersonSigner.PhoneAuthentication">
            <summary>
            Gets or Sets PhoneAuthentication
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.InPersonSigner.SamlAuthentication">
            <summary>
            Gets or Sets SamlAuthentication
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.InPersonSigner.SmsAuthentication">
            <summary>
            Gets or Sets SmsAuthentication
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.InPersonSigner.UserId">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.InPersonSigner.ClientUserId">
            <summary>
            Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Note that if the `ClientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true**, an error is generated on sending.ng. \n\nMaximum length: 100 characters.
            </summary>
            <value>Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Note that if the `ClientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true**, an error is generated on sending.ng. \n\nMaximum length: 100 characters.</value>
        </member>
        <!-- Badly formed XML comment ignored for member "P:DocuSign.eSign.Model.InPersonSigner.EmbeddedRecipientStartURL" -->
        <member name="P:DocuSign.eSign.Model.InPersonSigner.CustomFields">
            <summary>
            An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.
            </summary>
            <value>An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.InPersonSigner.RoutingOrder">
            <summary>
            Specifies the routing order of the recipient in the envelope.
            </summary>
            <value>Specifies the routing order of the recipient in the envelope.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.InPersonSigner.IdCheckInformationInput">
            <summary>
            Gets or Sets IdCheckInformationInput
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.InPersonSigner.RecipientAttachments">
            <summary>
            Reserved:
            </summary>
            <value>Reserved:</value>
        </member>
        <member name="P:DocuSign.eSign.Model.InPersonSigner.Note">
            <summary>
            Specifies a note that is unique to this recipient. This note is sent to the recipient via the signing email. The note displays in the signing UI near the upper left corner of the document on the signing screen.\n\nMaximum Length: 1000 characters.
            </summary>
            <value>Specifies a note that is unique to this recipient. This note is sent to the recipient via the signing email. The note displays in the signing UI near the upper left corner of the document on the signing screen.\n\nMaximum Length: 1000 characters.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.InPersonSigner.RoleName">
            <summary>
            Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.
            </summary>
            <value>Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.InPersonSigner.Status">
            <summary>
            Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.
            </summary>
            <value>Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.InPersonSigner.SignedDateTime">
            <summary>
            Reserved: For DocuSign use only.
            </summary>
            <value>Reserved: For DocuSign use only.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.InPersonSigner.DeliveredDateTime">
            <summary>
            Reserved: For DocuSign use only.
            </summary>
            <value>Reserved: For DocuSign use only.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.InPersonSigner.DeclinedDateTime">
            <summary>
            The date and time the recipient declined the document.
            </summary>
            <value>The date and time the recipient declined the document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.InPersonSigner.SentDateTime">
            <summary>
            The date and time the envelope was sent.
            </summary>
            <value>The date and time the envelope was sent.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.InPersonSigner.DeclinedReason">
            <summary>
            The reason the recipient declined the document.
            </summary>
            <value>The reason the recipient declined the document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.InPersonSigner.DeliveryMethod">
            <summary>
            Reserved: For DocuSign use only.
            </summary>
            <value>Reserved: For DocuSign use only.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.InPersonSigner.FaxNumber">
            <summary>
            Reserved:
            </summary>
            <value>Reserved:</value>
        </member>
        <member name="P:DocuSign.eSign.Model.InPersonSigner.TemplateLocked">
            <summary>
            When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.
            </summary>
            <value>When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.InPersonSigner.TemplateRequired">
            <summary>
            When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.
            </summary>
            <value>When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.InPersonSigner.EmailNotification">
            <summary>
            Gets or Sets EmailNotification
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.InPersonSigner.InheritEmailNotificationConfiguration">
            <summary>
            When set to **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account.
            </summary>
            <value>When set to **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.InPersonSigner.ErrorDetails">
            <summary>
            Gets or Sets ErrorDetails
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.InPersonSigner.RecipientAuthenticationStatus">
            <summary>
            Gets or Sets RecipientAuthenticationStatus
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.InPersonSigner.TotalTabCount">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="M:DocuSign.eSign.Model.InPersonSigner.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.InPersonSigner.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.InPersonSigner.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.InPersonSigner.Equals(DocuSign.eSign.Model.InPersonSigner)">
            <summary>
            Returns true if InPersonSigner instances are equal
            </summary>
            <param name="other">Instance of InPersonSigner to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.InPersonSigner.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.Intermediary">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Intermediary.ExcludedDocuments">
            <summary>
            Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.\n\nWhen enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.
            </summary>
            <value>Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.\n\nWhen enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Intermediary.Name">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Intermediary.Email">
            <summary>
            Email id of the recipient. Notification of the document to sign is sent to this email id. \n\nMaximum length: 100 characters.
            </summary>
            <value>Email id of the recipient. Notification of the document to sign is sent to this email id. \n\nMaximum length: 100 characters.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Intermediary.EmailRecipientPostSigningURL">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Intermediary.SigningGroupId">
            <summary>
            When set to **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab ( instead of adopting a signature/initial style or only drawing a signature/initial once).
            </summary>
            <value>When set to **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab ( instead of adopting a signature/initial style or only drawing a signature/initial once).</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Intermediary.SigningGroupName">
            <summary>
            The display name for the signing group. \n\nMaximum Length: 100 characters.
            </summary>
            <value>The display name for the signing group. \n\nMaximum Length: 100 characters.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Intermediary.SigningGroupUsers">
            <summary>
            A complex type that contains information about users in the signing group.
            </summary>
            <value>A complex type that contains information about users in the signing group.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Intermediary.RecipientId">
            <summary>
            Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
            </summary>
            <value>Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Intermediary.RecipientIdGuid">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Intermediary.AccessCode">
            <summary>
            If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and must conform to account’s access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then access code is not required.
            </summary>
            <value>If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and must conform to account’s access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then access code is not required.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Intermediary.AddAccessCodeToEmail">
            <summary>
            This Optional attribute indicates that the access code will be added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient.
            </summary>
            <value>This Optional attribute indicates that the access code will be added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Intermediary.RequireIdLookup">
            <summary>
            When set to **true**, the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity.
            </summary>
            <value>When set to **true**, the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Intermediary.IdCheckConfigurationName">
            <summary>
            Specifies authentication check by name. The names used here must be the same as the authentication type names used by the account (these name can also be found in the web console sending interface in the Identify list for a recipient,) This overrides any default authentication setting.\n\n*Example*: Your account has ID Check and SMS Authentication available and in the web console Identify list these appear as 'ID Check $' and 'SMS Auth $'. To use ID check in an envelope, the idCheckConfigurationName should be 'ID Check '. If you wanted to use SMS, it would be 'SMS Auth $' and you would need to add you would need to add phone number information to the `smsAuthentication` node.
            </summary>
            <value>Specifies authentication check by name. The names used here must be the same as the authentication type names used by the account (these name can also be found in the web console sending interface in the Identify list for a recipient,) This overrides any default authentication setting.\n\n*Example*: Your account has ID Check and SMS Authentication available and in the web console Identify list these appear as 'ID Check $' and 'SMS Auth $'. To use ID check in an envelope, the idCheckConfigurationName should be 'ID Check '. If you wanted to use SMS, it would be 'SMS Auth $' and you would need to add you would need to add phone number information to the `smsAuthentication` node.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Intermediary.SocialAuthentications">
            <summary>
            Lists the social ID type that can be used for recipient authentication.
            </summary>
            <value>Lists the social ID type that can be used for recipient authentication.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Intermediary.PhoneAuthentication">
            <summary>
            Gets or Sets PhoneAuthentication
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Intermediary.SamlAuthentication">
            <summary>
            Gets or Sets SamlAuthentication
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Intermediary.SmsAuthentication">
            <summary>
            Gets or Sets SmsAuthentication
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Intermediary.UserId">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Intermediary.ClientUserId">
            <summary>
            Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Note that if the `ClientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true**, an error is generated on sending.ng. \n\nMaximum length: 100 characters.
            </summary>
            <value>Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Note that if the `ClientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true**, an error is generated on sending.ng. \n\nMaximum length: 100 characters.</value>
        </member>
        <!-- Badly formed XML comment ignored for member "P:DocuSign.eSign.Model.Intermediary.EmbeddedRecipientStartURL" -->
        <member name="P:DocuSign.eSign.Model.Intermediary.CustomFields">
            <summary>
            An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.
            </summary>
            <value>An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Intermediary.RoutingOrder">
            <summary>
            Specifies the routing order of the recipient in the envelope.
            </summary>
            <value>Specifies the routing order of the recipient in the envelope.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Intermediary.IdCheckInformationInput">
            <summary>
            Gets or Sets IdCheckInformationInput
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Intermediary.RecipientAttachments">
            <summary>
            Reserved:
            </summary>
            <value>Reserved:</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Intermediary.Note">
            <summary>
            Specifies a note that is unique to this recipient. This note is sent to the recipient via the signing email. The note displays in the signing UI near the upper left corner of the document on the signing screen.\n\nMaximum Length: 1000 characters.
            </summary>
            <value>Specifies a note that is unique to this recipient. This note is sent to the recipient via the signing email. The note displays in the signing UI near the upper left corner of the document on the signing screen.\n\nMaximum Length: 1000 characters.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Intermediary.RoleName">
            <summary>
            Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.
            </summary>
            <value>Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Intermediary.Status">
            <summary>
            Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.
            </summary>
            <value>Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Intermediary.SignedDateTime">
            <summary>
            Reserved: For DocuSign use only.
            </summary>
            <value>Reserved: For DocuSign use only.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Intermediary.DeliveredDateTime">
            <summary>
            Reserved: For DocuSign use only.
            </summary>
            <value>Reserved: For DocuSign use only.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Intermediary.DeclinedDateTime">
            <summary>
            The date and time the recipient declined the document.
            </summary>
            <value>The date and time the recipient declined the document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Intermediary.SentDateTime">
            <summary>
            The date and time the envelope was sent.
            </summary>
            <value>The date and time the envelope was sent.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Intermediary.DeclinedReason">
            <summary>
            The reason the recipient declined the document.
            </summary>
            <value>The reason the recipient declined the document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Intermediary.DeliveryMethod">
            <summary>
            Reserved: For DocuSign use only.
            </summary>
            <value>Reserved: For DocuSign use only.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Intermediary.FaxNumber">
            <summary>
            Reserved:
            </summary>
            <value>Reserved:</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Intermediary.TemplateLocked">
            <summary>
            When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.
            </summary>
            <value>When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Intermediary.TemplateRequired">
            <summary>
            When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.
            </summary>
            <value>When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Intermediary.EmailNotification">
            <summary>
            Gets or Sets EmailNotification
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Intermediary.InheritEmailNotificationConfiguration">
            <summary>
            When set to **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account.
            </summary>
            <value>When set to **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Intermediary.ErrorDetails">
            <summary>
            Gets or Sets ErrorDetails
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Intermediary.RecipientAuthenticationStatus">
            <summary>
            Gets or Sets RecipientAuthenticationStatus
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Intermediary.TotalTabCount">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="M:DocuSign.eSign.Model.Intermediary.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Intermediary.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Intermediary.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Intermediary.Equals(DocuSign.eSign.Model.Intermediary)">
            <summary>
            Returns true if Intermediary instances are equal
            </summary>
            <param name="other">Instance of Intermediary to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Intermediary.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.LastName">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.LastName.Name">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.LastName.TabLabel">
            <summary>
            The label string associated with the tab.
            </summary>
            <value>The label string associated with the tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.LastName.Font">
            <summary>
            The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.
            </summary>
            <value>The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.LastName.Bold">
            <summary>
            When set to **true**, the information in the tab is bold.
            </summary>
            <value>When set to **true**, the information in the tab is bold.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.LastName.Italic">
            <summary>
            When set to **true**, the information in the tab is italic.
            </summary>
            <value>When set to **true**, the information in the tab is italic.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.LastName.Underline">
            <summary>
            When set to **true**, the information in the tab is underlined.
            </summary>
            <value>When set to **true**, the information in the tab is underlined.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.LastName.FontColor">
            <summary>
            The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.
            </summary>
            <value>The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.LastName.FontSize">
            <summary>
            The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.
            </summary>
            <value>The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.LastName.DocumentId">
            <summary>
            Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
            </summary>
            <value>Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.LastName.RecipientId">
            <summary>
            Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
            </summary>
            <value>Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.LastName.PageNumber">
            <summary>
            Specifies the page number on which the tab is located.
            </summary>
            <value>Specifies the page number on which the tab is located.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.LastName.XPosition">
            <summary>
            This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.
            </summary>
            <value>This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.LastName.YPosition">
            <summary>
            This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.
            </summary>
            <value>This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.LastName.AnchorString">
            <summary>
            Anchor text information for a radio button.
            </summary>
            <value>Anchor text information for a radio button.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.LastName.AnchorXOffset">
            <summary>
            Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.
            </summary>
            <value>Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.LastName.AnchorYOffset">
            <summary>
            Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.
            </summary>
            <value>Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.LastName.AnchorUnits">
            <summary>
            Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.
            </summary>
            <value>Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.LastName.AnchorIgnoreIfNotPresent">
            <summary>
            When set to **true**, this tab is ignored if anchorString is not found in the document.
            </summary>
            <value>When set to **true**, this tab is ignored if anchorString is not found in the document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.LastName.AnchorCaseSensitive">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.LastName.AnchorMatchWholeWord">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.LastName.AnchorHorizontalAlignment">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.LastName.TabId">
            <summary>
            The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].
            </summary>
            <value>The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].</value>
        </member>
        <member name="P:DocuSign.eSign.Model.LastName.TemplateLocked">
            <summary>
            When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.
            </summary>
            <value>When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.LastName.TemplateRequired">
            <summary>
            When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.
            </summary>
            <value>When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.LastName.ConditionalParentLabel">
            <summary>
            For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.
            </summary>
            <value>For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.LastName.ConditionalParentValue">
            <summary>
            For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.
            </summary>
            <value>For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.LastName.CustomTabId">
            <summary>
            The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
            </summary>
            <value>The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.LastName.MergeField">
            <summary>
            Gets or Sets MergeField
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.LastName.Status">
            <summary>
            Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.
            </summary>
            <value>Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.LastName.ErrorDetails">
            <summary>
            Gets or Sets ErrorDetails
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Model.LastName.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.LastName.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.LastName.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.LastName.Equals(DocuSign.eSign.Model.LastName)">
            <summary>
            Returns true if LastName instances are equal
            </summary>
            <param name="other">Instance of LastName to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.LastName.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.List">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.List.ListItems">
            <summary>
            The list of values that can be selected by senders. The list values are separated by semi-colons. Example: [one;two;three;four]\n\nMaximum Length of listItems:  2048 characters.\nMaximum Length of items in the list: 100 characters.
            </summary>
            <value>The list of values that can be selected by senders. The list values are separated by semi-colons. Example: [one;two;three;four]\n\nMaximum Length of listItems:  2048 characters.\nMaximum Length of items in the list: 100 characters.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.List.Value">
            <summary>
            The value to use when the item is selected.
            </summary>
            <value>The value to use when the item is selected.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.List.Width">
            <summary>
            Width of the tab in pixels.
            </summary>
            <value>Width of the tab in pixels.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.List.Shared">
            <summary>
            When set to **true**, this custom tab is shared.
            </summary>
            <value>When set to **true**, this custom tab is shared.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.List.RequireInitialOnSharedChange">
            <summary>
            Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.
            </summary>
            <value>Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.List.Required">
            <summary>
            When set to **true**, the signer is required to fill out this tab
            </summary>
            <value>When set to **true**, the signer is required to fill out this tab</value>
        </member>
        <member name="P:DocuSign.eSign.Model.List.Locked">
            <summary>
            When set to **true**, the signer cannot change the data of the custom tab.
            </summary>
            <value>When set to **true**, the signer cannot change the data of the custom tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.List.SenderRequired">
            <summary>
            When set to **true**, the sender must populate the tab before an envelope can be sent using the template. \n\nThis value tab can only be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired` value of true cannot be deleted from an envelope.
            </summary>
            <value>When set to **true**, the sender must populate the tab before an envelope can be sent using the template. \n\nThis value tab can only be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired` value of true cannot be deleted from an envelope.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.List.RequireAll">
            <summary>
            When set to **true** and shared is true, information must be entered in this field to complete the envelope.
            </summary>
            <value>When set to **true** and shared is true, information must be entered in this field to complete the envelope.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.List.TabLabel">
            <summary>
            The label string associated with the tab.
            </summary>
            <value>The label string associated with the tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.List.Font">
            <summary>
            The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.
            </summary>
            <value>The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.List.Bold">
            <summary>
            When set to **true**, the information in the tab is bold.
            </summary>
            <value>When set to **true**, the information in the tab is bold.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.List.Italic">
            <summary>
            When set to **true**, the information in the tab is italic.
            </summary>
            <value>When set to **true**, the information in the tab is italic.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.List.Underline">
            <summary>
            When set to **true**, the information in the tab is underlined.
            </summary>
            <value>When set to **true**, the information in the tab is underlined.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.List.FontColor">
            <summary>
            The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.
            </summary>
            <value>The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.List.FontSize">
            <summary>
            The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.
            </summary>
            <value>The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.List.DocumentId">
            <summary>
            Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
            </summary>
            <value>Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.List.RecipientId">
            <summary>
            Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
            </summary>
            <value>Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.List.PageNumber">
            <summary>
            Specifies the page number on which the tab is located.
            </summary>
            <value>Specifies the page number on which the tab is located.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.List.XPosition">
            <summary>
            This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.
            </summary>
            <value>This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.List.YPosition">
            <summary>
            This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.
            </summary>
            <value>This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.List.AnchorString">
            <summary>
            Anchor text information for a radio button.
            </summary>
            <value>Anchor text information for a radio button.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.List.AnchorXOffset">
            <summary>
            Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.
            </summary>
            <value>Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.List.AnchorYOffset">
            <summary>
            Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.
            </summary>
            <value>Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.List.AnchorUnits">
            <summary>
            Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.
            </summary>
            <value>Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.List.AnchorIgnoreIfNotPresent">
            <summary>
            When set to **true**, this tab is ignored if anchorString is not found in the document.
            </summary>
            <value>When set to **true**, this tab is ignored if anchorString is not found in the document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.List.AnchorCaseSensitive">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.List.AnchorMatchWholeWord">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.List.AnchorHorizontalAlignment">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.List.TabId">
            <summary>
            The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].
            </summary>
            <value>The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].</value>
        </member>
        <member name="P:DocuSign.eSign.Model.List.TemplateLocked">
            <summary>
            When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.
            </summary>
            <value>When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.List.TemplateRequired">
            <summary>
            When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.
            </summary>
            <value>When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.List.ConditionalParentLabel">
            <summary>
            For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.
            </summary>
            <value>For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.List.ConditionalParentValue">
            <summary>
            For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.
            </summary>
            <value>For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.List.CustomTabId">
            <summary>
            The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
            </summary>
            <value>The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.List.MergeField">
            <summary>
            Gets or Sets MergeField
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.List.Status">
            <summary>
            Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.
            </summary>
            <value>Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.List.ErrorDetails">
            <summary>
            Gets or Sets ErrorDetails
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Model.List.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.List.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.List.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.List.Equals(DocuSign.eSign.Model.List)">
            <summary>
            Returns true if List instances are equal
            </summary>
            <param name="other">Instance of List to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.List.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.ListCustomField">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.ListCustomField.ListItems">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.ListCustomField.FieldId">
            <summary>
            An ID used to specify a custom field.
            </summary>
            <value>An ID used to specify a custom field.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.ListCustomField.Name">
            <summary>
            The name of the custom field.
            </summary>
            <value>The name of the custom field.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.ListCustomField.Show">
            <summary>
            A boolean indicating if the value should be displayed.
            </summary>
            <value>A boolean indicating if the value should be displayed.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.ListCustomField.Required">
            <summary>
            When set to **true**, the signer is required to fill out this tab
            </summary>
            <value>When set to **true**, the signer is required to fill out this tab</value>
        </member>
        <member name="P:DocuSign.eSign.Model.ListCustomField.Value">
            <summary>
            The value of the custom field.\n\nMaximum Length: 100 characters.
            </summary>
            <value>The value of the custom field.\n\nMaximum Length: 100 characters.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.ListCustomField.ConfigurationType">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.ListCustomField.ErrorDetails">
            <summary>
            Gets or Sets ErrorDetails
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Model.ListCustomField.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.ListCustomField.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.ListCustomField.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.ListCustomField.Equals(DocuSign.eSign.Model.ListCustomField)">
            <summary>
            Returns true if ListCustomField instances are equal
            </summary>
            <param name="other">Instance of ListCustomField to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.ListCustomField.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.ListItem">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.ListItem.Text">
            <summary>
            Specifies the text that is shown in the dropdown list.
            </summary>
            <value>Specifies the text that is shown in the dropdown list.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.ListItem.Value">
            <summary>
            Specifies the value that is used when the list item is selected.
            </summary>
            <value>Specifies the value that is used when the list item is selected.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.ListItem.Selected">
            <summary>
            When set to **true**, indicates that this item is the default selection shown to a signer. \n\nOnly one selection can be set as the default.
            </summary>
            <value>When set to **true**, indicates that this item is the default selection shown to a signer. \n\nOnly one selection can be set as the default.</value>
        </member>
        <member name="M:DocuSign.eSign.Model.ListItem.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.ListItem.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.ListItem.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.ListItem.Equals(DocuSign.eSign.Model.ListItem)">
            <summary>
            Returns true if ListItem instances are equal
            </summary>
            <param name="other">Instance of ListItem to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.ListItem.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.LockInformation">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.LockInformation.LockedByUser">
            <summary>
            Gets or Sets LockedByUser
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.LockInformation.LockedByApp">
            <summary>
            Specifies the friendly name of  the application that is locking the envelope.
            </summary>
            <value>Specifies the friendly name of  the application that is locking the envelope.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.LockInformation.LockedUntilDateTime">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.LockInformation.LockDurationInSeconds">
            <summary>
            Sets the time, in seconds, until the lock expires when there is no activity on the envelope.\n\nIf no value is entered, then the default value of 300 seconds is used. The maximum value is 1,800 seconds.\n\nThe lock duration can be extended.
            </summary>
            <value>Sets the time, in seconds, until the lock expires when there is no activity on the envelope.\n\nIf no value is entered, then the default value of 300 seconds is used. The maximum value is 1,800 seconds.\n\nThe lock duration can be extended.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.LockInformation.LockType">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.LockInformation.UseScratchPad">
            <summary>
            Reserved for future use.\n\nIndicates whether a scratchpad is used for editing information.
            </summary>
            <value>Reserved for future use.\n\nIndicates whether a scratchpad is used for editing information.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.LockInformation.LockToken">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.LockInformation.ErrorDetails">
            <summary>
            Gets or Sets ErrorDetails
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Model.LockInformation.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.LockInformation.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.LockInformation.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.LockInformation.Equals(DocuSign.eSign.Model.LockInformation)">
            <summary>
            Returns true if LockInformation instances are equal
            </summary>
            <param name="other">Instance of LockInformation to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.LockInformation.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.LockRequest">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.LockRequest.LockedByApp">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.LockRequest.LockDurationInSeconds">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.LockRequest.LockType">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.LockRequest.UseScratchPad">
            <summary>
            Reserved for future use.\n\nIndicates whether a scratchpad is used for editing information.
            </summary>
            <value>Reserved for future use.\n\nIndicates whether a scratchpad is used for editing information.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.LockRequest.TemplatePassword">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="M:DocuSign.eSign.Model.LockRequest.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.LockRequest.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.LockRequest.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.LockRequest.Equals(DocuSign.eSign.Model.LockRequest)">
            <summary>
            Returns true if LockRequest instances are equal
            </summary>
            <param name="other">Instance of LockRequest to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.LockRequest.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.LoginAccount">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.LoginAccount.Name">
            <summary>
            The name associated with the account.
            </summary>
            <value>The name associated with the account.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.LoginAccount.AccountId">
            <summary>
            The account ID associated with the envelope.
            </summary>
            <value>The account ID associated with the envelope.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.LoginAccount.AccountIdGuid">
            <summary>
            The GUID associated with the account ID.
            </summary>
            <value>The GUID associated with the account ID.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.LoginAccount.BaseUrl">
            <summary>
            The URL that should be used for successive calls to this account. It includes the protocal (https), the DocuSign server where the account is located, and the account number. Use this Url to make API calls against this account. Many of the API calls provide Uri's that are relative to this baseUrl.
            </summary>
            <value>The URL that should be used for successive calls to this account. It includes the protocal (https), the DocuSign server where the account is located, and the account number. Use this Url to make API calls against this account. Many of the API calls provide Uri's that are relative to this baseUrl.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.LoginAccount.IsDefault">
            <summary>
            This value is true if this is the default account for the user, otherwise false is returned.
            </summary>
            <value>This value is true if this is the default account for the user, otherwise false is returned.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.LoginAccount.UserName">
            <summary>
            The name of this user as defined by the account.
            </summary>
            <value>The name of this user as defined by the account.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.LoginAccount.UserId">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.LoginAccount.Email">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.LoginAccount.SiteDescription">
            <summary>
            An optional descirption of the site that hosts the account.
            </summary>
            <value>An optional descirption of the site that hosts the account.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.LoginAccount.LoginAccountSettings">
            <summary>
            A list of settings on the acccount that indicate what features are available.
            </summary>
            <value>A list of settings on the acccount that indicate what features are available.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.LoginAccount.LoginUserSettings">
            <summary>
            A list of user-level settings that indicate what user-specific features are available.
            </summary>
            <value>A list of user-level settings that indicate what user-specific features are available.</value>
        </member>
        <member name="M:DocuSign.eSign.Model.LoginAccount.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.LoginAccount.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.LoginAccount.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.LoginAccount.Equals(DocuSign.eSign.Model.LoginAccount)">
            <summary>
            Returns true if LoginAccount instances are equal
            </summary>
            <param name="other">Instance of LoginAccount to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.LoginAccount.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.LoginInformation">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.LoginInformation.LoginAccounts">
            <summary>
            The list of accounts that authenticating user is a member of.
            </summary>
            <value>The list of accounts that authenticating user is a member of.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.LoginInformation.ApiPassword">
            <summary>
            Contains a token that can be used for authentication in API calls instead of using the user name and password. Only returned if the `api_password=true` query string is added to the URL.
            </summary>
            <value>Contains a token that can be used for authentication in API calls instead of using the user name and password. Only returned if the `api_password=true` query string is added to the URL.</value>
        </member>
        <member name="M:DocuSign.eSign.Model.LoginInformation.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.LoginInformation.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.LoginInformation.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.LoginInformation.Equals(DocuSign.eSign.Model.LoginInformation)">
            <summary>
            Returns true if LoginInformation instances are equal
            </summary>
            <param name="other">Instance of LoginInformation to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.LoginInformation.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.MatchBox">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.MatchBox.PageNumber">
            <summary>
            Specifies the page number on which the tab is located.
            </summary>
            <value>Specifies the page number on which the tab is located.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.MatchBox.XPosition">
            <summary>
            This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.
            </summary>
            <value>This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.MatchBox.YPosition">
            <summary>
            This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.
            </summary>
            <value>This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.MatchBox.Width">
            <summary>
            Width of the tab in pixels.
            </summary>
            <value>Width of the tab in pixels.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.MatchBox.Height">
            <summary>
            Height of the tab in pixels.
            </summary>
            <value>Height of the tab in pixels.</value>
        </member>
        <member name="M:DocuSign.eSign.Model.MatchBox.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.MatchBox.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.MatchBox.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.MatchBox.Equals(DocuSign.eSign.Model.MatchBox)">
            <summary>
            Returns true if MatchBox instances are equal
            </summary>
            <param name="other">Instance of MatchBox to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.MatchBox.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.MemberSharedItems">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.MemberSharedItems.User">
            <summary>
            Gets or Sets User
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.MemberSharedItems.Envelopes">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.MemberSharedItems.ErrorDetails">
            <summary>
            Gets or Sets ErrorDetails
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Model.MemberSharedItems.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.MemberSharedItems.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.MemberSharedItems.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.MemberSharedItems.Equals(DocuSign.eSign.Model.MemberSharedItems)">
            <summary>
            Returns true if MemberSharedItems instances are equal
            </summary>
            <param name="other">Instance of MemberSharedItems to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.MemberSharedItems.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.MergeField">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.MergeField.ConfigurationType">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.MergeField.Path">
            <summary>
            Sets the object associated with the custom tab. Currently this is the Salesforce Object.
            </summary>
            <value>Sets the object associated with the custom tab. Currently this is the Salesforce Object.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.MergeField.WriteBack">
            <summary>
            When wet to true, the information entered in the tab automatically updates the related Salesforce data when an envelope is completed.
            </summary>
            <value>When wet to true, the information entered in the tab automatically updates the related Salesforce data when an envelope is completed.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.MergeField.AllowSenderToEdit">
            <summary>
            When set to **true**, the sender can modify the value of the custom tab during the sending process.
            </summary>
            <value>When set to **true**, the sender can modify the value of the custom tab during the sending process.</value>
        </member>
        <member name="M:DocuSign.eSign.Model.MergeField.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.MergeField.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.MergeField.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.MergeField.Equals(DocuSign.eSign.Model.MergeField)">
            <summary>
            Returns true if MergeField instances are equal
            </summary>
            <param name="other">Instance of MergeField to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.MergeField.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.NameValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.NameValue.Name">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.NameValue.Value">
            <summary>
            Specifies the value of the tab.
            </summary>
            <value>Specifies the value of the tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.NameValue.ErrorDetails">
            <summary>
            Gets or Sets ErrorDetails
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Model.NameValue.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.NameValue.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.NameValue.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.NameValue.Equals(DocuSign.eSign.Model.NameValue)">
            <summary>
            Returns true if NameValue instances are equal
            </summary>
            <param name="other">Instance of NameValue to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.NameValue.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.Note">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Note.Width">
            <summary>
            Width of the tab in pixels.
            </summary>
            <value>Width of the tab in pixels.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Note.Height">
            <summary>
            Height of the tab in pixels.
            </summary>
            <value>Height of the tab in pixels.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Note.Shared">
            <summary>
            When set to **true**, this custom tab is shared.
            </summary>
            <value>When set to **true**, this custom tab is shared.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Note.Value">
            <summary>
            Specifies the value of the tab.
            </summary>
            <value>Specifies the value of the tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Note.Name">
            <summary>
            Specifies the tool tip text for the tab.
            </summary>
            <value>Specifies the tool tip text for the tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Note.TabLabel">
            <summary>
            The label string associated with the tab.
            </summary>
            <value>The label string associated with the tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Note.Font">
            <summary>
            The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.
            </summary>
            <value>The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Note.Bold">
            <summary>
            When set to **true**, the information in the tab is bold.
            </summary>
            <value>When set to **true**, the information in the tab is bold.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Note.Italic">
            <summary>
            When set to **true**, the information in the tab is italic.
            </summary>
            <value>When set to **true**, the information in the tab is italic.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Note.Underline">
            <summary>
            When set to **true**, the information in the tab is underlined.
            </summary>
            <value>When set to **true**, the information in the tab is underlined.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Note.FontColor">
            <summary>
            The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.
            </summary>
            <value>The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Note.FontSize">
            <summary>
            The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.
            </summary>
            <value>The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Note.DocumentId">
            <summary>
            Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
            </summary>
            <value>Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Note.RecipientId">
            <summary>
            Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
            </summary>
            <value>Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Note.PageNumber">
            <summary>
            Specifies the page number on which the tab is located.
            </summary>
            <value>Specifies the page number on which the tab is located.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Note.XPosition">
            <summary>
            This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.
            </summary>
            <value>This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Note.YPosition">
            <summary>
            This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.
            </summary>
            <value>This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Note.AnchorString">
            <summary>
            Anchor text information for a radio button.
            </summary>
            <value>Anchor text information for a radio button.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Note.AnchorXOffset">
            <summary>
            Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.
            </summary>
            <value>Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Note.AnchorYOffset">
            <summary>
            Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.
            </summary>
            <value>Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Note.AnchorUnits">
            <summary>
            Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.
            </summary>
            <value>Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Note.AnchorIgnoreIfNotPresent">
            <summary>
            When set to **true**, this tab is ignored if anchorString is not found in the document.
            </summary>
            <value>When set to **true**, this tab is ignored if anchorString is not found in the document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Note.AnchorCaseSensitive">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Note.AnchorMatchWholeWord">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Note.AnchorHorizontalAlignment">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Note.TabId">
            <summary>
            The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].
            </summary>
            <value>The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Note.TemplateLocked">
            <summary>
            When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.
            </summary>
            <value>When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Note.TemplateRequired">
            <summary>
            When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.
            </summary>
            <value>When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Note.ConditionalParentLabel">
            <summary>
            For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.
            </summary>
            <value>For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Note.ConditionalParentValue">
            <summary>
            For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.
            </summary>
            <value>For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Note.CustomTabId">
            <summary>
            The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
            </summary>
            <value>The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Note.MergeField">
            <summary>
            Gets or Sets MergeField
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Note.Status">
            <summary>
            Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.
            </summary>
            <value>Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Note.ErrorDetails">
            <summary>
            Gets or Sets ErrorDetails
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Model.Note.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Note.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Note.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Note.Equals(DocuSign.eSign.Model.Note)">
            <summary>
            Returns true if Note instances are equal
            </summary>
            <param name="other">Instance of Note to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Note.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.Notification">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Notification.UseAccountDefaults">
            <summary>
            When set to **true**, the account default notification settings are used for the envelope.
            </summary>
            <value>When set to **true**, the account default notification settings are used for the envelope.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Notification.Reminders">
            <summary>
            Gets or Sets Reminders
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Notification.Expirations">
            <summary>
            Gets or Sets Expirations
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Model.Notification.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Notification.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Notification.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Notification.Equals(DocuSign.eSign.Model.Notification)">
            <summary>
            Returns true if Notification instances are equal
            </summary>
            <param name="other">Instance of Notification to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Notification.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.Number">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Number.IsPaymentAmount">
            <summary>
            When set to **true**, sets this as a payment tab. Can only be used with Text, Number, Formula, or List tabs. The value of the tab must be a number.
            </summary>
            <value>When set to **true**, sets this as a payment tab. Can only be used with Text, Number, Formula, or List tabs. The value of the tab must be a number.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Number.Formula">
            <summary>
            The Formula string contains the TabLabel for the reference tabs used in the formula and calculation operators. Each TabLabel must be contained in brackets. \nMaximum Length: 2000 characters.\n\n*Example*: Three tabs (TabLabels: Line1, Line2, and Tax) need to be added together. The formula string would be: \n\n[Line1]+[Line2]+[Tax]
            </summary>
            <value>The Formula string contains the TabLabel for the reference tabs used in the formula and calculation operators. Each TabLabel must be contained in brackets. \nMaximum Length: 2000 characters.\n\n*Example*: Three tabs (TabLabels: Line1, Line2, and Tax) need to be added together. The formula string would be: \n\n[Line1]+[Line2]+[Tax]</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Number.ValidationPattern">
            <summary>
            A regular expressionn used to validate input for the tab.
            </summary>
            <value>A regular expressionn used to validate input for the tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Number.ValidationMessage">
            <summary>
            The message displayed if the custom tab fails input validation (either custom of embedded).
            </summary>
            <value>The message displayed if the custom tab fails input validation (either custom of embedded).</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Number.Shared">
            <summary>
            When set to **true**, this custom tab is shared.
            </summary>
            <value>When set to **true**, this custom tab is shared.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Number.RequireInitialOnSharedChange">
            <summary>
            Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.
            </summary>
            <value>Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Number.SenderRequired">
            <summary>
            When set to **true**, the sender must populate the tab before an envelope can be sent using the template. \n\nThis value tab can only be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired` value of true cannot be deleted from an envelope.
            </summary>
            <value>When set to **true**, the sender must populate the tab before an envelope can be sent using the template. \n\nThis value tab can only be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired` value of true cannot be deleted from an envelope.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Number.RequireAll">
            <summary>
            When set to **true** and shared is true, information must be entered in this field to complete the envelope.
            </summary>
            <value>When set to **true** and shared is true, information must be entered in this field to complete the envelope.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Number.Name">
            <summary>
            Specifies the tool tip text for the tab.
            </summary>
            <value>Specifies the tool tip text for the tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Number.Value">
            <summary>
            Specifies the value of the tab.
            </summary>
            <value>Specifies the value of the tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Number.OriginalValue">
            <summary>
            The initial value of the tab when it was sent to the recipient.
            </summary>
            <value>The initial value of the tab when it was sent to the recipient.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Number.Width">
            <summary>
            Width of the tab in pixels.
            </summary>
            <value>Width of the tab in pixels.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Number.Required">
            <summary>
            When set to **true**, the signer is required to fill out this tab
            </summary>
            <value>When set to **true**, the signer is required to fill out this tab</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Number.Locked">
            <summary>
            When set to **true**, the signer cannot change the data of the custom tab.
            </summary>
            <value>When set to **true**, the signer cannot change the data of the custom tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Number.ConcealValueOnDocument">
            <summary>
            When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
            </summary>
            <value>When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Number.DisableAutoSize">
            <summary>
            When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.
            </summary>
            <value>When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Number.MaxLength">
            <summary>
            An optional value that describes the maximum length of the property when the property is a string.
            </summary>
            <value>An optional value that describes the maximum length of the property when the property is a string.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Number.TabLabel">
            <summary>
            The label string associated with the tab.
            </summary>
            <value>The label string associated with the tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Number.Font">
            <summary>
            The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.
            </summary>
            <value>The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Number.Bold">
            <summary>
            When set to **true**, the information in the tab is bold.
            </summary>
            <value>When set to **true**, the information in the tab is bold.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Number.Italic">
            <summary>
            When set to **true**, the information in the tab is italic.
            </summary>
            <value>When set to **true**, the information in the tab is italic.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Number.Underline">
            <summary>
            When set to **true**, the information in the tab is underlined.
            </summary>
            <value>When set to **true**, the information in the tab is underlined.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Number.FontColor">
            <summary>
            The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.
            </summary>
            <value>The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Number.FontSize">
            <summary>
            The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.
            </summary>
            <value>The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Number.DocumentId">
            <summary>
            Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
            </summary>
            <value>Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Number.RecipientId">
            <summary>
            Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
            </summary>
            <value>Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Number.PageNumber">
            <summary>
            Specifies the page number on which the tab is located.
            </summary>
            <value>Specifies the page number on which the tab is located.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Number.XPosition">
            <summary>
            This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.
            </summary>
            <value>This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Number.YPosition">
            <summary>
            This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.
            </summary>
            <value>This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Number.AnchorString">
            <summary>
            Anchor text information for a radio button.
            </summary>
            <value>Anchor text information for a radio button.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Number.AnchorXOffset">
            <summary>
            Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.
            </summary>
            <value>Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Number.AnchorYOffset">
            <summary>
            Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.
            </summary>
            <value>Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Number.AnchorUnits">
            <summary>
            Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.
            </summary>
            <value>Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Number.AnchorIgnoreIfNotPresent">
            <summary>
            When set to **true**, this tab is ignored if anchorString is not found in the document.
            </summary>
            <value>When set to **true**, this tab is ignored if anchorString is not found in the document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Number.AnchorCaseSensitive">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Number.AnchorMatchWholeWord">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Number.AnchorHorizontalAlignment">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Number.TabId">
            <summary>
            The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].
            </summary>
            <value>The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Number.TemplateLocked">
            <summary>
            When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.
            </summary>
            <value>When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Number.TemplateRequired">
            <summary>
            When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.
            </summary>
            <value>When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Number.ConditionalParentLabel">
            <summary>
            For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.
            </summary>
            <value>For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Number.ConditionalParentValue">
            <summary>
            For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.
            </summary>
            <value>For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Number.CustomTabId">
            <summary>
            The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
            </summary>
            <value>The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Number.MergeField">
            <summary>
            Gets or Sets MergeField
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Number.Status">
            <summary>
            Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.
            </summary>
            <value>Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Number.ErrorDetails">
            <summary>
            Gets or Sets ErrorDetails
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Model.Number.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Number.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Number.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Number.Equals(DocuSign.eSign.Model.Number)">
            <summary>
            Returns true if Number instances are equal
            </summary>
            <param name="other">Instance of Number to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Number.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.OfflineAttributes">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.OfflineAttributes.DeviceName">
            <summary>
            A string containing information about the type of device used for offline signing.
            </summary>
            <value>A string containing information about the type of device used for offline signing.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.OfflineAttributes.DeviceModel">
            <summary>
            A string containing information about the model of the device used for offline signing.
            </summary>
            <value>A string containing information about the model of the device used for offline signing.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.OfflineAttributes.GpsLatitude">
            <summary>
            A string containing the latitude of the device location at the time of signing.
            </summary>
            <value>A string containing the latitude of the device location at the time of signing.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.OfflineAttributes.GpsLongitude">
            <summary>
            A string containing the longitude of the device location at the time of signing.
            </summary>
            <value>A string containing the longitude of the device location at the time of signing.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.OfflineAttributes.AccountEsignId">
            <summary>
            A string with GUID of the account. This can be retrieved with the [ML:Get Disclosure] call.
            </summary>
            <value>A string with GUID of the account. This can be retrieved with the [ML:Get Disclosure] call.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.OfflineAttributes.OfflineSigningHash">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="M:DocuSign.eSign.Model.OfflineAttributes.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.OfflineAttributes.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.OfflineAttributes.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.OfflineAttributes.Equals(DocuSign.eSign.Model.OfflineAttributes)">
            <summary>
            Returns true if OfflineAttributes instances are equal
            </summary>
            <param name="other">Instance of OfflineAttributes to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.OfflineAttributes.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.PageRequest">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.PageRequest.Rotate">
            <summary>
            Sets the direction the page image is rotated. The possible settings are: left or right
            </summary>
            <value>Sets the direction the page image is rotated. The possible settings are: left or right</value>
        </member>
        <member name="P:DocuSign.eSign.Model.PageRequest.Password">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="M:DocuSign.eSign.Model.PageRequest.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.PageRequest.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.PageRequest.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.PageRequest.Equals(DocuSign.eSign.Model.PageRequest)">
            <summary>
            Returns true if PageRequest instances are equal
            </summary>
            <param name="other">Instance of PageRequest to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.PageRequest.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.Radio">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Radio.PageNumber">
            <summary>
            Specifies the page number on which the tab is located.
            </summary>
            <value>Specifies the page number on which the tab is located.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Radio.XPosition">
            <summary>
            This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.
            </summary>
            <value>This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Radio.YPosition">
            <summary>
            This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.
            </summary>
            <value>This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Radio.AnchorString">
            <summary>
            Anchor text information for a radio button.
            </summary>
            <value>Anchor text information for a radio button.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Radio.AnchorXOffset">
            <summary>
            Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.
            </summary>
            <value>Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Radio.AnchorYOffset">
            <summary>
            Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.
            </summary>
            <value>Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Radio.AnchorUnits">
            <summary>
            Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.
            </summary>
            <value>Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Radio.AnchorIgnoreIfNotPresent">
            <summary>
            When set to **true**, this tab is ignored if anchorString is not found in the document.
            </summary>
            <value>When set to **true**, this tab is ignored if anchorString is not found in the document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Radio.AnchorCaseSensitive">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Radio.AnchorMatchWholeWord">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Radio.AnchorHorizontalAlignment">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Radio.Value">
            <summary>
            Specifies the value of the tab.
            </summary>
            <value>Specifies the value of the tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Radio.Selected">
            <summary>
            When set to **true**, the radio button is selected.
            </summary>
            <value>When set to **true**, the radio button is selected.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Radio.TabId">
            <summary>
            The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].
            </summary>
            <value>The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Radio.Required">
            <summary>
            When set to **true**, the signer is required to fill out this tab
            </summary>
            <value>When set to **true**, the signer is required to fill out this tab</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Radio.Locked">
            <summary>
            When set to **true**, the signer cannot change the data of the custom tab.
            </summary>
            <value>When set to **true**, the signer cannot change the data of the custom tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Radio.ErrorDetails">
            <summary>
            Gets or Sets ErrorDetails
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Model.Radio.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Radio.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Radio.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Radio.Equals(DocuSign.eSign.Model.Radio)">
            <summary>
            Returns true if Radio instances are equal
            </summary>
            <param name="other">Instance of Radio to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Radio.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.RadioGroup">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.RadioGroup.DocumentId">
            <summary>
            Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
            </summary>
            <value>Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.RadioGroup.RecipientId">
            <summary>
            Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
            </summary>
            <value>Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.RadioGroup.ConditionalParentLabel">
            <summary>
            For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.
            </summary>
            <value>For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.RadioGroup.ConditionalParentValue">
            <summary>
            For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.
            </summary>
            <value>For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.RadioGroup.GroupName">
            <summary>
            The name of the group.
            </summary>
            <value>The name of the group.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.RadioGroup.Radios">
            <summary>
            Specifies the locations and status for radio buttons that are grouped together.
            </summary>
            <value>Specifies the locations and status for radio buttons that are grouped together.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.RadioGroup.Shared">
            <summary>
            When set to **true**, this custom tab is shared.
            </summary>
            <value>When set to **true**, this custom tab is shared.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.RadioGroup.RequireInitialOnSharedChange">
            <summary>
            Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.
            </summary>
            <value>Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.RadioGroup.RequireAll">
            <summary>
            When set to **true** and shared is true, information must be entered in this field to complete the envelope.
            </summary>
            <value>When set to **true** and shared is true, information must be entered in this field to complete the envelope.</value>
        </member>
        <member name="M:DocuSign.eSign.Model.RadioGroup.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.RadioGroup.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.RadioGroup.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.RadioGroup.Equals(DocuSign.eSign.Model.RadioGroup)">
            <summary>
            Returns true if RadioGroup instances are equal
            </summary>
            <param name="other">Instance of RadioGroup to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.RadioGroup.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.RecipientEmailNotification">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.RecipientEmailNotification.EmailSubject">
            <summary>
            Specifies the subject of the email that is sent to all recipients.\n\nSee [ML:Template Email Subject Merge Fields] for information about adding merge field information to the email subject.
            </summary>
            <value>Specifies the subject of the email that is sent to all recipients.\n\nSee [ML:Template Email Subject Merge Fields] for information about adding merge field information to the email subject.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.RecipientEmailNotification.EmailBody">
            <summary>
            Specifies the email body of the message sent to the recipient. \n\nMaximum length: 10000 characters.
            </summary>
            <value>Specifies the email body of the message sent to the recipient. \n\nMaximum length: 10000 characters.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.RecipientEmailNotification.SupportedLanguage">
            <summary>
            A simple type enumeration of the language used. The supported languages, with the language value shown in parenthesis, are: Arabic (ar), Bahasa Indonesia (id), Bahasa Melayu (ms) Bulgarian (bg), Czech (cs), Chinese Simplified (zh_CN), Chinese Traditional (zh_TW), Croatian (hr), Danish (da), Dutch (nl), English US (en), English UK (en_GB), Estonian (et), Farsi (fa), Finnish (fi), French (fr), French Canada (fr_CA), German (de), Greek (el), Hebrew (he), Hindi (hi), Hungarian (hu), Italian (it), Japanese (ja), Korean (ko), Latvian (lv), Lithuanian (lt), Norwegian (no), Polish (pl), Portuguese (pt), Portuguese Brazil (pt_BR), Romanian (ro),Russian (ru), Serbian (sr), Slovak (sk), Slovenian (sl), Spanish (es),Spanish Latin America (es_MX), Swedish (sv), Thai (th), Turkish (tr), Ukrainian (uk), and Vietnamese (vi).
            </summary>
            <value>A simple type enumeration of the language used. The supported languages, with the language value shown in parenthesis, are: Arabic (ar), Bahasa Indonesia (id), Bahasa Melayu (ms) Bulgarian (bg), Czech (cs), Chinese Simplified (zh_CN), Chinese Traditional (zh_TW), Croatian (hr), Danish (da), Dutch (nl), English US (en), English UK (en_GB), Estonian (et), Farsi (fa), Finnish (fi), French (fr), French Canada (fr_CA), German (de), Greek (el), Hebrew (he), Hindi (hi), Hungarian (hu), Italian (it), Japanese (ja), Korean (ko), Latvian (lv), Lithuanian (lt), Norwegian (no), Polish (pl), Portuguese (pt), Portuguese Brazil (pt_BR), Romanian (ro),Russian (ru), Serbian (sr), Slovak (sk), Slovenian (sl), Spanish (es),Spanish Latin America (es_MX), Swedish (sv), Thai (th), Turkish (tr), Ukrainian (uk), and Vietnamese (vi).</value>
        </member>
        <member name="M:DocuSign.eSign.Model.RecipientEmailNotification.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.RecipientEmailNotification.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.RecipientEmailNotification.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.RecipientEmailNotification.Equals(DocuSign.eSign.Model.RecipientEmailNotification)">
            <summary>
            Returns true if RecipientEmailNotification instances are equal
            </summary>
            <param name="other">Instance of RecipientEmailNotification to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.RecipientEmailNotification.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.RecipientEvent">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.RecipientEvent.RecipientEventStatusCode">
            <summary>
            The recipient status, this can be Sent, Delivered, Completed, Declined, AuthenticationFailed, and AutoResponded.
            </summary>
            <value>The recipient status, this can be Sent, Delivered, Completed, Declined, AuthenticationFailed, and AutoResponded.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.RecipientEvent.IncludeDocuments">
            <summary>
            When set to **true**, the envelope time zone information is included in the message.
            </summary>
            <value>When set to **true**, the envelope time zone information is included in the message.</value>
        </member>
        <member name="M:DocuSign.eSign.Model.RecipientEvent.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.RecipientEvent.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.RecipientEvent.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.RecipientEvent.Equals(DocuSign.eSign.Model.RecipientEvent)">
            <summary>
            Returns true if RecipientEvent instances are equal
            </summary>
            <param name="other">Instance of RecipientEvent to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.RecipientEvent.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.RecipientPhoneAuthentication">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.RecipientPhoneAuthentication.RecipMayProvideNumber">
            <summary>
            Boolean. When set to **true**, the recipient can supply a phone number their choice.
            </summary>
            <value>Boolean. When set to **true**, the recipient can supply a phone number their choice.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.RecipientPhoneAuthentication.ValidateRecipProvidedNumber">
            <summary>
            Reserved.
            </summary>
            <value>Reserved.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.RecipientPhoneAuthentication.RecordVoicePrint">
            <summary>
            Reserved.
            </summary>
            <value>Reserved.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.RecipientPhoneAuthentication.SenderProvidedNumbers">
            <summary>
            An Array containing a list of phone numbers the recipient may use for SMS text authentication.
            </summary>
            <value>An Array containing a list of phone numbers the recipient may use for SMS text authentication.</value>
        </member>
        <member name="M:DocuSign.eSign.Model.RecipientPhoneAuthentication.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.RecipientPhoneAuthentication.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.RecipientPhoneAuthentication.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.RecipientPhoneAuthentication.Equals(DocuSign.eSign.Model.RecipientPhoneAuthentication)">
            <summary>
            Returns true if RecipientPhoneAuthentication instances are equal
            </summary>
            <param name="other">Instance of RecipientPhoneAuthentication to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.RecipientPhoneAuthentication.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.Recipients">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Recipients.Signers">
            <summary>
            A complex type containing information about the Signer recipient.
            </summary>
            <value>A complex type containing information about the Signer recipient.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Recipients.Agents">
            <summary>
            A complex type defining the management and access rights of a recipient assigned assigned as an agent on the document.
            </summary>
            <value>A complex type defining the management and access rights of a recipient assigned assigned as an agent on the document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Recipients.Editors">
            <summary>
            A complex type defining the management and access rights of a recipient assigned assigned as an editor on the document.
            </summary>
            <value>A complex type defining the management and access rights of a recipient assigned assigned as an editor on the document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Recipients.Intermediaries">
            <summary>
            Identifies a recipient that can, but is not required to, add name and email information for recipients at the same or subsequent level in the routing order (until subsequent Agents, Editors or Intermediaries recipient types are added).
            </summary>
            <value>Identifies a recipient that can, but is not required to, add name and email information for recipients at the same or subsequent level in the routing order (until subsequent Agents, Editors or Intermediaries recipient types are added).</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Recipients.CarbonCopies">
            <summary>
            A complex type containing information about recipients who should receive a copy of the envelope, but does not need to sign it.
            </summary>
            <value>A complex type containing information about recipients who should receive a copy of the envelope, but does not need to sign it.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Recipients.CertifiedDeliveries">
            <summary>
            A complex type containing information on a recipient the must receive the completed documents for the envelope to be completed, but the recipient does not need to sign, initial, date, or add information to any of the documents.
            </summary>
            <value>A complex type containing information on a recipient the must receive the completed documents for the envelope to be completed, but the recipient does not need to sign, initial, date, or add information to any of the documents.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Recipients.InPersonSigners">
            <summary>
            Specifies a signer that is in the same physical location as a DocuSign user who will act as a Signing Host for the transaction. The recipient added is the Signing Host and new separate Signer Name field appears after Sign in person is selected.
            </summary>
            <value>Specifies a signer that is in the same physical location as a DocuSign user who will act as a Signing Host for the transaction. The recipient added is the Signing Host and new separate Signer Name field appears after Sign in person is selected.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Recipients.RecipientCount">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Recipients.CurrentRoutingOrder">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Recipients.ErrorDetails">
            <summary>
            Gets or Sets ErrorDetails
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Model.Recipients.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Recipients.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Recipients.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Recipients.Equals(DocuSign.eSign.Model.Recipients)">
            <summary>
            Returns true if Recipients instances are equal
            </summary>
            <param name="other">Instance of Recipients to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Recipients.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.RecipientSAMLAuthentication">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.RecipientSAMLAuthentication.SamlAssertionAttributes">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="M:DocuSign.eSign.Model.RecipientSAMLAuthentication.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.RecipientSAMLAuthentication.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.RecipientSAMLAuthentication.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.RecipientSAMLAuthentication.Equals(DocuSign.eSign.Model.RecipientSAMLAuthentication)">
            <summary>
            Returns true if RecipientSAMLAuthentication instances are equal
            </summary>
            <param name="other">Instance of RecipientSAMLAuthentication to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.RecipientSAMLAuthentication.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.RecipientSignatureInformation">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.RecipientSignatureInformation.SignatureName">
            <summary>
            Specifies the user signature name.
            </summary>
            <value>Specifies the user signature name.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.RecipientSignatureInformation.SignatureInitials">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.RecipientSignatureInformation.FontStyle">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="M:DocuSign.eSign.Model.RecipientSignatureInformation.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.RecipientSignatureInformation.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.RecipientSignatureInformation.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.RecipientSignatureInformation.Equals(DocuSign.eSign.Model.RecipientSignatureInformation)">
            <summary>
            Returns true if RecipientSignatureInformation instances are equal
            </summary>
            <param name="other">Instance of RecipientSignatureInformation to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.RecipientSignatureInformation.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.RecipientSMSAuthentication">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.RecipientSMSAuthentication.SenderProvidedNumbers">
            <summary>
            An Array containing a list of phone numbers the recipient may use for SMS text authentication.
            </summary>
            <value>An Array containing a list of phone numbers the recipient may use for SMS text authentication.</value>
        </member>
        <member name="M:DocuSign.eSign.Model.RecipientSMSAuthentication.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.RecipientSMSAuthentication.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.RecipientSMSAuthentication.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.RecipientSMSAuthentication.Equals(DocuSign.eSign.Model.RecipientSMSAuthentication)">
            <summary>
            Returns true if RecipientSMSAuthentication instances are equal
            </summary>
            <param name="other">Instance of RecipientSMSAuthentication to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.RecipientSMSAuthentication.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.RecipientsUpdateSummary">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.RecipientsUpdateSummary.RecipientUpdateResults">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="M:DocuSign.eSign.Model.RecipientsUpdateSummary.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.RecipientsUpdateSummary.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.RecipientsUpdateSummary.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.RecipientsUpdateSummary.Equals(DocuSign.eSign.Model.RecipientsUpdateSummary)">
            <summary>
            Returns true if RecipientsUpdateSummary instances are equal
            </summary>
            <param name="other">Instance of RecipientsUpdateSummary to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.RecipientsUpdateSummary.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.RecipientUpdateResponse">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.RecipientUpdateResponse.RecipientId">
            <summary>
            Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
            </summary>
            <value>Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.RecipientUpdateResponse.Tabs">
            <summary>
            Gets or Sets Tabs
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.RecipientUpdateResponse.ErrorDetails">
            <summary>
            Gets or Sets ErrorDetails
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Model.RecipientUpdateResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.RecipientUpdateResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.RecipientUpdateResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.RecipientUpdateResponse.Equals(DocuSign.eSign.Model.RecipientUpdateResponse)">
            <summary>
            Returns true if RecipientUpdateResponse instances are equal
            </summary>
            <param name="other">Instance of RecipientUpdateResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.RecipientUpdateResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.RecipientViewRequest">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.RecipientViewRequest.ClientUserId">
            <summary>
            A sender created value that shows the recipient is embedded (captive). \n\nMaximum length: 100 characters.
            </summary>
            <value>A sender created value that shows the recipient is embedded (captive). \n\nMaximum length: 100 characters.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.RecipientViewRequest.UserId">
            <summary>
            Specifies the user ID of the recipient. You can use with user ID or email and user name to identify the recipient. If user ID is used and a client user ID is provided, the value in the `userId` property must match a recipient ID (which can be retrieved with a GET recipients call) for the envelope. If a user ID is used and a clientUser ID is not provided, the user ID match the user ID of the authenticating user.
            </summary>
            <value>Specifies the user ID of the recipient. You can use with user ID or email and user name to identify the recipient. If user ID is used and a client user ID is provided, the value in the `userId` property must match a recipient ID (which can be retrieved with a GET recipients call) for the envelope. If a user ID is used and a clientUser ID is not provided, the user ID match the user ID of the authenticating user.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.RecipientViewRequest.UserName">
            <summary>
            Specifies the username of the recipient. You can use either email and userName or userId to identify the recipient.
            </summary>
            <value>Specifies the username of the recipient. You can use either email and userName or userId to identify the recipient.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.RecipientViewRequest.Email">
            <summary>
            Specifies the email of the recipient. You can use either email and userName or userId to identify the recipient.
            </summary>
            <value>Specifies the email of the recipient. You can use either email and userName or userId to identify the recipient.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.RecipientViewRequest.RecipientId">
            <summary>
            Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
            </summary>
            <value>Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.RecipientViewRequest.ReturnUrl">
            <summary>
            The URL the recipient is directed to on certain events. DocuSign sends returns to the URL and includes an event parameter that can be used to redirect the recipient to another location. The possible event parameters returned are: \n\n* cancel (recipient cancels signing)\n* decline (recipient declines signing)\n* exception (exception occurs)\n* fax_pending (recipient has fax pending)\n* check); session_timeout (session times out)\n* completes signing)\n* expires)\n* viewing_complete (recipient completes viewing the envelope)\n\n## Important: You must include HTTPS:// in the URL or the redirect might be blocked by some browsers.
            </summary>
            <value>The URL the recipient is directed to on certain events. DocuSign sends returns to the URL and includes an event parameter that can be used to redirect the recipient to another location. The possible event parameters returned are: \n\n* cancel (recipient cancels signing)\n* decline (recipient declines signing)\n* exception (exception occurs)\n* fax_pending (recipient has fax pending)\n* check); session_timeout (session times out)\n* completes signing)\n* expires)\n* viewing_complete (recipient completes viewing the envelope)\n\n## Important: You must include HTTPS:// in the URL or the redirect might be blocked by some browsers.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.RecipientViewRequest.PingUrl">
            <summary>
            A client Url to be pinged by the DocuSign Signing experience to indicate to the client that Signing is active. An HTTP Get is executed against the client. The response from the client is ignored. The intent is for the client to reset it's session timer when the request is received.
            </summary>
            <value>A client Url to be pinged by the DocuSign Signing experience to indicate to the client that Signing is active. An HTTP Get is executed against the client. The response from the client is ignored. The intent is for the client to reset it's session timer when the request is received.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.RecipientViewRequest.PingFrequency">
            <summary>
            Only used if pingUrl is specified. This is the interval, in seconds, between pings on the pingUrl.  The default is 300 seconds. Valid values are 60-1200 seconds.
            </summary>
            <value>Only used if pingUrl is specified. This is the interval, in seconds, between pings on the pingUrl.  The default is 300 seconds. Valid values are 60-1200 seconds.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.RecipientViewRequest.AuthenticationMethod">
            <summary>
            A sender created value that indicates the convention used to authenticate the signer. This information is included in the Certificate of Completion.
            </summary>
            <value>A sender created value that indicates the convention used to authenticate the signer. This information is included in the Certificate of Completion.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.RecipientViewRequest.AssertionId">
            <summary>
            A unique identifier of the authentication event executed by the client application.
            </summary>
            <value>A unique identifier of the authentication event executed by the client application.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.RecipientViewRequest.AuthenticationInstant">
            <summary>
            A sender generated value that indicates the date/time that the signer was authenticated.
            </summary>
            <value>A sender generated value that indicates the date/time that the signer was authenticated.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.RecipientViewRequest.SecurityDomain">
            <summary>
            The domain in which the user authenticated.
            </summary>
            <value>The domain in which the user authenticated.</value>
        </member>
        <member name="M:DocuSign.eSign.Model.RecipientViewRequest.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.RecipientViewRequest.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.RecipientViewRequest.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.RecipientViewRequest.Equals(DocuSign.eSign.Model.RecipientViewRequest)">
            <summary>
            Returns true if RecipientViewRequest instances are equal
            </summary>
            <param name="other">Instance of RecipientViewRequest to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.RecipientViewRequest.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.Reminders">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Reminders.ReminderEnabled">
            <summary>
            When set to **true**, the envelope expires (is no longer available for signing) in the set number of days. If false, the account default setting is used. If the account does not have an expiration setting, the DocuSign default value of 120 days is used.
            </summary>
            <value>When set to **true**, the envelope expires (is no longer available for signing) in the set number of days. If false, the account default setting is used. If the account does not have an expiration setting, the DocuSign default value of 120 days is used.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Reminders.ReminderDelay">
            <summary>
            An interger that sets the number of days after the recipient receives the envelope that reminder emails are sent to the recipient.
            </summary>
            <value>An interger that sets the number of days after the recipient receives the envelope that reminder emails are sent to the recipient.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Reminders.ReminderFrequency">
            <summary>
            An interger that sets the interval, in days, between reminder emails.
            </summary>
            <value>An interger that sets the interval, in days, between reminder emails.</value>
        </member>
        <member name="M:DocuSign.eSign.Model.Reminders.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Reminders.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Reminders.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Reminders.Equals(DocuSign.eSign.Model.Reminders)">
            <summary>
            Returns true if Reminders instances are equal
            </summary>
            <param name="other">Instance of Reminders to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Reminders.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.ResourceInformation">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.ResourceInformation.Resources">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="M:DocuSign.eSign.Model.ResourceInformation.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.ResourceInformation.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.ResourceInformation.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.ResourceInformation.Equals(DocuSign.eSign.Model.ResourceInformation)">
            <summary>
            Returns true if ResourceInformation instances are equal
            </summary>
            <param name="other">Instance of ResourceInformation to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.ResourceInformation.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.ReturnUrlRequest">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.ReturnUrlRequest.ReturnUrl">
            <summary>
            Identifies the return point after sending the envelope. DocuSign returns to the URL and includes an event parameter that can be used to redirect the recipient to another location. The possible event parameters returned are: \n\n* send (user sends the envelope)\n* save (user saves the envelope)\n* cancel (user cancels the sending transaction. No envelopeId is returned in this case.)\n* error (there is an error when performing the send)\n* sessionEnd (the sending session ends before the user completes another action).
            </summary>
            <value>Identifies the return point after sending the envelope. DocuSign returns to the URL and includes an event parameter that can be used to redirect the recipient to another location. The possible event parameters returned are: \n\n* send (user sends the envelope)\n* save (user saves the envelope)\n* cancel (user cancels the sending transaction. No envelopeId is returned in this case.)\n* error (there is an error when performing the send)\n* sessionEnd (the sending session ends before the user completes another action).</value>
        </member>
        <member name="M:DocuSign.eSign.Model.ReturnUrlRequest.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.ReturnUrlRequest.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.ReturnUrlRequest.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.ReturnUrlRequest.Equals(DocuSign.eSign.Model.ReturnUrlRequest)">
            <summary>
            Returns true if ReturnUrlRequest instances are equal
            </summary>
            <param name="other">Instance of ReturnUrlRequest to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.ReturnUrlRequest.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.SamlAssertionAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.SamlAssertionAttribute.Name">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.SamlAssertionAttribute.Value">
            <summary>
            The value associated with the named SAML assertion attribute
            </summary>
            <value>The value associated with the named SAML assertion attribute</value>
        </member>
        <member name="P:DocuSign.eSign.Model.SamlAssertionAttribute.ErrorDetails">
            <summary>
            Gets or Sets ErrorDetails
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Model.SamlAssertionAttribute.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.SamlAssertionAttribute.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.SamlAssertionAttribute.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.SamlAssertionAttribute.Equals(DocuSign.eSign.Model.SamlAssertionAttribute)">
            <summary>
            Returns true if SamlAssertionAttribute instances are equal
            </summary>
            <param name="other">Instance of SamlAssertionAttribute to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.SamlAssertionAttribute.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.SenderEmailNotifications">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.SenderEmailNotifications.EnvelopeComplete">
            <summary>
            When set to **true**, the user receives notification that the envelope has been completed.
            </summary>
            <value>When set to **true**, the user receives notification that the envelope has been completed.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.SenderEmailNotifications.ChangedSigner">
            <summary>
            When set to **true**, the sender receives notification if the signer changes.
            </summary>
            <value>When set to **true**, the sender receives notification if the signer changes.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.SenderEmailNotifications.SenderEnvelopeDeclined">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.SenderEmailNotifications.WithdrawnConsent">
            <summary>
            When set to **true**, the user receives notification if consent is withdrawn.
            </summary>
            <value>When set to **true**, the user receives notification if consent is withdrawn.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.SenderEmailNotifications.RecipientViewed">
            <summary>
            When set to **true**, the sender receives notification that the recipient viewed the enveloper.
            </summary>
            <value>When set to **true**, the sender receives notification that the recipient viewed the enveloper.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.SenderEmailNotifications.DeliveryFailed">
            <summary>
            When set to **true**, the sender receives notification if the delivery of the envelope fails.
            </summary>
            <value>When set to **true**, the sender receives notification if the delivery of the envelope fails.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.SenderEmailNotifications.OfflineSigningFailed">
            <summary>
            When set to **true**, the user receives notification if the offline signing failed.
            </summary>
            <value>When set to **true**, the user receives notification if the offline signing failed.</value>
        </member>
        <member name="M:DocuSign.eSign.Model.SenderEmailNotifications.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.SenderEmailNotifications.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.SenderEmailNotifications.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.SenderEmailNotifications.Equals(DocuSign.eSign.Model.SenderEmailNotifications)">
            <summary>
            Returns true if SenderEmailNotifications instances are equal
            </summary>
            <param name="other">Instance of SenderEmailNotifications to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.SenderEmailNotifications.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.ServerTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.ServerTemplate.Sequence">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.ServerTemplate.TemplateId">
            <summary>
            The unique identifier of the template. If this is not provided, DocuSign will generate a value.
            </summary>
            <value>The unique identifier of the template. If this is not provided, DocuSign will generate a value.</value>
        </member>
        <member name="M:DocuSign.eSign.Model.ServerTemplate.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.ServerTemplate.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.ServerTemplate.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.ServerTemplate.Equals(DocuSign.eSign.Model.ServerTemplate)">
            <summary>
            Returns true if ServerTemplate instances are equal
            </summary>
            <param name="other">Instance of ServerTemplate to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.ServerTemplate.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.ServiceInformation">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.ServiceInformation.ServiceVersions">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.ServiceInformation.BuildVersion">
            <summary>
            Reserved: TBD
            </summary>
            <value>Reserved: TBD</value>
        </member>
        <member name="P:DocuSign.eSign.Model.ServiceInformation.BuildBranch">
            <summary>
            Reserved: TBD
            </summary>
            <value>Reserved: TBD</value>
        </member>
        <member name="P:DocuSign.eSign.Model.ServiceInformation.BuildSHA">
            <summary>
            Reserved: TBD
            </summary>
            <value>Reserved: TBD</value>
        </member>
        <member name="P:DocuSign.eSign.Model.ServiceInformation.BuildBranchDeployedDateTime">
            <summary>
            Reserved: TBD
            </summary>
            <value>Reserved: TBD</value>
        </member>
        <member name="P:DocuSign.eSign.Model.ServiceInformation.LinkedSites">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="M:DocuSign.eSign.Model.ServiceInformation.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.ServiceInformation.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.ServiceInformation.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.ServiceInformation.Equals(DocuSign.eSign.Model.ServiceInformation)">
            <summary>
            Returns true if ServiceInformation instances are equal
            </summary>
            <param name="other">Instance of ServiceInformation to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.ServiceInformation.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.ServiceVersion">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.ServiceVersion.Version">
            <summary>
            The version of the rest API.
            </summary>
            <value>The version of the rest API.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.ServiceVersion.VersionUrl">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="M:DocuSign.eSign.Model.ServiceVersion.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.ServiceVersion.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.ServiceVersion.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.ServiceVersion.Equals(DocuSign.eSign.Model.ServiceVersion)">
            <summary>
            Returns true if ServiceVersion instances are equal
            </summary>
            <param name="other">Instance of ServiceVersion to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.ServiceVersion.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.SharedItem">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.SharedItem.User">
            <summary>
            Gets or Sets User
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.SharedItem.Shared">
            <summary>
            When set to **true**, this custom tab is shared.
            </summary>
            <value>When set to **true**, this custom tab is shared.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.SharedItem.ErrorDetails">
            <summary>
            Gets or Sets ErrorDetails
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Model.SharedItem.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.SharedItem.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.SharedItem.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.SharedItem.Equals(DocuSign.eSign.Model.SharedItem)">
            <summary>
            Returns true if SharedItem instances are equal
            </summary>
            <param name="other">Instance of SharedItem to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.SharedItem.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.Signer">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Signer.SignatureInfo">
            <summary>
            Gets or Sets SignatureInfo
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Signer.DefaultRecipient">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Signer.Tabs">
            <summary>
            Gets or Sets Tabs
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Signer.SignInEachLocation">
            <summary>
            When set to **true**, specifies that the signer must sign in all locations.
            </summary>
            <value>When set to **true**, specifies that the signer must sign in all locations.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Signer.OfflineAttributes">
            <summary>
            Gets or Sets OfflineAttributes
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Signer.RequireSignerCertificate">
            <summary>
            Sets the type of signer certificate required for signing. If left blank, no certificate is required. Only one type of certificate can be set for a signer. The possible values are:\n\n* docusign_express – Requires a DocuSign Express certificate.\n* safe – Requires a SAFE-BioPharma certificate.\n* open_trust – Requires an OpenTrust certificate. \n\n**Important**: There are certain rules and restrictions that must be followed when requiring OpenTrust digital signatures. See [ML:OpenTrust Rules and Restrictions] for more information.
            </summary>
            <value>Sets the type of signer certificate required for signing. If left blank, no certificate is required. Only one type of certificate can be set for a signer. The possible values are:\n\n* docusign_express – Requires a DocuSign Express certificate.\n* safe – Requires a SAFE-BioPharma certificate.\n* open_trust – Requires an OpenTrust certificate. \n\n**Important**: There are certain rules and restrictions that must be followed when requiring OpenTrust digital signatures. See [ML:OpenTrust Rules and Restrictions] for more information.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Signer.RequireSignOnPaper">
            <summary>
            When set to **true**, the signer must print, sign, and upload or fax the signed documents to DocuSign.
            </summary>
            <value>When set to **true**, the signer must print, sign, and upload or fax the signed documents to DocuSign.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Signer.CanSignOffline">
            <summary>
            When set to **true**, specifies that the signer can perform the signing ceremony offline.
            </summary>
            <value>When set to **true**, specifies that the signer can perform the signing ceremony offline.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Signer.IsBulkRecipient">
            <summary>
            When set to **true**, this signer is a bulk recipient and the recipient information is contained in a bulk recipient file. \n\nNote that when this is true the email and name for the recipient becomes bulk@recipient.com and \"Bulk Recipient\". These fields can not be changed for the bulk recipient.
            </summary>
            <value>When set to **true**, this signer is a bulk recipient and the recipient information is contained in a bulk recipient file. \n\nNote that when this is true the email and name for the recipient becomes bulk@recipient.com and \"Bulk Recipient\". These fields can not be changed for the bulk recipient.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Signer.BulkRecipientsUri">
            <summary>
            Contains a URI for an endpoint that allows you to easily retrieve bulk recipient information.
            </summary>
            <value>Contains a URI for an endpoint that allows you to easily retrieve bulk recipient information.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Signer.RecipientSuppliesTabs">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Signer.ExcludedDocuments">
            <summary>
            Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.\n\nWhen enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.
            </summary>
            <value>Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.\n\nWhen enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Signer.Name">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Signer.Email">
            <summary>
            Email id of the recipient. Notification of the document to sign is sent to this email id. \n\nMaximum length: 100 characters.
            </summary>
            <value>Email id of the recipient. Notification of the document to sign is sent to this email id. \n\nMaximum length: 100 characters.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Signer.EmailRecipientPostSigningURL">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Signer.SigningGroupId">
            <summary>
            When set to **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab ( instead of adopting a signature/initial style or only drawing a signature/initial once).
            </summary>
            <value>When set to **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab ( instead of adopting a signature/initial style or only drawing a signature/initial once).</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Signer.SigningGroupName">
            <summary>
            The display name for the signing group. \n\nMaximum Length: 100 characters.
            </summary>
            <value>The display name for the signing group. \n\nMaximum Length: 100 characters.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Signer.SigningGroupUsers">
            <summary>
            A complex type that contains information about users in the signing group.
            </summary>
            <value>A complex type that contains information about users in the signing group.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Signer.RecipientId">
            <summary>
            Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
            </summary>
            <value>Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Signer.RecipientIdGuid">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Signer.AccessCode">
            <summary>
            If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and must conform to account’s access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then access code is not required.
            </summary>
            <value>If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and must conform to account’s access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then access code is not required.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Signer.AddAccessCodeToEmail">
            <summary>
            This Optional attribute indicates that the access code will be added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient.
            </summary>
            <value>This Optional attribute indicates that the access code will be added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Signer.RequireIdLookup">
            <summary>
            When set to **true**, the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity.
            </summary>
            <value>When set to **true**, the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Signer.IdCheckConfigurationName">
            <summary>
            Specifies authentication check by name. The names used here must be the same as the authentication type names used by the account (these name can also be found in the web console sending interface in the Identify list for a recipient,) This overrides any default authentication setting.\n\n*Example*: Your account has ID Check and SMS Authentication available and in the web console Identify list these appear as 'ID Check $' and 'SMS Auth $'. To use ID check in an envelope, the idCheckConfigurationName should be 'ID Check '. If you wanted to use SMS, it would be 'SMS Auth $' and you would need to add you would need to add phone number information to the `smsAuthentication` node.
            </summary>
            <value>Specifies authentication check by name. The names used here must be the same as the authentication type names used by the account (these name can also be found in the web console sending interface in the Identify list for a recipient,) This overrides any default authentication setting.\n\n*Example*: Your account has ID Check and SMS Authentication available and in the web console Identify list these appear as 'ID Check $' and 'SMS Auth $'. To use ID check in an envelope, the idCheckConfigurationName should be 'ID Check '. If you wanted to use SMS, it would be 'SMS Auth $' and you would need to add you would need to add phone number information to the `smsAuthentication` node.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Signer.SocialAuthentications">
            <summary>
            Lists the social ID type that can be used for recipient authentication.
            </summary>
            <value>Lists the social ID type that can be used for recipient authentication.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Signer.PhoneAuthentication">
            <summary>
            Gets or Sets PhoneAuthentication
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Signer.SamlAuthentication">
            <summary>
            Gets or Sets SamlAuthentication
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Signer.SmsAuthentication">
            <summary>
            Gets or Sets SmsAuthentication
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Signer.UserId">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Signer.ClientUserId">
            <summary>
            Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Note that if the `ClientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true**, an error is generated on sending.ng. \n\nMaximum length: 100 characters.
            </summary>
            <value>Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Note that if the `ClientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true**, an error is generated on sending.ng. \n\nMaximum length: 100 characters.</value>
        </member>
        <!-- Badly formed XML comment ignored for member "P:DocuSign.eSign.Model.Signer.EmbeddedRecipientStartURL" -->
        <member name="P:DocuSign.eSign.Model.Signer.CustomFields">
            <summary>
            An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.
            </summary>
            <value>An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Signer.RoutingOrder">
            <summary>
            Specifies the routing order of the recipient in the envelope.
            </summary>
            <value>Specifies the routing order of the recipient in the envelope.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Signer.IdCheckInformationInput">
            <summary>
            Gets or Sets IdCheckInformationInput
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Signer.RecipientAttachments">
            <summary>
            Reserved:
            </summary>
            <value>Reserved:</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Signer.Note">
            <summary>
            Specifies a note that is unique to this recipient. This note is sent to the recipient via the signing email. The note displays in the signing UI near the upper left corner of the document on the signing screen.\n\nMaximum Length: 1000 characters.
            </summary>
            <value>Specifies a note that is unique to this recipient. This note is sent to the recipient via the signing email. The note displays in the signing UI near the upper left corner of the document on the signing screen.\n\nMaximum Length: 1000 characters.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Signer.RoleName">
            <summary>
            Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.
            </summary>
            <value>Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Signer.Status">
            <summary>
            Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.
            </summary>
            <value>Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Signer.SignedDateTime">
            <summary>
            Reserved: For DocuSign use only.
            </summary>
            <value>Reserved: For DocuSign use only.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Signer.DeliveredDateTime">
            <summary>
            Reserved: For DocuSign use only.
            </summary>
            <value>Reserved: For DocuSign use only.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Signer.DeclinedDateTime">
            <summary>
            The date and time the recipient declined the document.
            </summary>
            <value>The date and time the recipient declined the document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Signer.SentDateTime">
            <summary>
            The date and time the envelope was sent.
            </summary>
            <value>The date and time the envelope was sent.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Signer.DeclinedReason">
            <summary>
            The reason the recipient declined the document.
            </summary>
            <value>The reason the recipient declined the document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Signer.DeliveryMethod">
            <summary>
            Reserved: For DocuSign use only.
            </summary>
            <value>Reserved: For DocuSign use only.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Signer.FaxNumber">
            <summary>
            Reserved:
            </summary>
            <value>Reserved:</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Signer.TemplateLocked">
            <summary>
            When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.
            </summary>
            <value>When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Signer.TemplateRequired">
            <summary>
            When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.
            </summary>
            <value>When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Signer.EmailNotification">
            <summary>
            Gets or Sets EmailNotification
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Signer.InheritEmailNotificationConfiguration">
            <summary>
            When set to **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account.
            </summary>
            <value>When set to **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Signer.ErrorDetails">
            <summary>
            Gets or Sets ErrorDetails
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Signer.RecipientAuthenticationStatus">
            <summary>
            Gets or Sets RecipientAuthenticationStatus
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Signer.TotalTabCount">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="M:DocuSign.eSign.Model.Signer.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Signer.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Signer.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Signer.Equals(DocuSign.eSign.Model.Signer)">
            <summary>
            Returns true if Signer instances are equal
            </summary>
            <param name="other">Instance of Signer to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Signer.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.SignerAttachment">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.SignerAttachment.Name">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.SignerAttachment.TabLabel">
            <summary>
            The label string associated with the tab.
            </summary>
            <value>The label string associated with the tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.SignerAttachment.ScaleValue">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.SignerAttachment.Optional">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.SignerAttachment.DocumentId">
            <summary>
            Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
            </summary>
            <value>Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.SignerAttachment.RecipientId">
            <summary>
            Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
            </summary>
            <value>Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.SignerAttachment.PageNumber">
            <summary>
            Specifies the page number on which the tab is located.
            </summary>
            <value>Specifies the page number on which the tab is located.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.SignerAttachment.XPosition">
            <summary>
            This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.
            </summary>
            <value>This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.SignerAttachment.YPosition">
            <summary>
            This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.
            </summary>
            <value>This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.SignerAttachment.AnchorString">
            <summary>
            Anchor text information for a radio button.
            </summary>
            <value>Anchor text information for a radio button.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.SignerAttachment.AnchorXOffset">
            <summary>
            Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.
            </summary>
            <value>Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.SignerAttachment.AnchorYOffset">
            <summary>
            Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.
            </summary>
            <value>Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.SignerAttachment.AnchorUnits">
            <summary>
            Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.
            </summary>
            <value>Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.SignerAttachment.AnchorIgnoreIfNotPresent">
            <summary>
            When set to **true**, this tab is ignored if anchorString is not found in the document.
            </summary>
            <value>When set to **true**, this tab is ignored if anchorString is not found in the document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.SignerAttachment.AnchorCaseSensitive">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.SignerAttachment.AnchorMatchWholeWord">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.SignerAttachment.AnchorHorizontalAlignment">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.SignerAttachment.TabId">
            <summary>
            The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].
            </summary>
            <value>The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].</value>
        </member>
        <member name="P:DocuSign.eSign.Model.SignerAttachment.TemplateLocked">
            <summary>
            When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.
            </summary>
            <value>When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.SignerAttachment.TemplateRequired">
            <summary>
            When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.
            </summary>
            <value>When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.SignerAttachment.ConditionalParentLabel">
            <summary>
            For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.
            </summary>
            <value>For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.SignerAttachment.ConditionalParentValue">
            <summary>
            For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.
            </summary>
            <value>For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.SignerAttachment.CustomTabId">
            <summary>
            The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
            </summary>
            <value>The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.SignerAttachment.MergeField">
            <summary>
            Gets or Sets MergeField
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.SignerAttachment.Status">
            <summary>
            Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.
            </summary>
            <value>Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.SignerAttachment.ErrorDetails">
            <summary>
            Gets or Sets ErrorDetails
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Model.SignerAttachment.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.SignerAttachment.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.SignerAttachment.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.SignerAttachment.Equals(DocuSign.eSign.Model.SignerAttachment)">
            <summary>
            Returns true if SignerAttachment instances are equal
            </summary>
            <param name="other">Instance of SignerAttachment to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.SignerAttachment.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.SignerEmailNotifications">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.SignerEmailNotifications.EnvelopeActivation">
            <summary>
            When set to **true**, the user receives notification that the envelope has been activated.
            </summary>
            <value>When set to **true**, the user receives notification that the envelope has been activated.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.SignerEmailNotifications.EnvelopeComplete">
            <summary>
            When set to **true**, the user receives notification that the envelope has been completed.
            </summary>
            <value>When set to **true**, the user receives notification that the envelope has been completed.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.SignerEmailNotifications.CarbonCopyNotification">
            <summary>
            When set to **true**, the user receives notifications of carbon copy deliveries.
            </summary>
            <value>When set to **true**, the user receives notifications of carbon copy deliveries.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.SignerEmailNotifications.CertifiedDeliveryNotification">
            <summary>
            When set to **true**, the user receives notifications of certified deliveries.
            </summary>
            <value>When set to **true**, the user receives notifications of certified deliveries.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.SignerEmailNotifications.EnvelopeDeclined">
            <summary>
            When set to **true**, the user receives notification that the envelope has been declined.
            </summary>
            <value>When set to **true**, the user receives notification that the envelope has been declined.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.SignerEmailNotifications.EnvelopeVoided">
            <summary>
            When set to **true**, the user receives notification that the envelope has been voided.
            </summary>
            <value>When set to **true**, the user receives notification that the envelope has been voided.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.SignerEmailNotifications.EnvelopeCorrected">
            <summary>
            When set to **true**, the user receives notification that the envelope has been corrected.
            </summary>
            <value>When set to **true**, the user receives notification that the envelope has been corrected.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.SignerEmailNotifications.ReassignedSigner">
            <summary>
            When set to **true**, the user receives notification that the envelope has been reassigned.
            </summary>
            <value>When set to **true**, the user receives notification that the envelope has been reassigned.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.SignerEmailNotifications.PurgeDocuments">
            <summary>
            When set to **true**, the user receives notification of document purges.
            </summary>
            <value>When set to **true**, the user receives notification of document purges.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.SignerEmailNotifications.FaxReceived">
            <summary>
            Reserved:
            </summary>
            <value>Reserved:</value>
        </member>
        <member name="P:DocuSign.eSign.Model.SignerEmailNotifications.DocumentMarkupActivation">
            <summary>
            When set to **true**, the user receives notification that document markup has been activated.
            </summary>
            <value>When set to **true**, the user receives notification that document markup has been activated.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.SignerEmailNotifications.AgentNotification">
            <summary>
            When set to **true**, the user receives agent notification emails.
            </summary>
            <value>When set to **true**, the user receives agent notification emails.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.SignerEmailNotifications.OfflineSigningFailed">
            <summary>
            When set to **true**, the user receives notification if the offline signing failed.
            </summary>
            <value>When set to **true**, the user receives notification if the offline signing failed.</value>
        </member>
        <member name="M:DocuSign.eSign.Model.SignerEmailNotifications.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.SignerEmailNotifications.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.SignerEmailNotifications.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.SignerEmailNotifications.Equals(DocuSign.eSign.Model.SignerEmailNotifications)">
            <summary>
            Returns true if SignerEmailNotifications instances are equal
            </summary>
            <param name="other">Instance of SignerEmailNotifications to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.SignerEmailNotifications.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.SignHere">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.SignHere.Name">
            <summary>
            Specifies the tool tip text for the tab.
            </summary>
            <value>Specifies the tool tip text for the tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.SignHere.TabLabel">
            <summary>
            The label string associated with the tab.
            </summary>
            <value>The label string associated with the tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.SignHere.ScaleValue">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.SignHere.Optional">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.SignHere.DocumentId">
            <summary>
            Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
            </summary>
            <value>Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.SignHere.RecipientId">
            <summary>
            Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
            </summary>
            <value>Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.SignHere.PageNumber">
            <summary>
            Specifies the page number on which the tab is located.
            </summary>
            <value>Specifies the page number on which the tab is located.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.SignHere.XPosition">
            <summary>
            This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.
            </summary>
            <value>This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.SignHere.YPosition">
            <summary>
            This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.
            </summary>
            <value>This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.SignHere.AnchorString">
            <summary>
            Anchor text information for a radio button.
            </summary>
            <value>Anchor text information for a radio button.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.SignHere.AnchorXOffset">
            <summary>
            Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.
            </summary>
            <value>Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.SignHere.AnchorYOffset">
            <summary>
            Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.
            </summary>
            <value>Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.SignHere.AnchorUnits">
            <summary>
            Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.
            </summary>
            <value>Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.SignHere.AnchorIgnoreIfNotPresent">
            <summary>
            When set to **true**, this tab is ignored if anchorString is not found in the document.
            </summary>
            <value>When set to **true**, this tab is ignored if anchorString is not found in the document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.SignHere.AnchorCaseSensitive">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.SignHere.AnchorMatchWholeWord">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.SignHere.AnchorHorizontalAlignment">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.SignHere.TabId">
            <summary>
            The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].
            </summary>
            <value>The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].</value>
        </member>
        <member name="P:DocuSign.eSign.Model.SignHere.TemplateLocked">
            <summary>
            When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.
            </summary>
            <value>When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.SignHere.TemplateRequired">
            <summary>
            When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.
            </summary>
            <value>When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.SignHere.ConditionalParentLabel">
            <summary>
            For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.
            </summary>
            <value>For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.SignHere.ConditionalParentValue">
            <summary>
            For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.
            </summary>
            <value>For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.SignHere.CustomTabId">
            <summary>
            The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
            </summary>
            <value>The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.SignHere.MergeField">
            <summary>
            Gets or Sets MergeField
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.SignHere.Status">
            <summary>
            Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.
            </summary>
            <value>Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.SignHere.ErrorDetails">
            <summary>
            Gets or Sets ErrorDetails
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Model.SignHere.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.SignHere.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.SignHere.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.SignHere.Equals(DocuSign.eSign.Model.SignHere)">
            <summary>
            Returns true if SignHere instances are equal
            </summary>
            <param name="other">Instance of SignHere to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.SignHere.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.SocialAuthentication">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.SocialAuthentication.Authentication">
            <summary>
            Reserved: TBD
            </summary>
            <value>Reserved: TBD</value>
        </member>
        <member name="M:DocuSign.eSign.Model.SocialAuthentication.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.SocialAuthentication.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.SocialAuthentication.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.SocialAuthentication.Equals(DocuSign.eSign.Model.SocialAuthentication)">
            <summary>
            Returns true if SocialAuthentication instances are equal
            </summary>
            <param name="other">Instance of SocialAuthentication to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.SocialAuthentication.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.Ssn">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Ssn.ValidationPattern">
            <summary>
            A regular expressionn used to validate input for the tab.
            </summary>
            <value>A regular expressionn used to validate input for the tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Ssn.ValidationMessage">
            <summary>
            The message displayed if the custom tab fails input validation (either custom of embedded).
            </summary>
            <value>The message displayed if the custom tab fails input validation (either custom of embedded).</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Ssn.Shared">
            <summary>
            When set to **true**, this custom tab is shared.
            </summary>
            <value>When set to **true**, this custom tab is shared.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Ssn.RequireInitialOnSharedChange">
            <summary>
            Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.
            </summary>
            <value>Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Ssn.SenderRequired">
            <summary>
            When set to **true**, the sender must populate the tab before an envelope can be sent using the template. \n\nThis value tab can only be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired` value of true cannot be deleted from an envelope.
            </summary>
            <value>When set to **true**, the sender must populate the tab before an envelope can be sent using the template. \n\nThis value tab can only be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired` value of true cannot be deleted from an envelope.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Ssn.RequireAll">
            <summary>
            When set to **true** and shared is true, information must be entered in this field to complete the envelope.
            </summary>
            <value>When set to **true** and shared is true, information must be entered in this field to complete the envelope.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Ssn.Name">
            <summary>
            Specifies the tool tip text for the tab.
            </summary>
            <value>Specifies the tool tip text for the tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Ssn.Value">
            <summary>
            Specifies the value of the tab.
            </summary>
            <value>Specifies the value of the tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Ssn.OriginalValue">
            <summary>
            The initial value of the tab when it was sent to the recipient.
            </summary>
            <value>The initial value of the tab when it was sent to the recipient.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Ssn.Width">
            <summary>
            Width of the tab in pixels.
            </summary>
            <value>Width of the tab in pixels.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Ssn.Required">
            <summary>
            When set to **true**, the signer is required to fill out this tab
            </summary>
            <value>When set to **true**, the signer is required to fill out this tab</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Ssn.Locked">
            <summary>
            When set to **true**, the signer cannot change the data of the custom tab.
            </summary>
            <value>When set to **true**, the signer cannot change the data of the custom tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Ssn.ConcealValueOnDocument">
            <summary>
            When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
            </summary>
            <value>When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Ssn.DisableAutoSize">
            <summary>
            When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.
            </summary>
            <value>When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Ssn.MaxLength">
            <summary>
            An optional value that describes the maximum length of the property when the property is a string.
            </summary>
            <value>An optional value that describes the maximum length of the property when the property is a string.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Ssn.TabLabel">
            <summary>
            The label string associated with the tab.
            </summary>
            <value>The label string associated with the tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Ssn.Font">
            <summary>
            The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.
            </summary>
            <value>The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Ssn.Bold">
            <summary>
            When set to **true**, the information in the tab is bold.
            </summary>
            <value>When set to **true**, the information in the tab is bold.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Ssn.Italic">
            <summary>
            When set to **true**, the information in the tab is italic.
            </summary>
            <value>When set to **true**, the information in the tab is italic.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Ssn.Underline">
            <summary>
            When set to **true**, the information in the tab is underlined.
            </summary>
            <value>When set to **true**, the information in the tab is underlined.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Ssn.FontColor">
            <summary>
            The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.
            </summary>
            <value>The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Ssn.FontSize">
            <summary>
            The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.
            </summary>
            <value>The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Ssn.DocumentId">
            <summary>
            Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
            </summary>
            <value>Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Ssn.RecipientId">
            <summary>
            Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
            </summary>
            <value>Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Ssn.PageNumber">
            <summary>
            Specifies the page number on which the tab is located.
            </summary>
            <value>Specifies the page number on which the tab is located.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Ssn.XPosition">
            <summary>
            This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.
            </summary>
            <value>This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Ssn.YPosition">
            <summary>
            This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.
            </summary>
            <value>This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Ssn.AnchorString">
            <summary>
            Anchor text information for a radio button.
            </summary>
            <value>Anchor text information for a radio button.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Ssn.AnchorXOffset">
            <summary>
            Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.
            </summary>
            <value>Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Ssn.AnchorYOffset">
            <summary>
            Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.
            </summary>
            <value>Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Ssn.AnchorUnits">
            <summary>
            Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.
            </summary>
            <value>Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Ssn.AnchorIgnoreIfNotPresent">
            <summary>
            When set to **true**, this tab is ignored if anchorString is not found in the document.
            </summary>
            <value>When set to **true**, this tab is ignored if anchorString is not found in the document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Ssn.AnchorCaseSensitive">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Ssn.AnchorMatchWholeWord">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Ssn.AnchorHorizontalAlignment">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Ssn.TabId">
            <summary>
            The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].
            </summary>
            <value>The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Ssn.TemplateLocked">
            <summary>
            When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.
            </summary>
            <value>When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Ssn.TemplateRequired">
            <summary>
            When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.
            </summary>
            <value>When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Ssn.ConditionalParentLabel">
            <summary>
            For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.
            </summary>
            <value>For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Ssn.ConditionalParentValue">
            <summary>
            For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.
            </summary>
            <value>For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Ssn.CustomTabId">
            <summary>
            The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
            </summary>
            <value>The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Ssn.MergeField">
            <summary>
            Gets or Sets MergeField
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Ssn.Status">
            <summary>
            Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.
            </summary>
            <value>Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Ssn.ErrorDetails">
            <summary>
            Gets or Sets ErrorDetails
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Model.Ssn.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Ssn.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Ssn.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Ssn.Equals(DocuSign.eSign.Model.Ssn)">
            <summary>
            Returns true if Ssn instances are equal
            </summary>
            <param name="other">Instance of Ssn to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Ssn.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.Ssn4InformationInput">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Ssn4InformationInput.Ssn4">
            <summary>
            The last four digits of the recipient's Social Security Number (SSN).
            </summary>
            <value>The last four digits of the recipient's Social Security Number (SSN).</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Ssn4InformationInput.DisplayLevelCode">
            <summary>
            Specifies the display level for the recipient. \nValid values are: \n\n* ReadOnly\n* Editable\n* DoNotDisplay
            </summary>
            <value>Specifies the display level for the recipient. \nValid values are: \n\n* ReadOnly\n* Editable\n* DoNotDisplay</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Ssn4InformationInput.ReceiveInResponse">
            <summary>
            When set to **true**, the information needs to be returned in the response.
            </summary>
            <value>When set to **true**, the information needs to be returned in the response.</value>
        </member>
        <member name="M:DocuSign.eSign.Model.Ssn4InformationInput.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Ssn4InformationInput.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Ssn4InformationInput.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Ssn4InformationInput.Equals(DocuSign.eSign.Model.Ssn4InformationInput)">
            <summary>
            Returns true if Ssn4InformationInput instances are equal
            </summary>
            <param name="other">Instance of Ssn4InformationInput to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Ssn4InformationInput.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.Ssn9InformationInput">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Ssn9InformationInput.Ssn9">
            <summary>
            The recipient's Social Security Number(SSN).
            </summary>
            <value>The recipient's Social Security Number(SSN).</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Ssn9InformationInput.DisplayLevelCode">
            <summary>
            Specifies the display level for the recipient. \nValid values are: \n\n* ReadOnly\n* Editable\n* DoNotDisplay
            </summary>
            <value>Specifies the display level for the recipient. \nValid values are: \n\n* ReadOnly\n* Editable\n* DoNotDisplay</value>
        </member>
        <member name="M:DocuSign.eSign.Model.Ssn9InformationInput.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Ssn9InformationInput.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Ssn9InformationInput.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Ssn9InformationInput.Equals(DocuSign.eSign.Model.Ssn9InformationInput)">
            <summary>
            Returns true if Ssn9InformationInput instances are equal
            </summary>
            <param name="other">Instance of Ssn9InformationInput to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Ssn9InformationInput.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.TabMetadata">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.TabMetadata.Font">
            <summary>
            The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.
            </summary>
            <value>The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TabMetadata.Bold">
            <summary>
            When set to **true**, the information in the tab is bold.
            </summary>
            <value>When set to **true**, the information in the tab is bold.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TabMetadata.Italic">
            <summary>
            When set to **true**, the information in the tab is italic.
            </summary>
            <value>When set to **true**, the information in the tab is italic.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TabMetadata.Underline">
            <summary>
            When set to **true**, the information in the tab is underlined.
            </summary>
            <value>When set to **true**, the information in the tab is underlined.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TabMetadata.FontColor">
            <summary>
            The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.
            </summary>
            <value>The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TabMetadata.FontSize">
            <summary>
            The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.
            </summary>
            <value>The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TabMetadata.Height">
            <summary>
            Height of the tab in pixels.
            </summary>
            <value>Height of the tab in pixels.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TabMetadata.Width">
            <summary>
            Width of the tab in pixels.
            </summary>
            <value>Width of the tab in pixels.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TabMetadata.CustomTabId">
            <summary>
            The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
            </summary>
            <value>The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TabMetadata.InitialValue">
            <summary>
            The original value of the tab.
            </summary>
            <value>The original value of the tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TabMetadata.IncludedInEmail">
            <summary>
            When set to **true**, the tab is included in e-mails related to the envelope on which it exists. This applies to only specific tabs.
            </summary>
            <value>When set to **true**, the tab is included in e-mails related to the envelope on which it exists. This applies to only specific tabs.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TabMetadata.DisableAutoSize">
            <summary>
            When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.
            </summary>
            <value>When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TabMetadata.ConcealValueOnDocument">
            <summary>
            When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
            </summary>
            <value>When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TabMetadata.Locked">
            <summary>
            When set to **true**, the signer cannot change the data of the custom tab.
            </summary>
            <value>When set to **true**, the signer cannot change the data of the custom tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TabMetadata.Required">
            <summary>
            When set to **true**, the signer is required to fill out this tab
            </summary>
            <value>When set to **true**, the signer is required to fill out this tab</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TabMetadata.Shared">
            <summary>
            When set to **true**, this custom tab is shared.
            </summary>
            <value>When set to **true**, this custom tab is shared.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TabMetadata.Items">
            <summary>
            If the tab is a list, this represents the values that are possible for the tab.
            </summary>
            <value>If the tab is a list, this represents the values that are possible for the tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TabMetadata.TabLabel">
            <summary>
            The label string associated with the tab.
            </summary>
            <value>The label string associated with the tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TabMetadata.MaximumLength">
            <summary>
            The maximum number of entry characters supported by the custom tab.
            </summary>
            <value>The maximum number of entry characters supported by the custom tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TabMetadata.Anchor">
            <summary>
            An optional string that is used to auto-match tabs to strings located in the documents of an envelope.
            </summary>
            <value>An optional string that is used to auto-match tabs to strings located in the documents of an envelope.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TabMetadata.AnchorXOffset">
            <summary>
            Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.
            </summary>
            <value>Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TabMetadata.AnchorYOffset">
            <summary>
            Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.
            </summary>
            <value>Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TabMetadata.AnchorUnits">
            <summary>
            Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.
            </summary>
            <value>Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TabMetadata.AnchorIgnoreIfNotPresent">
            <summary>
            When set to **true**, this tab is ignored if anchorString is not found in the document.
            </summary>
            <value>When set to **true**, this tab is ignored if anchorString is not found in the document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TabMetadata.AnchorMatchWholeWord">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.TabMetadata.AnchorCaseSensitive">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.TabMetadata.AnchorHorizontalAlignment">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.TabMetadata.Name">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.TabMetadata.Type">
            <summary>
            The type of this tab. Values are: Approve, CheckBox, Company, Date, DateSigned,	Decline, Email,	EmailAddress, EnvelopeId, FirstName, Formula, FullName,	InitialHere, InitialHereOptional, LastName, List, Note, Number,	Radio, SignerAttachment, SignHere, SignHereOptional, Ssn, Text, Title, Zip5, or Zip5Dash4.
            </summary>
            <value>The type of this tab. Values are: Approve, CheckBox, Company, Date, DateSigned,	Decline, Email,	EmailAddress, EnvelopeId, FirstName, Formula, FullName,	InitialHere, InitialHereOptional, LastName, List, Note, Number,	Radio, SignerAttachment, SignHere, SignHereOptional, Ssn, Text, Title, Zip5, or Zip5Dash4.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TabMetadata.ValidationMessage">
            <summary>
            The message displayed if the custom tab fails input validation (either custom of embedded).
            </summary>
            <value>The message displayed if the custom tab fails input validation (either custom of embedded).</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TabMetadata.ValidationPattern">
            <summary>
            A regular expressionn used to validate input for the tab.
            </summary>
            <value>A regular expressionn used to validate input for the tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TabMetadata.LastModifiedByUserId">
            <summary>
            The userId of the DocuSign user who last modified this object.
            </summary>
            <value>The userId of the DocuSign user who last modified this object.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TabMetadata.LastModifiedByDisplayName">
            <summary>
            The User Name of the DocuSign user who last modified this object.
            </summary>
            <value>The User Name of the DocuSign user who last modified this object.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TabMetadata.LastModified">
            <summary>
            The UTC DateTime this object was last modified. This is in ISO8601 format.
            </summary>
            <value>The UTC DateTime this object was last modified. This is in ISO8601 format.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TabMetadata.CreatedByUserId">
            <summary>
            The userId of the DocuSign user who created this object.
            </summary>
            <value>The userId of the DocuSign user who created this object.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TabMetadata.CreatedByDisplayName">
            <summary>
            The user name of the DocuSign user who created this object.
            </summary>
            <value>The user name of the DocuSign user who created this object.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TabMetadata.Editable">
            <summary>
            When set to **true**, the custom tab is editable. Otherwise the custom tab cannot be modified.
            </summary>
            <value>When set to **true**, the custom tab is editable. Otherwise the custom tab cannot be modified.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TabMetadata.MergeField">
            <summary>
            Gets or Sets MergeField
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Model.TabMetadata.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.TabMetadata.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.TabMetadata.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.TabMetadata.Equals(DocuSign.eSign.Model.TabMetadata)">
            <summary>
            Returns true if TabMetadata instances are equal
            </summary>
            <param name="other">Instance of TabMetadata to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.TabMetadata.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.TabMetadataList">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.TabMetadataList.Tabs">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="M:DocuSign.eSign.Model.TabMetadataList.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.TabMetadataList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.TabMetadataList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.TabMetadataList.Equals(DocuSign.eSign.Model.TabMetadataList)">
            <summary>
            Returns true if TabMetadataList instances are equal
            </summary>
            <param name="other">Instance of TabMetadataList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.TabMetadataList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.Tabs">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Tabs.SignHereTabs">
            <summary>
            A complex type the contains information about the tag that specifies where the recipient places their signature in the document. The \"optional\" parameter sets if the signature is required or optional.
            </summary>
            <value>A complex type the contains information about the tag that specifies where the recipient places their signature in the document. The \"optional\" parameter sets if the signature is required or optional.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Tabs.InitialHereTabs">
            <summary>
            Specifies a tag to have a recipient place their initials in the document. The \"optional\" parameter sets if the initials are required or optional.
            </summary>
            <value>Specifies a tag to have a recipient place their initials in the document. The \"optional\" parameter sets if the initials are required or optional.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Tabs.SignerAttachmentTabs">
            <summary>
            Specifies a tag on the document when you want the recipient to add supporting documents to an envelope.
            </summary>
            <value>Specifies a tag on the document when you want the recipient to add supporting documents to an envelope.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Tabs.ApproveTabs">
            <summary>
            Specifies a tag on the document where you want the recipient to approve documents in an envelope without placing a signature or initials on the document. If the recipient clicks the Approve tag during the signing process, the recipient is considered to have signed the document. No information is shown on the document for the approval, but it is recorded as a signature in the envelope history.
            </summary>
            <value>Specifies a tag on the document where you want the recipient to approve documents in an envelope without placing a signature or initials on the document. If the recipient clicks the Approve tag during the signing process, the recipient is considered to have signed the document. No information is shown on the document for the approval, but it is recorded as a signature in the envelope history.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Tabs.DeclineTabs">
            <summary>
            Specifies a tag on the document where you want to give the recipient the option of declining an envelope. If the recipient clicks the Decline tag during the signing process, the envelope is voided.
            </summary>
            <value>Specifies a tag on the document where you want to give the recipient the option of declining an envelope. If the recipient clicks the Decline tag during the signing process, the envelope is voided.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Tabs.FullNameTabs">
            <summary>
            Specifies a tag on the document where you want the recipient's name to appear.
            </summary>
            <value>Specifies a tag on the document where you want the recipient's name to appear.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Tabs.DateSignedTabs">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Tabs.EnvelopeIdTabs">
            <summary>
            Specifies a tag on the document where you want the envelope ID for to appear. Recipients cannot enter or change the information in this tab, it is for informational purposes only.
            </summary>
            <value>Specifies a tag on the document where you want the envelope ID for to appear. Recipients cannot enter or change the information in this tab, it is for informational purposes only.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Tabs.CompanyTabs">
            <summary>
            Specifies a tag on the document where you want the recipient's company name to appear.\n\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.
            </summary>
            <value>Specifies a tag on the document where you want the recipient's company name to appear.\n\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Tabs.TitleTabs">
            <summary>
            Specifies a tag on the document where you want the recipient's title to appear.\n\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.
            </summary>
            <value>Specifies a tag on the document where you want the recipient's title to appear.\n\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Tabs.TextTabs">
            <summary>
            Specifies a that that is an adaptable field that allows the recipient to enter different text information.\n\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.
            </summary>
            <value>Specifies a that that is an adaptable field that allows the recipient to enter different text information.\n\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Tabs.NumberTabs">
            <summary>
            Specifies a tag on the document where you want the recipient to enter a number. It uses the same parameters as a Text tab, with the validation message and pattern set for number information.\n\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.
            </summary>
            <value>Specifies a tag on the document where you want the recipient to enter a number. It uses the same parameters as a Text tab, with the validation message and pattern set for number information.\n\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Tabs.SsnTabs">
            <summary>
            Specifies a tag on the document where you want the recipient to enter a Social Security Number (SSN). A SSN can be typed with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for SSN information.\n\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.
            </summary>
            <value>Specifies a tag on the document where you want the recipient to enter a Social Security Number (SSN). A SSN can be typed with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for SSN information.\n\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Tabs.DateTabs">
            <summary>
            Specifies a tab on the document where you want the recipient to enter a date. Date tabs are single-line fields that allow date information to be entered in any format. The tooltip for this tab recommends entering the date as MM/DD/YYYY, but this is not enforced. The format entered by the signer is retained. \n\nIf you need a particular date format enforced, DocuSign recommends using a Text tab with a Validation Pattern and Validation Message to enforce the format.
            </summary>
            <value>Specifies a tab on the document where you want the recipient to enter a date. Date tabs are single-line fields that allow date information to be entered in any format. The tooltip for this tab recommends entering the date as MM/DD/YYYY, but this is not enforced. The format entered by the signer is retained. \n\nIf you need a particular date format enforced, DocuSign recommends using a Text tab with a Validation Pattern and Validation Message to enforce the format.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Tabs.ZipTabs">
            <summary>
            Specifies a tag on the document where you want the recipient to enter a ZIP code. The ZIP code can be a five numbers or the ZIP+4 format with nine numbers. The zip code can be typed with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for ZIP code information.\n\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.
            </summary>
            <value>Specifies a tag on the document where you want the recipient to enter a ZIP code. The ZIP code can be a five numbers or the ZIP+4 format with nine numbers. The zip code can be typed with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for ZIP code information.\n\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Tabs.EmailTabs">
            <summary>
            Specifies a tag on the document where you want the recipient to enter an email. Email tags are single-line fields that accept any characters. The system checks that a valid email format (i.e. xxx@yyy.zzz) is entered in the tag. It uses the same parameters as a Text tab, with the validation message and pattern set for email information.\n\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.
            </summary>
            <value>Specifies a tag on the document where you want the recipient to enter an email. Email tags are single-line fields that accept any characters. The system checks that a valid email format (i.e. xxx@yyy.zzz) is entered in the tag. It uses the same parameters as a Text tab, with the validation message and pattern set for email information.\n\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Tabs.NoteTabs">
            <summary>
            Specifies a tag on the document where you want to place additional information, in the form of a note, on a document for a recipient.
            </summary>
            <value>Specifies a tag on the document where you want to place additional information, in the form of a note, on a document for a recipient.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Tabs.CheckboxTabs">
            <summary>
            Specifies a tag on the document in a location where the recipient can select an option.
            </summary>
            <value>Specifies a tag on the document in a location where the recipient can select an option.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Tabs.RadioGroupTabs">
            <summary>
            Specifies a tag on the document in a location where the recipient can select one option from a group of options using a radio button. The radio buttons do not have to be on the same page in a document.
            </summary>
            <value>Specifies a tag on the document in a location where the recipient can select one option from a group of options using a radio button. The radio buttons do not have to be on the same page in a document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Tabs.ListTabs">
            <summary>
            Specify this tag to give your recipient a list of options, presented as a drop-down list, from which they can select.
            </summary>
            <value>Specify this tag to give your recipient a list of options, presented as a drop-down list, from which they can select.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Tabs.FirstNameTabs">
            <summary>
            Specifies tag on a document where you want the recipient's first name to appear. This tag takes the recipient's name, as entered in the recipient information, splits it into sections based on spaces and uses the first section as the first name.
            </summary>
            <value>Specifies tag on a document where you want the recipient's first name to appear. This tag takes the recipient's name, as entered in the recipient information, splits it into sections based on spaces and uses the first section as the first name.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Tabs.LastNameTabs">
            <summary>
            Specifies a tag on a document where you want the recipient’s last name to appear. This tag takes the recipient’s name, as entered in the recipient information, splits it into sections based on spaces and uses the last section as the last name.
            </summary>
            <value>Specifies a tag on a document where you want the recipient’s last name to appear. This tag takes the recipient’s name, as entered in the recipient information, splits it into sections based on spaces and uses the last section as the last name.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Tabs.EmailAddressTabs">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Tabs.FormulaTabs">
            <summary>
            Specifies a tag that is used to add a calculated field to a document. Envelope recipients cannot directly enter information into the tag; the formula tab calculates and displays a new value when changes are made to the reference tag values. The reference tag information and calculation operations are entered in the \"formula\" element. See the [ML:Using the Calculated Fields Feature] quick start guide or [ML:DocuSign Service User Guide] for more information about formulas.
            </summary>
            <value>Specifies a tag that is used to add a calculated field to a document. Envelope recipients cannot directly enter information into the tag; the formula tab calculates and displays a new value when changes are made to the reference tag values. The reference tag information and calculation operations are entered in the \"formula\" element. See the [ML:Using the Calculated Fields Feature] quick start guide or [ML:DocuSign Service User Guide] for more information about formulas.</value>
        </member>
        <member name="M:DocuSign.eSign.Model.Tabs.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Tabs.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Tabs.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Tabs.Equals(DocuSign.eSign.Model.Tabs)">
            <summary>
            Returns true if Tabs instances are equal
            </summary>
            <param name="other">Instance of Tabs to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Tabs.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.TemplateCustomFields">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateCustomFields.TextCustomFields">
            <summary>
            An array of text custom fields.
            </summary>
            <value>An array of text custom fields.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateCustomFields.ListCustomFields">
            <summary>
            An array of list custom fields.
            </summary>
            <value>An array of list custom fields.</value>
        </member>
        <member name="M:DocuSign.eSign.Model.TemplateCustomFields.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.TemplateCustomFields.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.TemplateCustomFields.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.TemplateCustomFields.Equals(DocuSign.eSign.Model.TemplateCustomFields)">
            <summary>
            Returns true if TemplateCustomFields instances are equal
            </summary>
            <param name="other">Instance of TemplateCustomFields to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.TemplateCustomFields.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.TemplateDocumentsResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateDocumentsResult.TemplateId">
            <summary>
            The unique identifier of the template. If this is not provided, DocuSign will generate a value.
            </summary>
            <value>The unique identifier of the template. If this is not provided, DocuSign will generate a value.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateDocumentsResult.TemplateDocuments">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="M:DocuSign.eSign.Model.TemplateDocumentsResult.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.TemplateDocumentsResult.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.TemplateDocumentsResult.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.TemplateDocumentsResult.Equals(DocuSign.eSign.Model.TemplateDocumentsResult)">
            <summary>
            Returns true if TemplateDocumentsResult instances are equal
            </summary>
            <param name="other">Instance of TemplateDocumentsResult to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.TemplateDocumentsResult.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.TemplateInformation">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateInformation.Templates">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="M:DocuSign.eSign.Model.TemplateInformation.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.TemplateInformation.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.TemplateInformation.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.TemplateInformation.Equals(DocuSign.eSign.Model.TemplateInformation)">
            <summary>
            Returns true if TemplateInformation instances are equal
            </summary>
            <param name="other">Instance of TemplateInformation to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.TemplateInformation.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.TemplateMatch">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateMatch.MatchPercentage">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateMatch.DocumentStartPage">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateMatch.DocumentEndPage">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="M:DocuSign.eSign.Model.TemplateMatch.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.TemplateMatch.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.TemplateMatch.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.TemplateMatch.Equals(DocuSign.eSign.Model.TemplateMatch)">
            <summary>
            Returns true if TemplateMatch instances are equal
            </summary>
            <param name="other">Instance of TemplateMatch to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.TemplateMatch.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.TemplateNotificationRequest">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateNotificationRequest.Password">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateNotificationRequest.UseAccountDefaults">
            <summary>
            When set to **true**, the account default notification settings are used for the envelope.
            </summary>
            <value>When set to **true**, the account default notification settings are used for the envelope.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateNotificationRequest.Reminders">
            <summary>
            Gets or Sets Reminders
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateNotificationRequest.Expirations">
            <summary>
            Gets or Sets Expirations
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Model.TemplateNotificationRequest.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.TemplateNotificationRequest.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.TemplateNotificationRequest.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.TemplateNotificationRequest.Equals(DocuSign.eSign.Model.TemplateNotificationRequest)">
            <summary>
            Returns true if TemplateNotificationRequest instances are equal
            </summary>
            <param name="other">Instance of TemplateNotificationRequest to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.TemplateNotificationRequest.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.TemplateRecipients">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateRecipients.Signers">
            <summary>
            A complex type containing information about the Signer recipient.
            </summary>
            <value>A complex type containing information about the Signer recipient.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateRecipients.Agents">
            <summary>
            A complex type defining the management and access rights of a recipient assigned assigned as an agent on the document.
            </summary>
            <value>A complex type defining the management and access rights of a recipient assigned assigned as an agent on the document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateRecipients.Editors">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateRecipients.Intermediaries">
            <summary>
            Identifies a recipient that can, but is not required to, add name and email information for recipients at the same or subsequent level in the routing order (until subsequent Agents, Editors or Intermediaries recipient types are added).
            </summary>
            <value>Identifies a recipient that can, but is not required to, add name and email information for recipients at the same or subsequent level in the routing order (until subsequent Agents, Editors or Intermediaries recipient types are added).</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateRecipients.CarbonCopies">
            <summary>
            A complex type containing information about recipients who should receive a copy of the envelope, but does not need to sign it.
            </summary>
            <value>A complex type containing information about recipients who should receive a copy of the envelope, but does not need to sign it.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateRecipients.CertifiedDeliveries">
            <summary>
            A complex type containing information on a recipient the must receive the completed documents for the envelope to be completed, but the recipient does not need to sign, initial, date, or add information to any of the documents.
            </summary>
            <value>A complex type containing information on a recipient the must receive the completed documents for the envelope to be completed, but the recipient does not need to sign, initial, date, or add information to any of the documents.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateRecipients.InPersonSigners">
            <summary>
            Specifies a signer that is in the same physical location as a DocuSign user who will act as a Signing Host for the transaction. The recipient added is the Signing Host and new separate Signer Name field appears after Sign in person is selected.
            </summary>
            <value>Specifies a signer that is in the same physical location as a DocuSign user who will act as a Signing Host for the transaction. The recipient added is the Signing Host and new separate Signer Name field appears after Sign in person is selected.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateRecipients.RecipientCount">
            <summary>
            The list of recipient event statuses that will trigger Connect to send updates to the url. It can be a two-part list with:\n\n* recipientEventStatusCode - The recipient status, this can be Sent, Delivered, Completed, Declined, AuthenticationFailed, and AutoResponded.\n* includeDocuments - When set to **true**, the envelope time zone information is included in the message.
            </summary>
            <value>The list of recipient event statuses that will trigger Connect to send updates to the url. It can be a two-part list with:\n\n* recipientEventStatusCode - The recipient status, this can be Sent, Delivered, Completed, Declined, AuthenticationFailed, and AutoResponded.\n* includeDocuments - When set to **true**, the envelope time zone information is included in the message.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateRecipients.CurrentRoutingOrder">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateRecipients.ErrorDetails">
            <summary>
            Gets or Sets ErrorDetails
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Model.TemplateRecipients.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.TemplateRecipients.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.TemplateRecipients.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.TemplateRecipients.Equals(DocuSign.eSign.Model.TemplateRecipients)">
            <summary>
            Returns true if TemplateRecipients instances are equal
            </summary>
            <param name="other">Instance of TemplateRecipients to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.TemplateRecipients.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.TemplateRole">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateRole.Email">
            <summary>
            Specifies the email associated with a role name.
            </summary>
            <value>Specifies the email associated with a role name.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateRole.RoleName">
            <summary>
            Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.
            </summary>
            <value>Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateRole.Name">
            <summary>
            Specifies the recipient's name.
            </summary>
            <value>Specifies the recipient's name.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateRole.SigningGroupId">
            <summary>
            When set to **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab ( instead of adopting a signature/initial style or only drawing a signature/initial once).
            </summary>
            <value>When set to **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab ( instead of adopting a signature/initial style or only drawing a signature/initial once).</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateRole.InPersonSignerName">
            <summary>
            Specifies the full legal name of the signer in person signer template roles.\n\nMaximum Length: 100 characters.
            </summary>
            <value>Specifies the full legal name of the signer in person signer template roles.\n\nMaximum Length: 100 characters.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateRole.ClientUserId">
            <summary>
            Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Note that if the `ClientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true**, an error is generated on sending.ng. \n\nMaximum length: 100 characters.
            </summary>
            <value>Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Note that if the `ClientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true**, an error is generated on sending.ng. \n\nMaximum length: 100 characters.</value>
        </member>
        <!-- Badly formed XML comment ignored for member "P:DocuSign.eSign.Model.TemplateRole.EmbeddedRecipientStartURL" -->
        <member name="P:DocuSign.eSign.Model.TemplateRole.DefaultRecipient">
            <summary>
            When set to **true**, this recipient is the default recipient and any tabs generated by the transformPdfFields option are mapped to this recipient.
            </summary>
            <value>When set to **true**, this recipient is the default recipient and any tabs generated by the transformPdfFields option are mapped to this recipient.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateRole.AccessCode">
            <summary>
            If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and must conform to account’s access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then access code is not required.
            </summary>
            <value>If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and must conform to account’s access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then access code is not required.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateRole.RoutingOrder">
            <summary>
            Specifies the routing order of the recipient in the envelope.
            </summary>
            <value>Specifies the routing order of the recipient in the envelope.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateRole.EmailNotification">
            <summary>
            Gets or Sets EmailNotification
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateRole.Tabs">
            <summary>
            Gets or Sets Tabs
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Model.TemplateRole.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.TemplateRole.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.TemplateRole.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.TemplateRole.Equals(DocuSign.eSign.Model.TemplateRole)">
            <summary>
            Returns true if TemplateRole instances are equal
            </summary>
            <param name="other">Instance of TemplateRole to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.TemplateRole.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.TemplateSummary">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateSummary.TemplateId">
            <summary>
            The unique identifier of the template. If this is not provided, DocuSign will generate a value.
            </summary>
            <value>The unique identifier of the template. If this is not provided, DocuSign will generate a value.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateSummary.Name">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateSummary.DocumentId">
            <summary>
            Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
            </summary>
            <value>Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateSummary.DocumentName">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateSummary.Applied">
            <summary>
            Reserved: TBD
            </summary>
            <value>Reserved: TBD</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateSummary.TemplateMatch">
            <summary>
            Gets or Sets TemplateMatch
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateSummary.Uri">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="M:DocuSign.eSign.Model.TemplateSummary.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.TemplateSummary.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.TemplateSummary.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.TemplateSummary.Equals(DocuSign.eSign.Model.TemplateSummary)">
            <summary>
            Returns true if TemplateSummary instances are equal
            </summary>
            <param name="other">Instance of TemplateSummary to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.TemplateSummary.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.TemplateTabs">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateTabs.SignHereTabs">
            <summary>
            A complex type the contains information about the tag that specifies where the recipient places their signature in the document. The \"optional\" parameter sets if the signature is required or optional.
            </summary>
            <value>A complex type the contains information about the tag that specifies where the recipient places their signature in the document. The \"optional\" parameter sets if the signature is required or optional.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateTabs.InitialHereTabs">
            <summary>
            Specifies a tag to have a recipient place their initials in the document. The \"optional\" parameter sets if the initials are required or optional.
            </summary>
            <value>Specifies a tag to have a recipient place their initials in the document. The \"optional\" parameter sets if the initials are required or optional.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateTabs.SignerAttachmentTabs">
            <summary>
            Specifies a tag on the document when you want the recipient to add supporting documents to an envelope.
            </summary>
            <value>Specifies a tag on the document when you want the recipient to add supporting documents to an envelope.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateTabs.ApproveTabs">
            <summary>
            Specifies a tag on the document where you want the recipient to approve documents in an envelope without placing a signature or initials on the document. If the recipient clicks the Approve tag during the signing process, the recipient is considered to have signed the document. No information is shown on the document for the approval, but it is recorded as a signature in the envelope history.
            </summary>
            <value>Specifies a tag on the document where you want the recipient to approve documents in an envelope without placing a signature or initials on the document. If the recipient clicks the Approve tag during the signing process, the recipient is considered to have signed the document. No information is shown on the document for the approval, but it is recorded as a signature in the envelope history.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateTabs.DeclineTabs">
            <summary>
            Specifies a tag on the document where you want to give the recipient the option of declining an envelope. If the recipient clicks the Decline tag during the signing process, the envelope is voided.
            </summary>
            <value>Specifies a tag on the document where you want to give the recipient the option of declining an envelope. If the recipient clicks the Decline tag during the signing process, the envelope is voided.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateTabs.FullNameTabs">
            <summary>
            Specifies a tag on the document where you want the recipient's name to appear.
            </summary>
            <value>Specifies a tag on the document where you want the recipient's name to appear.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateTabs.DateSignedTabs">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateTabs.EnvelopeIdTabs">
            <summary>
            Specifies a tag on the document where you want the envelope ID for to appear. Recipients cannot enter or change the information in this tab, it is for informational purposes only.
            </summary>
            <value>Specifies a tag on the document where you want the envelope ID for to appear. Recipients cannot enter or change the information in this tab, it is for informational purposes only.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateTabs.CompanyTabs">
            <summary>
            Specifies a tag on the document where you want the recipient's company name to appear.\n\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.
            </summary>
            <value>Specifies a tag on the document where you want the recipient's company name to appear.\n\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateTabs.TitleTabs">
            <summary>
            Specifies a tag on the document where you want the recipient's title to appear.\n\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.
            </summary>
            <value>Specifies a tag on the document where you want the recipient's title to appear.\n\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateTabs.TextTabs">
            <summary>
            Specifies a that that is an adaptable field that allows the recipient to enter different text information.\n\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.
            </summary>
            <value>Specifies a that that is an adaptable field that allows the recipient to enter different text information.\n\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateTabs.NumberTabs">
            <summary>
            Specifies a tag on the document where you want the recipient to enter a number. It uses the same parameters as a Text tab, with the validation message and pattern set for number information.\n\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.
            </summary>
            <value>Specifies a tag on the document where you want the recipient to enter a number. It uses the same parameters as a Text tab, with the validation message and pattern set for number information.\n\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateTabs.SsnTabs">
            <summary>
            Specifies a tag on the document where you want the recipient to enter a Social Security Number (SSN). A SSN can be typed with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for SSN information.\n\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.
            </summary>
            <value>Specifies a tag on the document where you want the recipient to enter a Social Security Number (SSN). A SSN can be typed with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for SSN information.\n\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateTabs.DateTabs">
            <summary>
            Specifies a tab on the document where you want the recipient to enter a date. Date tabs are single-line fields that allow date information to be entered in any format. The tooltip for this tab recommends entering the date as MM/DD/YYYY, but this is not enforced. The format entered by the signer is retained. \n\nIf you need a particular date format enforced, DocuSign recommends using a Text tab with a Validation Pattern and Validation Message to enforce the format.
            </summary>
            <value>Specifies a tab on the document where you want the recipient to enter a date. Date tabs are single-line fields that allow date information to be entered in any format. The tooltip for this tab recommends entering the date as MM/DD/YYYY, but this is not enforced. The format entered by the signer is retained. \n\nIf you need a particular date format enforced, DocuSign recommends using a Text tab with a Validation Pattern and Validation Message to enforce the format.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateTabs.ZipTabs">
            <summary>
            Specifies a tag on the document where you want the recipient to enter a ZIP code. The ZIP code can be a five numbers or the ZIP+4 format with nine numbers. The zip code can be typed with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for ZIP code information.\n\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.
            </summary>
            <value>Specifies a tag on the document where you want the recipient to enter a ZIP code. The ZIP code can be a five numbers or the ZIP+4 format with nine numbers. The zip code can be typed with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for ZIP code information.\n\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateTabs.EmailTabs">
            <summary>
            Specifies a tag on the document where you want the recipient to enter an email. Email tags are single-line fields that accept any characters. The system checks that a valid email format (i.e. xxx@yyy.zzz) is entered in the tag. It uses the same parameters as a Text tab, with the validation message and pattern set for email information.\n\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.
            </summary>
            <value>Specifies a tag on the document where you want the recipient to enter an email. Email tags are single-line fields that accept any characters. The system checks that a valid email format (i.e. xxx@yyy.zzz) is entered in the tag. It uses the same parameters as a Text tab, with the validation message and pattern set for email information.\n\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateTabs.NoteTabs">
            <summary>
            Specifies a tag on the document where you want to place additional information, in the form of a note, on a document for a recipient.
            </summary>
            <value>Specifies a tag on the document where you want to place additional information, in the form of a note, on a document for a recipient.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateTabs.CheckboxTabs">
            <summary>
            Specifies a tag on the document in a location where the recipient can select an option.
            </summary>
            <value>Specifies a tag on the document in a location where the recipient can select an option.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateTabs.RadioGroupTabs">
            <summary>
            Specifies a tag on the document in a location where the recipient can select one option from a group of options using a radio button. The radio buttons do not have to be on the same page in a document.
            </summary>
            <value>Specifies a tag on the document in a location where the recipient can select one option from a group of options using a radio button. The radio buttons do not have to be on the same page in a document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateTabs.ListTabs">
            <summary>
            Specify this tag to give your recipient a list of options, presented as a drop-down list, from which they can select.
            </summary>
            <value>Specify this tag to give your recipient a list of options, presented as a drop-down list, from which they can select.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateTabs.FirstNameTabs">
            <summary>
            Specifies tag on a document where you want the recipient's first name to appear. This tag takes the recipient's name, as entered in the recipient information, splits it into sections based on spaces and uses the first section as the first name.
            </summary>
            <value>Specifies tag on a document where you want the recipient's first name to appear. This tag takes the recipient's name, as entered in the recipient information, splits it into sections based on spaces and uses the first section as the first name.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateTabs.LastNameTabs">
            <summary>
            Specifies a tag on a document where you want the recipient’s last name to appear. This tag takes the recipient’s name, as entered in the recipient information, splits it into sections based on spaces and uses the last section as the last name.
            </summary>
            <value>Specifies a tag on a document where you want the recipient’s last name to appear. This tag takes the recipient’s name, as entered in the recipient information, splits it into sections based on spaces and uses the last section as the last name.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateTabs.EmailAddressTabs">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateTabs.FormulaTabs">
            <summary>
            Specifies a tag that is used to add a calculated field to a document. Envelope recipients cannot directly enter information into the tag; the formula tab calculates and displays a new value when changes are made to the reference tag values. The reference tag information and calculation operations are entered in the \"formula\" element. See the [ML:Using the Calculated Fields Feature] quick start guide or [ML:DocuSign Service User Guide] for more information about formulas.
            </summary>
            <value>Specifies a tag that is used to add a calculated field to a document. Envelope recipients cannot directly enter information into the tag; the formula tab calculates and displays a new value when changes are made to the reference tag values. The reference tag information and calculation operations are entered in the \"formula\" element. See the [ML:Using the Calculated Fields Feature] quick start guide or [ML:DocuSign Service User Guide] for more information about formulas.</value>
        </member>
        <member name="M:DocuSign.eSign.Model.TemplateTabs.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.TemplateTabs.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.TemplateTabs.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.TemplateTabs.Equals(DocuSign.eSign.Model.TemplateTabs)">
            <summary>
            Returns true if TemplateTabs instances are equal
            </summary>
            <param name="other">Instance of TemplateTabs to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.TemplateTabs.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.TemplateUpdateSummary">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateUpdateSummary.EnvelopeId">
            <summary>
            The envelope ID of the envelope status that failed to post.
            </summary>
            <value>The envelope ID of the envelope status that failed to post.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateUpdateSummary.BulkEnvelopeStatus">
            <summary>
            Gets or Sets BulkEnvelopeStatus
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateUpdateSummary.LockInformation">
            <summary>
            Gets or Sets LockInformation
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.TemplateUpdateSummary.ErrorDetails">
            <summary>
            Gets or Sets ErrorDetails
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Model.TemplateUpdateSummary.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.TemplateUpdateSummary.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.TemplateUpdateSummary.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.TemplateUpdateSummary.Equals(DocuSign.eSign.Model.TemplateUpdateSummary)">
            <summary>
            Returns true if TemplateUpdateSummary instances are equal
            </summary>
            <param name="other">Instance of TemplateUpdateSummary to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.TemplateUpdateSummary.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.Text">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Text.Height">
            <summary>
            Height of the tab in pixels.
            </summary>
            <value>Height of the tab in pixels.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Text.IsPaymentAmount">
            <summary>
            When set to **true**, sets this as a payment tab. Can only be used with Text, Number, Formula, or List tabs. The value of the tab must be a number.
            </summary>
            <value>When set to **true**, sets this as a payment tab. Can only be used with Text, Number, Formula, or List tabs. The value of the tab must be a number.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Text.Formula">
            <summary>
            The Formula string contains the TabLabel for the reference tabs used in the formula and calculation operators. Each TabLabel must be contained in brackets. \nMaximum Length: 2000 characters.\n\n*Example*: Three tabs (TabLabels: Line1, Line2, and Tax) need to be added together. The formula string would be: \n\n[Line1]+[Line2]+[Tax]
            </summary>
            <value>The Formula string contains the TabLabel for the reference tabs used in the formula and calculation operators. Each TabLabel must be contained in brackets. \nMaximum Length: 2000 characters.\n\n*Example*: Three tabs (TabLabels: Line1, Line2, and Tax) need to be added together. The formula string would be: \n\n[Line1]+[Line2]+[Tax]</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Text.ValidationPattern">
            <summary>
            A regular expressionn used to validate input for the tab.
            </summary>
            <value>A regular expressionn used to validate input for the tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Text.ValidationMessage">
            <summary>
            The message displayed if the custom tab fails input validation (either custom of embedded).
            </summary>
            <value>The message displayed if the custom tab fails input validation (either custom of embedded).</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Text.Shared">
            <summary>
            When set to **true**, this custom tab is shared.
            </summary>
            <value>When set to **true**, this custom tab is shared.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Text.RequireInitialOnSharedChange">
            <summary>
            Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.
            </summary>
            <value>Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Text.SenderRequired">
            <summary>
            When set to **true**, the sender must populate the tab before an envelope can be sent using the template. \n\nThis value tab can only be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired` value of true cannot be deleted from an envelope.
            </summary>
            <value>When set to **true**, the sender must populate the tab before an envelope can be sent using the template. \n\nThis value tab can only be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired` value of true cannot be deleted from an envelope.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Text.RequireAll">
            <summary>
            When set to **true** and shared is true, information must be entered in this field to complete the envelope.
            </summary>
            <value>When set to **true** and shared is true, information must be entered in this field to complete the envelope.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Text.Name">
            <summary>
            Specifies the tool tip text for the tab.
            </summary>
            <value>Specifies the tool tip text for the tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Text.Value">
            <summary>
            Specifies the value of the tab.
            </summary>
            <value>Specifies the value of the tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Text.OriginalValue">
            <summary>
            The initial value of the tab when it was sent to the recipient.
            </summary>
            <value>The initial value of the tab when it was sent to the recipient.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Text.Width">
            <summary>
            Width of the tab in pixels.
            </summary>
            <value>Width of the tab in pixels.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Text.Required">
            <summary>
            When set to **true**, the signer is required to fill out this tab
            </summary>
            <value>When set to **true**, the signer is required to fill out this tab</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Text.Locked">
            <summary>
            When set to **true**, the signer cannot change the data of the custom tab.
            </summary>
            <value>When set to **true**, the signer cannot change the data of the custom tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Text.ConcealValueOnDocument">
            <summary>
            When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
            </summary>
            <value>When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Text.DisableAutoSize">
            <summary>
            When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.
            </summary>
            <value>When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Text.MaxLength">
            <summary>
            An optional value that describes the maximum length of the property when the property is a string.
            </summary>
            <value>An optional value that describes the maximum length of the property when the property is a string.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Text.TabLabel">
            <summary>
            The label string associated with the tab.
            </summary>
            <value>The label string associated with the tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Text.Font">
            <summary>
            The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.
            </summary>
            <value>The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Text.Bold">
            <summary>
            When set to **true**, the information in the tab is bold.
            </summary>
            <value>When set to **true**, the information in the tab is bold.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Text.Italic">
            <summary>
            When set to **true**, the information in the tab is italic.
            </summary>
            <value>When set to **true**, the information in the tab is italic.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Text.Underline">
            <summary>
            When set to **true**, the information in the tab is underlined.
            </summary>
            <value>When set to **true**, the information in the tab is underlined.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Text.FontColor">
            <summary>
            The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.
            </summary>
            <value>The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Text.FontSize">
            <summary>
            The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.
            </summary>
            <value>The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Text.DocumentId">
            <summary>
            Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
            </summary>
            <value>Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Text.RecipientId">
            <summary>
            Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
            </summary>
            <value>Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Text.PageNumber">
            <summary>
            Specifies the page number on which the tab is located.
            </summary>
            <value>Specifies the page number on which the tab is located.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Text.XPosition">
            <summary>
            This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.
            </summary>
            <value>This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Text.YPosition">
            <summary>
            This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.
            </summary>
            <value>This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Text.AnchorString">
            <summary>
            Anchor text information for a radio button.
            </summary>
            <value>Anchor text information for a radio button.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Text.AnchorXOffset">
            <summary>
            Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.
            </summary>
            <value>Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Text.AnchorYOffset">
            <summary>
            Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.
            </summary>
            <value>Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Text.AnchorUnits">
            <summary>
            Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.
            </summary>
            <value>Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Text.AnchorIgnoreIfNotPresent">
            <summary>
            When set to **true**, this tab is ignored if anchorString is not found in the document.
            </summary>
            <value>When set to **true**, this tab is ignored if anchorString is not found in the document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Text.AnchorCaseSensitive">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Text.AnchorMatchWholeWord">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Text.AnchorHorizontalAlignment">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Text.TabId">
            <summary>
            The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].
            </summary>
            <value>The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Text.TemplateLocked">
            <summary>
            When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.
            </summary>
            <value>When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Text.TemplateRequired">
            <summary>
            When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.
            </summary>
            <value>When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Text.ConditionalParentLabel">
            <summary>
            For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.
            </summary>
            <value>For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Text.ConditionalParentValue">
            <summary>
            For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.
            </summary>
            <value>For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Text.CustomTabId">
            <summary>
            The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
            </summary>
            <value>The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Text.MergeField">
            <summary>
            Gets or Sets MergeField
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Text.Status">
            <summary>
            Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.
            </summary>
            <value>Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Text.ErrorDetails">
            <summary>
            Gets or Sets ErrorDetails
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Model.Text.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Text.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Text.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Text.Equals(DocuSign.eSign.Model.Text)">
            <summary>
            Returns true if Text instances are equal
            </summary>
            <param name="other">Instance of Text to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Text.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.TextCustomField">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.TextCustomField.FieldId">
            <summary>
            An ID used to specify a custom field.
            </summary>
            <value>An ID used to specify a custom field.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TextCustomField.Name">
            <summary>
            The name of the custom field.
            </summary>
            <value>The name of the custom field.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TextCustomField.Show">
            <summary>
            A boolean indicating if the value should be displayed.
            </summary>
            <value>A boolean indicating if the value should be displayed.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TextCustomField.Required">
            <summary>
            When set to **true**, the signer is required to fill out this tab
            </summary>
            <value>When set to **true**, the signer is required to fill out this tab</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TextCustomField.Value">
            <summary>
            The value of the custom field.
            </summary>
            <value>The value of the custom field.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.TextCustomField.ConfigurationType">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.TextCustomField.ErrorDetails">
            <summary>
            Gets or Sets ErrorDetails
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Model.TextCustomField.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.TextCustomField.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.TextCustomField.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.TextCustomField.Equals(DocuSign.eSign.Model.TextCustomField)">
            <summary>
            Returns true if TextCustomField instances are equal
            </summary>
            <param name="other">Instance of TextCustomField to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.TextCustomField.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.Title">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Title.Name">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Title.Value">
            <summary>
            Specifies the value of the tab.
            </summary>
            <value>Specifies the value of the tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Title.OriginalValue">
            <summary>
            The initial value of the tab when it was sent to the recipient.
            </summary>
            <value>The initial value of the tab when it was sent to the recipient.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Title.Width">
            <summary>
            Width of the tab in pixels.
            </summary>
            <value>Width of the tab in pixels.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Title.Required">
            <summary>
            When set to **true**, the signer is required to fill out this tab
            </summary>
            <value>When set to **true**, the signer is required to fill out this tab</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Title.Locked">
            <summary>
            When set to **true**, the signer cannot change the data of the custom tab.
            </summary>
            <value>When set to **true**, the signer cannot change the data of the custom tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Title.ConcealValueOnDocument">
            <summary>
            When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
            </summary>
            <value>When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Title.DisableAutoSize">
            <summary>
            When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.
            </summary>
            <value>When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Title.MaxLength">
            <summary>
            An optional value that describes the maximum length of the property when the property is a string.
            </summary>
            <value>An optional value that describes the maximum length of the property when the property is a string.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Title.TabLabel">
            <summary>
            The label string associated with the tab.
            </summary>
            <value>The label string associated with the tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Title.Font">
            <summary>
            The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.
            </summary>
            <value>The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Title.Bold">
            <summary>
            When set to **true**, the information in the tab is bold.
            </summary>
            <value>When set to **true**, the information in the tab is bold.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Title.Italic">
            <summary>
            When set to **true**, the information in the tab is italic.
            </summary>
            <value>When set to **true**, the information in the tab is italic.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Title.Underline">
            <summary>
            When set to **true**, the information in the tab is underlined.
            </summary>
            <value>When set to **true**, the information in the tab is underlined.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Title.FontColor">
            <summary>
            The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.
            </summary>
            <value>The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Title.FontSize">
            <summary>
            The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.
            </summary>
            <value>The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Title.DocumentId">
            <summary>
            Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
            </summary>
            <value>Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Title.RecipientId">
            <summary>
            Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
            </summary>
            <value>Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Title.PageNumber">
            <summary>
            Specifies the page number on which the tab is located.
            </summary>
            <value>Specifies the page number on which the tab is located.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Title.XPosition">
            <summary>
            This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.
            </summary>
            <value>This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Title.YPosition">
            <summary>
            This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.
            </summary>
            <value>This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Title.AnchorString">
            <summary>
            Anchor text information for a radio button.
            </summary>
            <value>Anchor text information for a radio button.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Title.AnchorXOffset">
            <summary>
            Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.
            </summary>
            <value>Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Title.AnchorYOffset">
            <summary>
            Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.
            </summary>
            <value>Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Title.AnchorUnits">
            <summary>
            Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.
            </summary>
            <value>Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Title.AnchorIgnoreIfNotPresent">
            <summary>
            When set to **true**, this tab is ignored if anchorString is not found in the document.
            </summary>
            <value>When set to **true**, this tab is ignored if anchorString is not found in the document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Title.AnchorCaseSensitive">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Title.AnchorMatchWholeWord">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Title.AnchorHorizontalAlignment">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Title.TabId">
            <summary>
            The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].
            </summary>
            <value>The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Title.TemplateLocked">
            <summary>
            When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.
            </summary>
            <value>When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Title.TemplateRequired">
            <summary>
            When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.
            </summary>
            <value>When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Title.ConditionalParentLabel">
            <summary>
            For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.
            </summary>
            <value>For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Title.ConditionalParentValue">
            <summary>
            For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.
            </summary>
            <value>For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Title.CustomTabId">
            <summary>
            The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
            </summary>
            <value>The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Title.MergeField">
            <summary>
            Gets or Sets MergeField
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Title.Status">
            <summary>
            Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.
            </summary>
            <value>Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Title.ErrorDetails">
            <summary>
            Gets or Sets ErrorDetails
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Model.Title.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Title.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Title.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Title.Equals(DocuSign.eSign.Model.Title)">
            <summary>
            Returns true if Title instances are equal
            </summary>
            <param name="other">Instance of Title to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Title.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.UserInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.UserInfo.UserName">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.UserInfo.Email">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.UserInfo.UserId">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.UserInfo.UserType">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.UserInfo.UserStatus">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.UserInfo.Uri">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.UserInfo.ErrorDetails">
            <summary>
            Gets or Sets ErrorDetails
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Model.UserInfo.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.UserInfo.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.UserInfo.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.UserInfo.Equals(DocuSign.eSign.Model.UserInfo)">
            <summary>
            Returns true if UserInfo instances are equal
            </summary>
            <param name="other">Instance of UserInfo to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.UserInfo.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.UserSettingsInformation">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.UserSettingsInformation.UserSettings">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.UserSettingsInformation.SignerEmailNotifications">
            <summary>
            Gets or Sets SignerEmailNotifications
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.UserSettingsInformation.SenderEmailNotifications">
            <summary>
            Gets or Sets SenderEmailNotifications
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Model.UserSettingsInformation.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.UserSettingsInformation.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.UserSettingsInformation.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.UserSettingsInformation.Equals(DocuSign.eSign.Model.UserSettingsInformation)">
            <summary>
            Returns true if UserSettingsInformation instances are equal
            </summary>
            <param name="other">Instance of UserSettingsInformation to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.UserSettingsInformation.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.ViewLinkRequest">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.ViewLinkRequest.ReturnUrl">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.ViewLinkRequest.Email">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="M:DocuSign.eSign.Model.ViewLinkRequest.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.ViewLinkRequest.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.ViewLinkRequest.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.ViewLinkRequest.Equals(DocuSign.eSign.Model.ViewLinkRequest)">
            <summary>
            Returns true if ViewLinkRequest instances are equal
            </summary>
            <param name="other">Instance of ViewLinkRequest to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.ViewLinkRequest.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.ViewUrl">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.ViewUrl.Url">
            <summary>
            The view URL to be navigated to.
            </summary>
            <value>The view URL to be navigated to.</value>
        </member>
        <member name="M:DocuSign.eSign.Model.ViewUrl.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.ViewUrl.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.ViewUrl.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.ViewUrl.Equals(DocuSign.eSign.Model.ViewUrl)">
            <summary>
            Returns true if ViewUrl instances are equal
            </summary>
            <param name="other">Instance of ViewUrl to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.ViewUrl.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.eSign.Model.Zip">
            <summary>
            
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Zip.UseDash4">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Zip.ValidationPattern">
            <summary>
            A regular expressionn used to validate input for the tab.
            </summary>
            <value>A regular expressionn used to validate input for the tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Zip.ValidationMessage">
            <summary>
            The message displayed if the custom tab fails input validation (either custom of embedded).
            </summary>
            <value>The message displayed if the custom tab fails input validation (either custom of embedded).</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Zip.Shared">
            <summary>
            When set to **true**, this custom tab is shared.
            </summary>
            <value>When set to **true**, this custom tab is shared.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Zip.RequireInitialOnSharedChange">
            <summary>
            Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.
            </summary>
            <value>Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Zip.SenderRequired">
            <summary>
            When set to **true**, the sender must populate the tab before an envelope can be sent using the template. \n\nThis value tab can only be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired` value of true cannot be deleted from an envelope.
            </summary>
            <value>When set to **true**, the sender must populate the tab before an envelope can be sent using the template. \n\nThis value tab can only be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired` value of true cannot be deleted from an envelope.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Zip.RequireAll">
            <summary>
            When set to **true** and shared is true, information must be entered in this field to complete the envelope.
            </summary>
            <value>When set to **true** and shared is true, information must be entered in this field to complete the envelope.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Zip.Name">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Zip.Value">
            <summary>
            Specifies the value of the tab.
            </summary>
            <value>Specifies the value of the tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Zip.OriginalValue">
            <summary>
            The initial value of the tab when it was sent to the recipient.
            </summary>
            <value>The initial value of the tab when it was sent to the recipient.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Zip.Width">
            <summary>
            Width of the tab in pixels.
            </summary>
            <value>Width of the tab in pixels.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Zip.Required">
            <summary>
            When set to **true**, the signer is required to fill out this tab
            </summary>
            <value>When set to **true**, the signer is required to fill out this tab</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Zip.Locked">
            <summary>
            When set to **true**, the signer cannot change the data of the custom tab.
            </summary>
            <value>When set to **true**, the signer cannot change the data of the custom tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Zip.ConcealValueOnDocument">
            <summary>
            When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
            </summary>
            <value>When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Zip.DisableAutoSize">
            <summary>
            When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.
            </summary>
            <value>When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Zip.MaxLength">
            <summary>
            An optional value that describes the maximum length of the property when the property is a string.
            </summary>
            <value>An optional value that describes the maximum length of the property when the property is a string.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Zip.TabLabel">
            <summary>
            The label string associated with the tab.
            </summary>
            <value>The label string associated with the tab.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Zip.Font">
            <summary>
            The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.
            </summary>
            <value>The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Zip.Bold">
            <summary>
            When set to **true**, the information in the tab is bold.
            </summary>
            <value>When set to **true**, the information in the tab is bold.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Zip.Italic">
            <summary>
            When set to **true**, the information in the tab is italic.
            </summary>
            <value>When set to **true**, the information in the tab is italic.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Zip.Underline">
            <summary>
            When set to **true**, the information in the tab is underlined.
            </summary>
            <value>When set to **true**, the information in the tab is underlined.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Zip.FontColor">
            <summary>
            The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.
            </summary>
            <value>The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Zip.FontSize">
            <summary>
            The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.
            </summary>
            <value>The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Zip.DocumentId">
            <summary>
            Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
            </summary>
            <value>Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Zip.RecipientId">
            <summary>
            Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
            </summary>
            <value>Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Zip.PageNumber">
            <summary>
            Specifies the page number on which the tab is located.
            </summary>
            <value>Specifies the page number on which the tab is located.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Zip.XPosition">
            <summary>
            This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.
            </summary>
            <value>This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Zip.YPosition">
            <summary>
            This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.
            </summary>
            <value>This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Zip.AnchorString">
            <summary>
            Anchor text information for a radio button.
            </summary>
            <value>Anchor text information for a radio button.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Zip.AnchorXOffset">
            <summary>
            Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.
            </summary>
            <value>Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Zip.AnchorYOffset">
            <summary>
            Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.
            </summary>
            <value>Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Zip.AnchorUnits">
            <summary>
            Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.
            </summary>
            <value>Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Zip.AnchorIgnoreIfNotPresent">
            <summary>
            When set to **true**, this tab is ignored if anchorString is not found in the document.
            </summary>
            <value>When set to **true**, this tab is ignored if anchorString is not found in the document.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Zip.AnchorCaseSensitive">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Zip.AnchorMatchWholeWord">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Zip.AnchorHorizontalAlignment">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:DocuSign.eSign.Model.Zip.TabId">
            <summary>
            The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].
            </summary>
            <value>The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Zip.TemplateLocked">
            <summary>
            When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.
            </summary>
            <value>When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Zip.TemplateRequired">
            <summary>
            When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.
            </summary>
            <value>When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Zip.ConditionalParentLabel">
            <summary>
            For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.
            </summary>
            <value>For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Zip.ConditionalParentValue">
            <summary>
            For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.
            </summary>
            <value>For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Zip.CustomTabId">
            <summary>
            The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
            </summary>
            <value>The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Zip.MergeField">
            <summary>
            Gets or Sets MergeField
            </summary>
        </member>
        <member name="P:DocuSign.eSign.Model.Zip.Status">
            <summary>
            Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.
            </summary>
            <value>Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.</value>
        </member>
        <member name="P:DocuSign.eSign.Model.Zip.ErrorDetails">
            <summary>
            Gets or Sets ErrorDetails
            </summary>
        </member>
        <member name="M:DocuSign.eSign.Model.Zip.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Zip.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Zip.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Zip.Equals(DocuSign.eSign.Model.Zip)">
            <summary>
            Returns true if Zip instances are equal
            </summary>
            <param name="other">Instance of Zip to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.eSign.Model.Zip.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
    </members>
</doc>
